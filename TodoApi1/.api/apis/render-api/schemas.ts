const AddDisk = {"body":{"type":"object","required":["name","sizeGB","mountPath","serviceId"],"properties":{"name":{"type":"string"},"sizeGB":{"type":"integer"},"mountPath":{"type":"string"},"serviceId":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"201":{"type":"object","required":["id","name","sizeGB","mountPath","createdAt","updatedAt"],"properties":{"id":{"type":"string","pattern":"^dsk-[0-9a-z]{20}$","examples":["dsk-cph1rs3idesc73a2b2mg"]},"name":{"type":"string"},"sizeGB":{"type":"integer"},"mountPath":{"type":"string"},"serviceId":{"type":"string"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const AddHeaders = {"body":{"type":"object","required":["path","name","value"],"properties":{"path":{"type":"string","description":"The request path to add the header to. Wildcards will cause headers to be applied to all matching paths.","examples":["/static/*"]},"name":{"type":"string","description":"Header name","examples":["Cache-Control"]},"value":{"type":"string","description":"Header value","examples":["public, max-age=604800"]}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]}]},"response":{"201":{"type":"object","properties":{"headers":{"type":"object","required":["id","path","name","value"],"properties":{"id":{"type":"string"},"path":{"type":"string"},"name":{"type":"string"},"value":{"type":"string"}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const AddOrUpdateSecretFile = {"body":{"properties":{"content":{"type":"string"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"},"secretFileName":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The file name of the secret file"}},"required":["serviceId","secretFileName"]}]},"response":{"201":{"type":"object","required":["name","content"],"properties":{"name":{"type":"string"},"content":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const AddResourcesToEnvironment = {"body":{"type":"object","required":["resourceIds"],"properties":{"resourceIds":{"type":"array","items":{"type":"string","description":"The ID of an env group, a service, a PostgreSQL database, or a Redis instance"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"environmentId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":["environmentId"]}]},"response":{"200":{"type":"object","required":["id","name","projectId","databasesIds","redisIds","serviceIds","envGroupIds","protectedStatus","networkIsolationEnabled"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"projectId":{"type":"string"},"databasesIds":{"type":"array","items":{"type":"string"}},"redisIds":{"type":"array","items":{"type":"string"}},"serviceIds":{"type":"array","items":{"type":"string"}},"envGroupIds":{"type":"array","items":{"type":"string"}},"protectedStatus":{"type":"string","description":"Indicates whether an environment is `unprotected` or `protected`. Only admin users can perform destructive actions in `protected` environments.\n\n`unprotected` `protected`","enum":["unprotected","protected"]},"networkIsolationEnabled":{"type":"boolean","description":"Indicates whether network connections across environments are allowed."}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const AddRoute = {"body":{"type":"object","required":["type","source","destination"],"properties":{"type":{"type":"string","enum":["redirect","rewrite"]},"source":{"type":"string","examples":["/:bar/foo"]},"destination":{"type":"string","examples":["/foo/:bar"]},"priority":{"type":"integer","description":"Redirect and Rewrite Rules are applied in priority order starting at 0. Defaults to last in the priority list."}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]}]},"response":{"201":{"type":"object","required":["id","type","source","destination","priority"],"properties":{"id":{"type":"string"},"type":{"type":"string","enum":["redirect","rewrite"],"description":"`redirect` `rewrite`"},"source":{"type":"string"},"destination":{"type":"string"},"priority":{"type":"integer","description":"Redirect and Rewrite Rules are applied in priority order starting at 0"}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const AutoscaleService = {"body":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]}]},"response":{"200":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const CancelCronJobRun = {"metadata":{"allOf":[{"type":"object","properties":{"cronJobId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the cron job"}},"required":["cronJobId"]}]},"response":{"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const CancelDeploy = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"},"deployId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the deploy"}},"required":["serviceId","deployId"]}]},"response":{"200":{"type":"object","required":["id"],"properties":{"id":{"type":"string"},"commit":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"},"createdAt":{"type":"string","format":"date-time"}}},"image":{"description":"Image information used when creating the deploy. Not present for Git-backed deploys","type":"object","properties":{"ref":{"description":"Image reference used when creating the deploy","type":"string"},"sha":{"description":"SHA that the image reference was resolved to when creating the deploy","type":"string"},"registryCredential":{"description":"Name of credential used to pull the image, if provided","type":"string"}}},"status":{"type":"string","enum":["created","build_in_progress","update_in_progress","live","deactivated","build_failed","update_failed","canceled","pre_deploy_in_progress","pre_deploy_failed"],"description":"`created` `build_in_progress` `update_in_progress` `live` `deactivated` `build_failed` `update_failed` `canceled` `pre_deploy_in_progress` `pre_deploy_failed`"},"trigger":{"type":"string","enum":["api","blueprint_sync","deploy_hook","deployed_by_render","manual","other","new_commit","rollback","service_resumed","service_updated"],"description":"`api` `blueprint_sync` `deploy_hook` `deployed_by_render` `manual` `other` `new_commit` `rollback` `service_resumed` `service_updated`"},"finishedAt":{"type":"string","format":"date-time"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const CancelJob = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"},"jobId":{"type":"string","pattern":"^job-[0-9a-z]{20}$","examples":["job-cph1rs3idesc73a2b2mg"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the job"}},"required":["serviceId","jobId"]}]},"response":{"200":{"type":"object","required":["id","serviceId","startCommand","planId","createdAt"],"properties":{"id":{"type":"string","pattern":"^job-[0-9a-z]{20}$","examples":["job-cph1rs3idesc73a2b2mg"]},"serviceId":{"type":"string","examples":["srv-xxxxx"]},"startCommand":{"type":"string","examples":["echo 'hello world'"]},"planId":{"type":"string","examples":["plan-srv-004"]},"status":{"type":"string","enum":["succeeded","failed","canceled"],"description":"`succeeded` `failed` `canceled`"},"createdAt":{"type":"string","format":"date-time","examples":["2021-07-15T07:20:05.777035-07:00"]},"startedAt":{"type":"string","format":"date-time","examples":["2021-07-15T07:20:05.777035-07:00"]},"finishedAt":{"type":"string","format":"date-time","examples":["2021-07-15T07:20:05.777035-07:00"]}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const CreateCustomDomain = {"body":{"type":"object","required":["name"],"properties":{"name":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]}]},"response":{"201":{"type":"array","items":{"type":"object","required":["id","name","domainType","publicSuffix","verificationStatus","createdAt","redirectForName"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"domainType":{"type":"string","enum":["apex","subdomain"],"description":"`apex` `subdomain`"},"publicSuffix":{"type":"string"},"redirectForName":{"type":"string"},"verificationStatus":{"type":"string","enum":["verified","unverified"],"description":"`verified` `unverified`"},"createdAt":{"type":"string","format":"date-time"},"server":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"402":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"409":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const CreateDeploy = {"body":{"type":"object","properties":{"clearCache":{"type":"string","enum":["clear","do_not_clear"],"default":"do_not_clear","description":"If `clear`, Render clears the service's build cache before deploying. This can be useful if you're experiencing issues with your build.\n\nDefault: `do_not_clear`"},"commitId":{"type":"string","description":"The SHA of a specific Git commit to deploy for a service. Defaults to the latest commit on the service's connected branch.\n\nNote that deploying a specific commit with this endpoint does not disable autodeploys for the service.\n\nYou can toggle autodeploys for your service with the [Update service](https://api-docs.render.com/reference/update-service) endpoint or in the Render Dashboard.\n\nNot supported for cron jobs.\n"},"imageUrl":{"type":"string","description":"The URL of the image to deploy for an image-backed service.\n\nThe host, repository, and image name all must match the currently configured image for the service.\n"}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]}]},"response":{"201":{"type":"object","required":["id"],"properties":{"id":{"type":"string"},"commit":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"},"createdAt":{"type":"string","format":"date-time"}}},"image":{"description":"Image information used when creating the deploy. Not present for Git-backed deploys","type":"object","properties":{"ref":{"description":"Image reference used when creating the deploy","type":"string"},"sha":{"description":"SHA that the image reference was resolved to when creating the deploy","type":"string"},"registryCredential":{"description":"Name of credential used to pull the image, if provided","type":"string"}}},"status":{"type":"string","enum":["created","build_in_progress","update_in_progress","live","deactivated","build_failed","update_failed","canceled","pre_deploy_in_progress","pre_deploy_failed"],"description":"`created` `build_in_progress` `update_in_progress` `live` `deactivated` `build_failed` `update_failed` `canceled` `pre_deploy_in_progress` `pre_deploy_failed`"},"trigger":{"type":"string","enum":["api","blueprint_sync","deploy_hook","deployed_by_render","manual","other","new_commit","rollback","service_resumed","service_updated"],"description":"`api` `blueprint_sync` `deploy_hook` `deployed_by_render` `manual` `other` `new_commit` `rollback` `service_resumed` `service_updated`"},"finishedAt":{"type":"string","format":"date-time"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"409":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const CreateEnvGroup = {"body":{"type":"object","required":["name","ownerId","envVars"],"properties":{"name":{"type":"string"},"ownerId":{"type":"string"},"envVars":{"type":"array","items":{"type":"object","oneOf":[{"type":"object","required":["key","value"],"properties":{"key":{"type":"string"},"value":{"type":"string"}}},{"type":"object","required":["key","generateValue"],"properties":{"key":{"type":"string"},"generateValue":{"type":"boolean"}}}]}},"secretFiles":{"type":"array","items":{"type":"object","required":["name","content"],"properties":{"name":{"type":"string"},"content":{"type":"string"}}}},"serviceIds":{"type":"array","items":{"description":"List of serviceIds to link the envGroup to","type":"string"}},"environmentId":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"201":{"type":"object","required":["createdAt","envVars","id","name","ownerId","secretFiles","serviceLinks","updatedAt"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"ownerId":{"type":"string"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"},"serviceLinks":{"description":"List of serviceIds linked to the envGroup","type":"array","items":{"type":"object","required":["id","name","type"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["static","web","pserv","worker","cron"],"description":"`static` `web` `pserv` `worker` `cron`"}}}},"environmentId":{"type":"string"},"envVars":{"type":"array","items":{"type":"object","required":["key","value"],"properties":{"key":{"type":"string"},"value":{"type":"string"}}}},"secretFiles":{"type":"array","items":{"type":"object","required":["name","content"],"properties":{"name":{"type":"string"},"content":{"type":"string"}}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const CreateEnvironment = {"body":{"type":"object","required":["name","projectId"],"properties":{"name":{"type":"string"},"projectId":{"type":"string"},"protectedStatus":{"type":"string","description":"Indicates whether an environment is `unprotected` or `protected`. Only admin users can perform destructive actions in `protected` environments.","enum":["unprotected","protected"]},"networkIsolationEnabled":{"type":"boolean","description":"Indicates whether network connections across environments are allowed."}},"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"201":{"type":"object","required":["id","name","projectId","databasesIds","redisIds","serviceIds","envGroupIds","protectedStatus","networkIsolationEnabled"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"projectId":{"type":"string"},"databasesIds":{"type":"array","items":{"type":"string"}},"redisIds":{"type":"array","items":{"type":"string"}},"serviceIds":{"type":"array","items":{"type":"string"}},"envGroupIds":{"type":"array","items":{"type":"string"}},"protectedStatus":{"type":"string","description":"Indicates whether an environment is `unprotected` or `protected`. Only admin users can perform destructive actions in `protected` environments.\n\n`unprotected` `protected`","enum":["unprotected","protected"]},"networkIsolationEnabled":{"type":"boolean","description":"Indicates whether network connections across environments are allowed."}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const CreatePostgres = {"body":{"type":"object","required":["name","plan","ownerId","version"],"properties":{"databaseName":{"type":"string","default":"randomly generated"},"databaseUser":{"type":"string","default":"randomly generated"},"datadogAPIKey":{"type":"string"},"name":{"type":"string","description":"The name of the database as it will appear in the Render Dashboard"},"enableHighAvailability":{"type":"boolean","default":false},"environmentId":{"type":"string"},"ownerId":{"type":"string","description":"The ID of the owner (team or personal user) whose resources should be returned"},"plan":{"type":"string","enum":["free","starter","standard","pro","pro_plus","custom","basic_256mb","basic_1gb","basic_4gb","pro_4gb","pro_8gb","pro_16gb","pro_32gb","pro_64gb","pro_128gb","pro_192gb","pro_256gb","pro_384gb","pro_512gb","accelerated_16gb","accelerated_32gb","accelerated_64gb","accelerated_128gb","accelerated_256gb","accelerated_384gb","accelerated_512gb","accelerated_768gb","accelerated_1024gb"]},"diskSizeGB":{"type":"integer","description":"The number of gigabytes of disk space to allocate for the database"},"region":{"type":"string"},"ipAllowList":{"type":"array","items":{"type":"object","required":["cidrBlock","description"],"properties":{"cidrBlock":{"type":"string"},"description":{"description":"User-provided description of the CIDR block","type":"string"}}}},"readReplicas":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"The display name of the replica instance."}},"required":["name"]}},"version":{"type":"string","description":"The PostgreSQL version","enum":["11","12","13","14","15","16"]}},"description":"Input for creating a database","$schema":"http://json-schema.org/draft-04/schema#"},"response":{"201":{"type":"object","required":["id","ipAllowList","createdAt","updatedAt","dashboardUrl","databaseName","databaseUser","highAvailabilityEnabled","name","owner","project","plan","region","readReplicas","role","status","version","suspended","suspenders"],"properties":{"id":{"type":"string"},"ipAllowList":{"type":"array","items":{"type":"object","required":["cidrBlock","description"],"properties":{"cidrBlock":{"type":"string"},"description":{"description":"User-provided description of the CIDR block","type":"string"}}}},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"},"expiresAt":{"description":"The time at which the database will be expire. Applies to free tier databases only.","type":"string","format":"date-time"},"dashboardUrl":{"type":"string","description":"The URL to view the PostgreSQL instance in the Render Dashboard"},"databaseName":{"type":"string"},"databaseUser":{"type":"string"},"environmentId":{"type":"string"},"highAvailabilityEnabled":{"type":"boolean"},"maintenance":{"type":"object","required":["id","type","scheduledAt","state"],"properties":{"id":{"type":"string","pattern":"^mrn-[0-9a-z]{20}$","examples":["mrn-cph1rs3idesc73a2b2mg"]},"type":{"type":"string"},"scheduledAt":{"type":"string","format":"date-time"},"pendingMaintenanceBy":{"type":"string","format":"date-time","description":"If present, the maintenance run cannot be scheduled for later than this date-time."},"state":{"type":"string","enum":["scheduled","in_progress","user_fix_required","cancelled","succeeded","failed"],"description":"`scheduled` `in_progress` `user_fix_required` `cancelled` `succeeded` `failed`"}}},"name":{"type":"string"},"owner":{"type":"object","required":["id","name","email","type"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"email":{"type":"string"},"twoFactorAuthEnabled":{"type":"boolean","description":"Whether two-factor authentication is enabled for the owner. Only present for user owners."},"type":{"type":"string","enum":["user","team"],"description":"`user` `team`"}}},"plan":{"type":"string","enum":["free","starter","standard","pro","pro_plus","custom","basic_256mb","basic_1gb","basic_4gb","pro_4gb","pro_8gb","pro_16gb","pro_32gb","pro_64gb","pro_128gb","pro_192gb","pro_256gb","pro_384gb","pro_512gb","accelerated_16gb","accelerated_32gb","accelerated_64gb","accelerated_128gb","accelerated_256gb","accelerated_384gb","accelerated_512gb","accelerated_768gb","accelerated_1024gb"],"description":"`free` `starter` `standard` `pro` `pro_plus` `custom` `basic_256mb` `basic_1gb` `basic_4gb` `pro_4gb` `pro_8gb` `pro_16gb` `pro_32gb` `pro_64gb` `pro_128gb` `pro_192gb` `pro_256gb` `pro_384gb` `pro_512gb` `accelerated_16gb` `accelerated_32gb` `accelerated_64gb` `accelerated_128gb` `accelerated_256gb` `accelerated_384gb` `accelerated_512gb` `accelerated_768gb` `accelerated_1024gb`"},"diskSizeGB":{"type":"integer"},"primaryPostgresID":{"type":"string"},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore","virginia"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore` `virginia`"},"readReplicas":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"The replica instance identifier."},"name":{"type":"string","description":"The display name of the replica instance."}},"required":["id","name"]}},"role":{"type":"string","enum":["primary","replica"],"description":"`primary` `replica`"},"status":{"type":"string","enum":["creating","available","unavailable","config_restart","suspended","maintenance_scheduled","maintenance_in_progress","recovery_failed","recovery_in_progress","unknown","updating_instance"],"description":"`creating` `available` `unavailable` `config_restart` `suspended` `maintenance_scheduled` `maintenance_in_progress` `recovery_failed` `recovery_in_progress` `unknown` `updating_instance`"},"version":{"type":"string","description":"The PostgreSQL version\n\n`11` `12` `13` `14` `15` `16`","enum":["11","12","13","14","15","16"]},"suspended":{"type":"string","enum":["suspended","not_suspended"],"description":"`suspended` `not_suspended`"},"suspenders":{"type":"array","items":{"type":"string","enum":["admin","billing","user","parent_service","unknown"],"description":"`admin` `billing` `user` `parent_service` `unknown`"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const CreatePostgresBackup = {"metadata":{"allOf":[{"type":"object","properties":{"postgresId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":["postgresId"]}]},"response":{"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const CreateProject = {"body":{"type":"object","required":["name","ownerId","environments"],"properties":{"name":{"description":"The name of the project","type":"string"},"ownerId":{"description":"The ID of the owner that the project belongs to","type":"string"},"environments":{"description":"The environments to create when creating the project","type":"array","items":{"type":"object","required":["name"],"properties":{"name":{"type":"string"},"protectedStatus":{"type":"string","description":"Indicates whether an environment is `unprotected` or `protected`. Only admin users can perform destructive actions in `protected` environments.","enum":["unprotected","protected"]},"networkIsolationEnabled":{"type":"boolean","description":"Indicates whether network connections across environments are allowed."}}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"201":{"description":"A project is a collection of environments","type":"object","required":["id","createdAt","updatedAt","name","owner","environmentIds"],"properties":{"id":{"description":"The ID of the project","type":"string"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"},"name":{"description":"The name of the project","type":"string"},"owner":{"type":"object","required":["id","name","email","type"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"email":{"type":"string"},"twoFactorAuthEnabled":{"type":"boolean","description":"Whether two-factor authentication is enabled for the owner. Only present for user owners."},"type":{"type":"string","enum":["user","team"],"description":"`user` `team`"}}},"environmentIds":{"description":"The environments associated with the project","type":"array","items":{"type":"string","description":"The ID of the environment"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const CreateRedis = {"body":{"type":"object","description":"Input type for creating a Redis instance","required":["name","ownerId","plan"],"properties":{"name":{"type":"string","description":"The name of the Redis instance"},"ownerId":{"type":"string","description":"The ID of the owner of the Redis instance"},"plan":{"type":"string","enum":["free","starter","standard","pro","pro_plus","custom"],"x-enum-varnames":["RedisPlanFree","RedisPlanStarter","RedisPlanStandard","RedisPlanPro","RedisPlanPro_plus","RedisPlanCustom"]},"region":{"type":"string","description":"The region where the Redis instance is located"},"environmentId":{"type":"string"},"maxmemoryPolicy":{"type":"string","description":"The eviction policy for the Key / Value instance","enum":["noeviction","allkeys_lfu","allkeys_lru","allkeys_random","volatile_lfu","volatile_lru","volatile_random","volatile_ttl"]},"ipAllowList":{"type":"array","items":{"type":"object","required":["cidrBlock","description"],"properties":{"cidrBlock":{"type":"string"},"description":{"description":"User-provided description of the CIDR block","type":"string"}}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"201":{"type":"object","description":"A Redis instance","required":["id","createdAt","updatedAt","status","region","plan","name","owner","options","ipAllowList","version"],"properties":{"id":{"description":"The ID of the Redis instance","type":"string"},"createdAt":{"description":"The creation time of the Redis instance","type":"string","format":"date-time"},"updatedAt":{"description":"The last updated time of the Redis instance","type":"string","format":"date-time"},"status":{"type":"string","enum":["creating","available","unavailable","config_restart","suspended","maintenance_scheduled","maintenance_in_progress","recovery_failed","recovery_in_progress","unknown","updating_instance"],"description":"`creating` `available` `unavailable` `config_restart` `suspended` `maintenance_scheduled` `maintenance_in_progress` `recovery_failed` `recovery_in_progress` `unknown` `updating_instance`"},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore","virginia"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore` `virginia`"},"plan":{"type":"string","enum":["free","starter","standard","pro","pro_plus","custom"],"x-enum-varnames":["RedisPlanFree","RedisPlanStarter","RedisPlanStandard","RedisPlanPro","RedisPlanPro_plus","RedisPlanCustom"],"description":"`free` `starter` `standard` `pro` `pro_plus` `custom`"},"name":{"description":"The name of the Redis instance","type":"string"},"owner":{"type":"object","required":["id","name","email","type"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"email":{"type":"string"},"twoFactorAuthEnabled":{"type":"boolean","description":"Whether two-factor authentication is enabled for the owner. Only present for user owners."},"type":{"type":"string","enum":["user","team"],"description":"`user` `team`"}}},"options":{"description":"Options for a Redis instance","type":"object","properties":{"maxmemoryPolicy":{"type":"string"}}},"ipAllowList":{"description":"The IP allow list for the Redis instance","type":"array","items":{"type":"object","required":["cidrBlock","description"],"properties":{"cidrBlock":{"type":"string"},"description":{"description":"User-provided description of the CIDR block","type":"string"}}}},"environmentId":{"description":"The ID of the environment the Redis instance is associated with","type":"string"},"version":{"description":"The version of Redis","type":"string"},"maintenance":{"type":"object","required":["id","type","scheduledAt","state"],"properties":{"id":{"type":"string","pattern":"^mrn-[0-9a-z]{20}$","examples":["mrn-cph1rs3idesc73a2b2mg"]},"type":{"type":"string"},"scheduledAt":{"type":"string","format":"date-time"},"pendingMaintenanceBy":{"type":"string","format":"date-time","description":"If present, the maintenance run cannot be scheduled for later than this date-time."},"state":{"type":"string","enum":["scheduled","in_progress","user_fix_required","cancelled","succeeded","failed"],"description":"`scheduled` `in_progress` `user_fix_required` `cancelled` `succeeded` `failed`"}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const CreateRegistryCredential = {"body":{"type":"object","required":["name","registry","username","authToken","ownerId"],"properties":{"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT","AWS_ECR"],"description":"The registry to use this credential with"},"name":{"type":"string"},"username":{"type":"string"},"authToken":{"type":"string"},"ownerId":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"200":{"type":"object","required":["id","name","username","registry","updatedAt"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT","AWS_ECR"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT` `AWS_ECR`"},"username":{"type":"string","description":"The username associated with the credential"},"updatedAt":{"type":"string","format":"date-time","description":"Last updated time for the credential"}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"402":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"409":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const CreateService = {"body":{"type":"object","required":["type","name","ownerId"],"properties":{"type":{"type":"string","enum":["static_site","web_service","private_service","background_worker","cron_job"]},"name":{"type":"string"},"ownerId":{"type":"string"},"repo":{"type":"string","description":"Do not include the branch in the repo string. You can instead supply a 'branch' parameter.","examples":["https://github.com/render-examples/flask-hello-world"]},"autoDeploy":{"type":"string","enum":["yes","no"],"default":"yes","description":"Default: yes"},"branch":{"type":"string","description":"If left empty, this will fall back to the default branch of the repository"},"image":{"type":"object","required":["imagePath","ownerId"],"properties":{"ownerId":{"type":"string","description":"The ID of the owner for this image. This should match the owner of the service as well as the owner of any specified registry credential."},"registryCredentialId":{"type":"string","description":"Optional reference to the registry credential passed to the image repository to retrieve this image."},"imagePath":{"type":"string","description":"Path to the image used for this server (e.g docker.io/library/nginx:latest)."}}},"buildFilter":{"type":"object","required":["paths","ignoredPaths"],"properties":{"paths":{"type":"array","items":{"type":"string"}},"ignoredPaths":{"type":"array","items":{"type":"string"}}}},"rootDir":{"type":"string"},"envVars":{"type":"array","items":{"type":"object","oneOf":[{"type":"object","required":["key","value"],"properties":{"key":{"type":"string"},"value":{"type":"string"}}},{"type":"object","required":["key","generateValue"],"properties":{"key":{"type":"string"},"generateValue":{"type":"boolean"}}}]}},"secretFiles":{"type":"array","items":{"type":"object","required":["name","content"],"properties":{"name":{"type":"string"},"content":{"type":"string"}}}},"serviceDetails":{"oneOf":[{"type":"object","properties":{"buildCommand":{"type":"string"},"headers":{"type":"array","items":{"type":"object","required":["path","name","value"],"properties":{"path":{"type":"string","description":"The request path to add the header to. Wildcards will cause headers to be applied to all matching paths.","examples":["/static/*"]},"name":{"type":"string","description":"Header name","examples":["Cache-Control"]},"value":{"type":"string","description":"Header value","examples":["public, max-age=604800"]}}}},"publishPath":{"type":"string","description":"Defaults to \"public\""},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"default":"no","deprecated":true,"description":"This field has been deprecated. previews.generation should be used in its place.\n\nDefault: `no`"},"previews":{"type":"object","properties":{"generation":{"type":"string","enum":["off","manual","automatic"],"default":"off","description":"Defaults to \"off\"\n\nDefault: `off`"}}},"routes":{"type":"array","items":{"type":"object","required":["type","source","destination"],"properties":{"type":{"type":"string","enum":["redirect","rewrite"]},"source":{"type":"string","examples":["/:bar/foo"]},"destination":{"type":"string","examples":["/foo/:bar"]},"priority":{"type":"integer","description":"Redirect and Rewrite Rules are applied in priority order starting at 0. Defaults to last in the priority list."}}}}}},{"type":"object","required":["runtime"],"properties":{"autoscaling":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}}},"disk":{"type":"object","required":["name","mountPath"],"properties":{"name":{"type":"string"},"mountPath":{"type":"string"},"sizeGB":{"type":"integer","minimum":1,"description":"Defaults to 1"}}},"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"deprecated":true,"description":"This field has been deprecated, runtime should be used in its place."},"runtime":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime"},"envSpecificDetails":{"oneOf":[{"type":"object","properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string","description":"Defaults to \"./Dockerfile\""},"registryCredentialId":{"type":"string"}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"}},"description":"Fields for native environment (runtime) services"}]},"healthCheckPath":{"type":"string"},"maintenanceMode":{"type":"object","required":["enabled","uri"],"properties":{"enabled":{"type":"boolean"},"uri":{"type":"string","description":"The page to be served when [maintenance mode](https://docs.render.com/maintenance-mode) is enabled. When empty, the default maintenance mode page is served."}}},"numInstances":{"type":"integer","minimum":1,"description":"Defaults to 1"},"plan":{"type":"string","enum":["starter","standard","pro","pro_plus","pro_max","pro_ultra"],"default":"starter","description":"Defaults to \"starter\"\n\nDefault: `starter`"},"preDeployCommand":{"type":"string"},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"default":"no","deprecated":true,"description":"This field has been deprecated. previews.generation should be used in its place.\n\nDefault: `no`"},"previews":{"type":"object","properties":{"generation":{"type":"string","enum":["off","manual","automatic"],"default":"off","description":"Defaults to \"off\"\n\nDefault: `off`"}}},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore","virginia"],"default":"oregon","description":"Defaults to \"oregon\"\n\nDefault: `oregon`"},"maxShutdownDelaySeconds":{"type":"integer","description":"The maximum amount of time (in seconds) that Render waits for your application process to exit gracefully after sending it a SIGTERM signal.","minimum":1,"maximum":300,"default":30}}},{"type":"object","required":["runtime"],"properties":{"autoscaling":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}}},"disk":{"type":"object","required":["name","mountPath"],"properties":{"name":{"type":"string"},"mountPath":{"type":"string"},"sizeGB":{"type":"integer","minimum":1,"description":"Defaults to 1"}}},"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"deprecated":true,"description":"This field has been deprecated, runtime should be used in its place."},"runtime":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime"},"envSpecificDetails":{"oneOf":[{"type":"object","properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string","description":"Defaults to \"./Dockerfile\""},"registryCredentialId":{"type":"string"}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"}},"description":"Fields for native environment (runtime) services"}]},"numInstances":{"type":"integer","minimum":1,"default":1,"description":"Defaults to 1"},"plan":{"type":"string","enum":["starter","standard","pro","pro_plus","pro_max","pro_ultra"],"default":"starter","description":"Defaults to \"starter\"\n\nDefault: `starter`"},"preDeployCommand":{"type":"string"},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"default":"no","deprecated":true,"description":"This field has been deprecated. previews.generation should be used in its place.\n\nDefault: `no`"},"previews":{"type":"object","properties":{"generation":{"type":"string","enum":["off","manual","automatic"],"default":"off","description":"Defaults to \"off\"\n\nDefault: `off`"}}},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore","virginia"],"default":"oregon","description":"Defaults to \"oregon\"\n\nDefault: `oregon`"},"maxShutdownDelaySeconds":{"type":"integer","description":"The maximum amount of time (in seconds) that Render waits for your application process to exit gracefully after sending it a SIGTERM signal.","minimum":1,"maximum":300,"default":30}}},{"type":"object","required":["runtime"],"properties":{"autoscaling":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}}},"disk":{"type":"object","required":["name","mountPath"],"properties":{"name":{"type":"string"},"mountPath":{"type":"string"},"sizeGB":{"type":"integer","minimum":1,"description":"Defaults to 1"}}},"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"deprecated":true,"description":"This field has been deprecated, runtime should be used in its place."},"runtime":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime"},"envSpecificDetails":{"oneOf":[{"type":"object","properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string","description":"Defaults to \"./Dockerfile\""},"registryCredentialId":{"type":"string"}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"}},"description":"Fields for native environment (runtime) services"}]},"numInstances":{"type":"integer","minimum":1,"default":1,"description":"Defaults to 1"},"plan":{"type":"string","enum":["starter","standard","pro","pro_plus","pro_max","pro_ultra"],"default":"starter","description":"Defaults to \"starter\"\n\nDefault: `starter`"},"preDeployCommand":{"type":"string"},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"default":"no","deprecated":true,"description":"This field has been deprecated. previews.generation should be used in its place.\n\nDefault: `no`"},"previews":{"type":"object","properties":{"generation":{"type":"string","enum":["off","manual","automatic"],"default":"off","description":"Defaults to \"off\"\n\nDefault: `off`"}}},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore","virginia"],"default":"oregon","description":"Defaults to \"oregon\"\n\nDefault: `oregon`"},"maxShutdownDelaySeconds":{"type":"integer","description":"The maximum amount of time (in seconds) that Render waits for your application process to exit gracefully after sending it a SIGTERM signal.","minimum":1,"maximum":300,"default":30}}},{"type":"object","required":["runtime","schedule"],"properties":{"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"deprecated":true,"description":"This field has been deprecated, runtime should be used in its place."},"runtime":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry","updatedAt"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT","AWS_ECR"],"description":"The registry to use this credential with"},"username":{"type":"string","description":"The username associated with the credential"},"updatedAt":{"type":"string","format":"date-time","description":"Last updated time for the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"plan":{"type":"string","enum":["starter","standard","pro","pro_plus","pro_max","pro_ultra"],"default":"starter","description":"Defaults to \"starter\"\n\nDefault: `starter`"},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore","virginia"],"default":"oregon","description":"Defaults to \"oregon\"\n\nDefault: `oregon`"},"schedule":{"type":"string"}}}]}},"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"201":{"type":"object","properties":{"service":{"type":"object","required":["id","name","ownerId","type","createdAt","dashboardUrl","updatedAt","suspended","suspenders","autoDeploy","notifyOnFail","slug","serviceDetails","rootDir"],"properties":{"id":{"type":"string"},"autoDeploy":{"type":"string","enum":["yes","no"],"default":"yes","description":"`yes` `no`"},"branch":{"type":"string"},"buildFilter":{"type":"object","required":["paths","ignoredPaths"],"properties":{"paths":{"type":"array","items":{"type":"string"}},"ignoredPaths":{"type":"array","items":{"type":"string"}}}},"createdAt":{"type":"string","format":"date-time"},"dashboardUrl":{"type":"string","description":"The URL to view the service in the Render Dashboard"},"environmentId":{"type":"string"},"imagePath":{"type":"string"},"name":{"type":"string"},"notifyOnFail":{"type":"string","enum":["default","notify","ignore"],"description":"`default` `notify` `ignore`"},"ownerId":{"type":"string"},"registryCredential":{"type":"object","required":["id","name"],"properties":{"id":{"type":"string"},"name":{"type":"string"}}},"repo":{"type":"string","examples":["https://github.com/render-examples/flask-hello-world"]},"rootDir":{"type":"string"},"slug":{"type":"string"},"suspended":{"type":"string","enum":["suspended","not_suspended"],"description":"`suspended` `not_suspended`"},"suspenders":{"type":"array","items":{"type":"string","enum":["admin","billing","user","parent_service","unknown"],"description":"`admin` `billing` `user` `parent_service` `unknown`"}},"type":{"type":"string","enum":["static_site","web_service","private_service","background_worker","cron_job"],"description":"`static_site` `web_service` `private_service` `background_worker` `cron_job`"},"updatedAt":{"type":"string","format":"date-time"},"serviceDetails":{"oneOf":[{"type":"object","required":["buildCommand","publishPath","url","buildPlan"],"properties":{"buildCommand":{"type":"string"},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"publishPath":{"type":"string"},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"default":"no","deprecated":true,"description":"This field has been deprecated. previews.generation should be used in its place.\n\n`yes` `no`"},"previews":{"type":"object","properties":{"generation":{"type":"string","enum":["off","manual","automatic"],"default":"off","description":"Defaults to \"off\"\n\n`off` `manual` `automatic`"}}},"url":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"}}},{"type":"object","required":["env","runtime","envSpecificDetails","plan","region","numInstances","buildPlan","healthCheckPath","openPorts","url"],"properties":{"autoscaling":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}}},"disk":{"type":"object","required":["id","name","sizeGB","mountPath"],"properties":{"id":{"type":"string","pattern":"^dsk-[0-9a-z]{20}$","examples":["dsk-cph1rs3idesc73a2b2mg"]},"name":{"type":"string"},"sizeGB":{"type":"integer"},"mountPath":{"type":"string"}}},"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"deprecated":true,"description":"This field has been deprecated, runtime should be used in its place.\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry","updatedAt"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT","AWS_ECR"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT` `AWS_ECR`"},"username":{"type":"string","description":"The username associated with the credential"},"updatedAt":{"type":"string","format":"date-time","description":"Last updated time for the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"healthCheckPath":{"type":"string"},"maintenanceMode":{"type":"object","required":["enabled","uri"],"properties":{"enabled":{"type":"boolean"},"uri":{"type":"string","description":"The page to be served when [maintenance mode](https://docs.render.com/maintenance-mode) is enabled. When empty, the default maintenance mode page is served."}}},"numInstances":{"type":"integer","description":"For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."},"openPorts":{"type":"array","items":{"type":"object","required":["port","protocol"],"properties":{"port":{"type":"integer","examples":[10000]},"protocol":{"type":"string","enum":["TCP","UDP"],"description":"`TCP` `UDP`"}}}},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"default":"no","deprecated":true,"description":"This field has been deprecated. previews.generation should be used in its place.\n\n`yes` `no`"},"previews":{"type":"object","properties":{"generation":{"type":"string","enum":["off","manual","automatic"],"default":"off","description":"Defaults to \"off\"\n\n`off` `manual` `automatic`"}}},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore","virginia"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore` `virginia`"},"runtime":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"sshAddress":{"type":"string","description":"The SSH address for the service. Only present for services that have SSH enabled."},"url":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"},"maxShutdownDelaySeconds":{"type":"integer","description":"The maximum amount of time (in seconds) that Render waits for your application process to exit gracefully after sending it a SIGTERM signal.","minimum":1,"maximum":300,"default":30}}},{"type":"object","required":["env","runtime","envSpecificDetails","plan","region","numInstances","buildPlan","openPorts","url"],"properties":{"autoscaling":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}}},"disk":{"type":"object","required":["id","name","sizeGB","mountPath"],"properties":{"id":{"type":"string","pattern":"^dsk-[0-9a-z]{20}$","examples":["dsk-cph1rs3idesc73a2b2mg"]},"name":{"type":"string"},"sizeGB":{"type":"integer"},"mountPath":{"type":"string"}}},"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"deprecated":true,"description":"This field has been deprecated, runtime should be used in its place.\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry","updatedAt"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT","AWS_ECR"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT` `AWS_ECR`"},"username":{"type":"string","description":"The username associated with the credential"},"updatedAt":{"type":"string","format":"date-time","description":"Last updated time for the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"numInstances":{"type":"integer","description":"For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."},"openPorts":{"type":"array","items":{"type":"object","required":["port","protocol"],"properties":{"port":{"type":"integer","examples":[10000]},"protocol":{"type":"string","enum":["TCP","UDP"],"description":"`TCP` `UDP`"}}}},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"default":"no","deprecated":true,"description":"This field has been deprecated. previews.generation should be used in its place.\n\n`yes` `no`"},"previews":{"type":"object","properties":{"generation":{"type":"string","enum":["off","manual","automatic"],"default":"off","description":"Defaults to \"off\"\n\n`off` `manual` `automatic`"}}},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore","virginia"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore` `virginia`"},"runtime":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"sshAddress":{"type":"string","description":"The SSH address for the service. Only present for services that have SSH enabled."},"url":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"},"maxShutdownDelaySeconds":{"type":"integer","description":"The maximum amount of time (in seconds) that Render waits for your application process to exit gracefully after sending it a SIGTERM signal.","minimum":1,"maximum":300,"default":30}}},{"type":"object","required":["env","runtime","envSpecificDetails","plan","region","numInstances","buildPlan"],"properties":{"autoscaling":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}}},"disk":{"type":"object","required":["id","name","sizeGB","mountPath"],"properties":{"id":{"type":"string","pattern":"^dsk-[0-9a-z]{20}$","examples":["dsk-cph1rs3idesc73a2b2mg"]},"name":{"type":"string"},"sizeGB":{"type":"integer"},"mountPath":{"type":"string"}}},"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"deprecated":true,"description":"This field has been deprecated, runtime should be used in its place.\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry","updatedAt"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT","AWS_ECR"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT` `AWS_ECR`"},"username":{"type":"string","description":"The username associated with the credential"},"updatedAt":{"type":"string","format":"date-time","description":"Last updated time for the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"numInstances":{"type":"integer","description":"For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"default":"no","deprecated":true,"description":"This field has been deprecated. previews.generation should be used in its place.\n\n`yes` `no`"},"previews":{"type":"object","properties":{"generation":{"type":"string","enum":["off","manual","automatic"],"default":"off","description":"Defaults to \"off\"\n\n`off` `manual` `automatic`"}}},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore","virginia"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore` `virginia`"},"runtime":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"sshAddress":{"type":"string","description":"The SSH address for the service. Only present for services that have SSH enabled."},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"},"maxShutdownDelaySeconds":{"type":"integer","description":"The maximum amount of time (in seconds) that Render waits for your application process to exit gracefully after sending it a SIGTERM signal.","minimum":1,"maximum":300,"default":30}}},{"required":["env","runtime","envSpecificDetails","plan","region","schedule","buildPlan"],"type":"object","properties":{"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"deprecated":true,"description":"This field has been deprecated, runtime should be used in its place.\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry","updatedAt"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT","AWS_ECR"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT` `AWS_ECR`"},"username":{"type":"string","description":"The username associated with the credential"},"updatedAt":{"type":"string","format":"date-time","description":"Last updated time for the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"lastSuccessfulRunAt":{"type":"string","format":"date-time"},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore","virginia"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore` `virginia`"},"runtime":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"schedule":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"}}}]}}},"deployId":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"402":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"409":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const DeleteAutoscalingConfig = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]}]},"response":{"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const DeleteCustomDomain = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"},"customDomainIdOrName":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID or name of the custom domain"}},"required":["serviceId","customDomainIdOrName"]}]},"response":{"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const DeleteDisk = {"metadata":{"allOf":[{"type":"object","properties":{"diskId":{"type":"string","pattern":"^dsk-[0-9a-z]{20}$","examples":["dsk-cph1rs3idesc73a2b2mg"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the disk"}},"required":["diskId"]}]},"response":{"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const DeleteEnvGroup = {"metadata":{"allOf":[{"type":"object","properties":{"envGroupId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":["envGroupId"]}]},"response":{"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const DeleteEnvGroupEnvVar = {"metadata":{"allOf":[{"type":"object","properties":{"envGroupId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"},"envVarKey":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The name of the environment variable"}},"required":["envGroupId","envVarKey"]}]},"response":{"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const DeleteEnvGroupSecretFile = {"metadata":{"allOf":[{"type":"object","properties":{"envGroupId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources that belong to an environment group"},"secretFileName":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The name of the secret file"}},"required":["envGroupId","secretFileName"]}]},"response":{"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const DeleteEnvVar = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"},"envVarKey":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The name of the environment variable"}},"required":["serviceId","envVarKey"]}]},"response":{"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const DeleteEnvironment = {"metadata":{"allOf":[{"type":"object","properties":{"environmentId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":["environmentId"]}]},"response":{"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const DeleteHeader = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"},"headerId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The id of the header"}},"required":["serviceId","headerId"]}]},"response":{"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const DeleteOwnerLogStream = {"metadata":{"allOf":[{"type":"object","properties":{"ownerId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the owner (team or personal user) whose log streams should be returned"}},"required":["ownerId"]}]},"response":{"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const DeletePostgres = {"metadata":{"allOf":[{"type":"object","properties":{"postgresId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":["postgresId"]}]},"response":{"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const DeleteProject = {"metadata":{"allOf":[{"type":"object","properties":{"projectId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":["projectId"]}]},"response":{"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const DeleteRedis = {"metadata":{"allOf":[{"type":"object","properties":{"redisId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":["redisId"]}]},"response":{"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const DeleteRegistryCredential = {"metadata":{"allOf":[{"type":"object","properties":{"registryCredentialId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the registry credential"}},"required":["registryCredentialId"]}]},"response":{"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const DeleteResourceLogStream = {"metadata":{"allOf":[{"type":"object","properties":{"resourceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the resource (server, cron job, postgres, or redis) whose log streams should be returned"}},"required":["resourceId"]}]},"response":{"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const DeleteRoute = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"},"routeId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The id of the route"}},"required":["serviceId","routeId"]}]},"response":{"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const DeleteSecretFile = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"},"secretFileName":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The file name of the secret file"}},"required":["serviceId","secretFileName"]}]},"response":{"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const DeleteService = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]}]},"response":{"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const DisconnectBlueprint = {"metadata":{"allOf":[{"type":"object","properties":{"blueprintId":{"type":"string","pattern":"^exs-[0-9a-z]{20}$","examples":["exs-cph1rs3idesc73a2b2mg"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the blueprint"}},"required":["blueprintId"]}]},"response":{"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const FailoverPostgres = {"metadata":{"allOf":[{"type":"object","properties":{"postgresId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":["postgresId"]}]},"response":{"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetActiveConnections = {"metadata":{"allOf":[{"type":"object","properties":{"startTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."},"endTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:30:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."},"resolutionSeconds":{"type":"number","minimum":30,"default":60,"examples":[60],"$schema":"http://json-schema.org/draft-04/schema#","description":"The resolution of the returned data"},"resource":{"type":"string","examples":["dpg-xxxxx,red-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Resource ID to query. When multiple resource query params are provided, they are ORed together. Resources Postgres ids or Redis ids"}},"required":[]}]},"response":{"200":{"type":"array","description":"A collection of time series","required":["items"],"items":{"type":"object","description":"A time series data point","required":["labels","values","unit"],"properties":{"labels":{"type":"array","description":"List of labels describing the time series","items":{"type":"object","description":"A time series datapoint label","required":["field","value"],"properties":{"field":{"type":"string","examples":["service"]},"value":{"type":"string","examples":["srv-xxxxx"]}}}},"values":{"type":"array","description":"The values of the time series","items":{"description":"A time series datapoint value","type":"object","required":["timestamp","value","unit"],"properties":{"timestamp":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"]},"value":{"type":"number","examples":[1]}}}},"unit":{"type":"string","examples":["GB"]}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetBandwidth = {"metadata":{"allOf":[{"type":"object","properties":{"startTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."},"endTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:30:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."},"resource":{"type":"string","examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Service ID to query. When multiple service ids are provided, they are ORed together"},"service":{"type":"string","deprecated":true,"examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"This parameter is deprecated. Please use `resource` instead"}},"required":[]}]},"response":{"200":{"type":"array","description":"A collection of time series","required":["items"],"items":{"type":"object","description":"A time series data point","required":["labels","values","unit"],"properties":{"labels":{"type":"array","description":"List of labels describing the time series","items":{"type":"object","description":"A time series datapoint label","required":["field","value"],"properties":{"field":{"type":"string","examples":["service"]},"value":{"type":"string","examples":["srv-xxxxx"]}}}},"values":{"type":"array","description":"The values of the time series","items":{"description":"A time series datapoint value","type":"object","required":["timestamp","value","unit"],"properties":{"timestamp":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"]},"value":{"type":"number","examples":[1]}}}},"unit":{"type":"string","examples":["GB"]}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetCpu = {"metadata":{"allOf":[{"type":"object","properties":{"startTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."},"endTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:30:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."},"resolutionSeconds":{"type":"number","minimum":30,"default":60,"examples":[60],"$schema":"http://json-schema.org/draft-04/schema#","description":"The resolution of the returned data"},"resource":{"type":"string","examples":["srv-xxxxx,dpg-xxxxx,red-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Resource ID to query. When multiple resource query params are provided, they are ORed together. Resources can be service ids, Postgres ids, or Redis ids"},"service":{"type":"string","deprecated":true,"examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"This parameter is deprecated. Please use `resource` instead"},"instance":{"type":"string","examples":["srv-xxxxx-yyyy"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Instance ID to query. When multiple instance ID query params are provided, they are ORed together"},"aggregationMethod":{"type":"string","enum":["AVG","MAX","MIN"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The aggregation method to apply to multiple time series"}},"required":[]}]},"response":{"200":{"type":"array","description":"A collection of time series","required":["items"],"items":{"type":"object","description":"A time series data point","required":["labels","values","unit"],"properties":{"labels":{"type":"array","description":"List of labels describing the time series","items":{"type":"object","description":"A time series datapoint label","required":["field","value"],"properties":{"field":{"type":"string","examples":["service"]},"value":{"type":"string","examples":["srv-xxxxx"]}}}},"values":{"type":"array","description":"The values of the time series","items":{"description":"A time series datapoint value","type":"object","required":["timestamp","value","unit"],"properties":{"timestamp":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"]},"value":{"type":"number","examples":[1]}}}},"unit":{"type":"string","examples":["GB"]}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetCpuLimit = {"metadata":{"allOf":[{"type":"object","properties":{"startTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."},"endTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:30:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."},"resolutionSeconds":{"type":"number","minimum":30,"default":60,"examples":[60],"$schema":"http://json-schema.org/draft-04/schema#","description":"The resolution of the returned data"},"resource":{"type":"string","examples":["srv-xxxxx,dpg-xxxxx,red-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Resource ID to query. When multiple resource query params are provided, they are ORed together. Resources can be service ids, Postgres ids, or Redis ids"},"service":{"type":"string","deprecated":true,"examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"This parameter is deprecated. Please use `resource` instead"},"instance":{"type":"string","examples":["srv-xxxxx-yyyy"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Instance ID to query. When multiple instance ID query params are provided, they are ORed together"}},"required":[]}]},"response":{"200":{"type":"array","description":"A collection of time series","required":["items"],"items":{"type":"object","description":"A time series data point","required":["labels","values","unit"],"properties":{"labels":{"type":"array","description":"List of labels describing the time series","items":{"type":"object","description":"A time series datapoint label","required":["field","value"],"properties":{"field":{"type":"string","examples":["service"]},"value":{"type":"string","examples":["srv-xxxxx"]}}}},"values":{"type":"array","description":"The values of the time series","items":{"description":"A time series datapoint value","type":"object","required":["timestamp","value","unit"],"properties":{"timestamp":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"]},"value":{"type":"number","examples":[1]}}}},"unit":{"type":"string","examples":["GB"]}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetCpuTarget = {"metadata":{"allOf":[{"type":"object","properties":{"startTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."},"endTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:30:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."},"resolutionSeconds":{"type":"number","minimum":30,"default":60,"examples":[60],"$schema":"http://json-schema.org/draft-04/schema#","description":"The resolution of the returned data"},"resource":{"type":"string","examples":["srv-xxxxx,dpg-xxxxx,red-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Resource ID to query. When multiple resource query params are provided, they are ORed together. Resources can be service ids, Postgres ids, or Redis ids"},"service":{"type":"string","deprecated":true,"examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"This parameter is deprecated. Please use `resource` instead"},"instance":{"type":"string","examples":["srv-xxxxx-yyyy"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Instance ID to query. When multiple instance ID query params are provided, they are ORed together"}},"required":[]}]},"response":{"200":{"type":"array","description":"A collection of time series","required":["items"],"items":{"type":"object","description":"A time series data point","required":["labels","values","unit"],"properties":{"labels":{"type":"array","description":"List of labels describing the time series","items":{"type":"object","description":"A time series datapoint label","required":["field","value"],"properties":{"field":{"type":"string","examples":["service"]},"value":{"type":"string","examples":["srv-xxxxx"]}}}},"values":{"type":"array","description":"The values of the time series","items":{"description":"A time series datapoint value","type":"object","required":["timestamp","value","unit"],"properties":{"timestamp":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"]},"value":{"type":"number","examples":[1]}}}},"unit":{"type":"string","examples":["GB"]}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetDiskCapacity = {"metadata":{"allOf":[{"type":"object","properties":{"startTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."},"endTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:30:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."},"resolutionSeconds":{"type":"number","minimum":30,"default":60,"examples":[60],"$schema":"http://json-schema.org/draft-04/schema#","description":"The resolution of the returned data"},"resource":{"type":"string","examples":["srv-xxxxx,dpg-xxxxx,red-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Resource ID to query. When multiple resource query params are provided, they are ORed together. Resources can be service ids, Postgres ids, or Redis ids"},"service":{"type":"string","deprecated":true,"examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"This parameter is deprecated. Please use `resource` instead"}},"required":[]}]},"response":{"200":{"type":"array","description":"A collection of time series","required":["items"],"items":{"type":"object","description":"A time series data point","required":["labels","values","unit"],"properties":{"labels":{"type":"array","description":"List of labels describing the time series","items":{"type":"object","description":"A time series datapoint label","required":["field","value"],"properties":{"field":{"type":"string","examples":["service"]},"value":{"type":"string","examples":["srv-xxxxx"]}}}},"values":{"type":"array","description":"The values of the time series","items":{"description":"A time series datapoint value","type":"object","required":["timestamp","value","unit"],"properties":{"timestamp":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"]},"value":{"type":"number","examples":[1]}}}},"unit":{"type":"string","examples":["GB"]}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetDiskUsage = {"metadata":{"allOf":[{"type":"object","properties":{"startTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."},"endTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:30:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."},"resolutionSeconds":{"type":"number","minimum":30,"default":60,"examples":[60],"$schema":"http://json-schema.org/draft-04/schema#","description":"The resolution of the returned data"},"resource":{"type":"string","examples":["srv-xxxxx,dpg-xxxxx,red-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Resource ID to query. When multiple resource query params are provided, they are ORed together. Resources can be service ids, Postgres ids, or Redis ids"},"service":{"type":"string","deprecated":true,"examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"This parameter is deprecated. Please use `resource` instead"}},"required":[]}]},"response":{"200":{"type":"array","description":"A collection of time series","required":["items"],"items":{"type":"object","description":"A time series data point","required":["labels","values","unit"],"properties":{"labels":{"type":"array","description":"List of labels describing the time series","items":{"type":"object","description":"A time series datapoint label","required":["field","value"],"properties":{"field":{"type":"string","examples":["service"]},"value":{"type":"string","examples":["srv-xxxxx"]}}}},"values":{"type":"array","description":"The values of the time series","items":{"description":"A time series datapoint value","type":"object","required":["timestamp","value","unit"],"properties":{"timestamp":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"]},"value":{"type":"number","examples":[1]}}}},"unit":{"type":"string","examples":["GB"]}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetEnvVarsForService = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]},{"type":"object","properties":{"cursor":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination)."},"limit":{"type":"integer","default":20,"minimum":1,"maximum":100,"description":"The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).","$schema":"http://json-schema.org/draft-04/schema#"}},"required":[]}]},"response":{"200":{"type":"array","items":{"type":"object","required":["envVar","cursor"],"properties":{"envVar":{"type":"object","required":["key","value"],"properties":{"key":{"type":"string"},"value":{"type":"string"}}},"cursor":{"type":"string"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetHttpLatency = {"metadata":{"allOf":[{"type":"object","properties":{"startTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."},"endTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:30:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."},"resolutionSeconds":{"type":"number","minimum":30,"default":60,"examples":[60],"$schema":"http://json-schema.org/draft-04/schema#","description":"The resolution of the returned data"},"resource":{"type":"string","examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Service ID to query. When multiple service ids are provided, they are ORed together"},"service":{"type":"string","deprecated":true,"examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"This parameter is deprecated. Please use `resource` instead"},"host":{"type":"string","examples":["example.com"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The hosts of HTTP requests to filter to. When multiple host query params are provided, they are ORed together"},"path":{"type":"string","examples":["/graphql"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The paths of HTTP requests to filter to. When multiple path query params are provided, they are ORed together"},"quantile":{"type":"number","format":"float","examples":[0.99],"minimum":-3.402823669209385e+38,"maximum":3.402823669209385e+38,"$schema":"http://json-schema.org/draft-04/schema#","description":"The quantile of latencies to fetch. When multiple quantile query params are provided, they are ORed together"}},"required":[]}]},"response":{"200":{"type":"array","description":"A collection of time series","required":["items"],"items":{"type":"object","description":"A time series data point","required":["labels","values","unit"],"properties":{"labels":{"type":"array","description":"List of labels describing the time series","items":{"type":"object","description":"A time series datapoint label","required":["field","value"],"properties":{"field":{"type":"string","examples":["service"]},"value":{"type":"string","examples":["srv-xxxxx"]}}}},"values":{"type":"array","description":"The values of the time series","items":{"description":"A time series datapoint value","type":"object","required":["timestamp","value","unit"],"properties":{"timestamp":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"]},"value":{"type":"number","examples":[1]}}}},"unit":{"type":"string","examples":["GB"]}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetHttpRequests = {"metadata":{"allOf":[{"type":"object","properties":{"startTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."},"endTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:30:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."},"resolutionSeconds":{"type":"number","minimum":30,"default":60,"examples":[60],"$schema":"http://json-schema.org/draft-04/schema#","description":"The resolution of the returned data"},"resource":{"type":"string","examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Service ID to query. When multiple service ids are provided, they are ORed together"},"service":{"type":"string","deprecated":true,"examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"This parameter is deprecated. Please use `resource` instead"},"host":{"type":"string","examples":["example.com"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The hosts of HTTP requests to filter to. When multiple host query params are provided, they are ORed together"},"path":{"type":"string","examples":["/graphql"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The paths of HTTP requests to filter to. When multiple path query params are provided, they are ORed together"},"aggregateBy":{"type":"string","enum":["statusCode","host"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The field to aggregate by"}},"required":[]}]},"response":{"200":{"type":"array","description":"A collection of time series","required":["items"],"items":{"type":"object","description":"A time series data point","required":["labels","values","unit"],"properties":{"labels":{"type":"array","description":"List of labels describing the time series","items":{"type":"object","description":"A time series datapoint label","required":["field","value"],"properties":{"field":{"type":"string","examples":["service"]},"value":{"type":"string","examples":["srv-xxxxx"]}}}},"values":{"type":"array","description":"The values of the time series","items":{"description":"A time series datapoint value","type":"object","required":["timestamp","value","unit"],"properties":{"timestamp":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"]},"value":{"type":"number","examples":[1]}}}},"unit":{"type":"string","examples":["GB"]}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetInstanceCount = {"metadata":{"allOf":[{"type":"object","properties":{"startTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."},"endTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:30:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."},"resolutionSeconds":{"type":"number","minimum":30,"default":60,"examples":[60],"$schema":"http://json-schema.org/draft-04/schema#","description":"The resolution of the returned data"},"resource":{"type":"string","examples":["srv-xxxxx,dpg-xxxxx,red-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Resource ID to query. When multiple resource query params are provided, they are ORed together. Resources can be service ids, Postgres ids, or Redis ids"},"service":{"type":"string","deprecated":true,"examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"This parameter is deprecated. Please use `resource` instead"}},"required":[]}]},"response":{"200":{"type":"array","description":"A collection of time series","required":["items"],"items":{"type":"object","description":"A time series data point","required":["labels","values","unit"],"properties":{"labels":{"type":"array","description":"List of labels describing the time series","items":{"type":"object","description":"A time series datapoint label","required":["field","value"],"properties":{"field":{"type":"string","examples":["service"]},"value":{"type":"string","examples":["srv-xxxxx"]}}}},"values":{"type":"array","description":"The values of the time series","items":{"description":"A time series datapoint value","type":"object","required":["timestamp","value","unit"],"properties":{"timestamp":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"]},"value":{"type":"number","examples":[1]}}}},"unit":{"type":"string","examples":["GB"]}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetMemory = {"metadata":{"allOf":[{"type":"object","properties":{"startTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."},"endTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:30:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."},"resolutionSeconds":{"type":"number","minimum":30,"default":60,"examples":[60],"$schema":"http://json-schema.org/draft-04/schema#","description":"The resolution of the returned data"},"resource":{"type":"string","examples":["srv-xxxxx,dpg-xxxxx,red-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Resource ID to query. When multiple resource query params are provided, they are ORed together. Resources can be service ids, Postgres ids, or Redis ids"},"service":{"type":"string","deprecated":true,"examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"This parameter is deprecated. Please use `resource` instead"},"instance":{"type":"string","examples":["srv-xxxxx-yyyy"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Instance ID to query. When multiple instance ID query params are provided, they are ORed together"}},"required":[]}]},"response":{"200":{"type":"array","description":"A collection of time series","required":["items"],"items":{"type":"object","description":"A time series data point","required":["labels","values","unit"],"properties":{"labels":{"type":"array","description":"List of labels describing the time series","items":{"type":"object","description":"A time series datapoint label","required":["field","value"],"properties":{"field":{"type":"string","examples":["service"]},"value":{"type":"string","examples":["srv-xxxxx"]}}}},"values":{"type":"array","description":"The values of the time series","items":{"description":"A time series datapoint value","type":"object","required":["timestamp","value","unit"],"properties":{"timestamp":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"]},"value":{"type":"number","examples":[1]}}}},"unit":{"type":"string","examples":["GB"]}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetMemoryLimit = {"metadata":{"allOf":[{"type":"object","properties":{"startTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."},"endTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:30:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."},"resolutionSeconds":{"type":"number","minimum":30,"default":60,"examples":[60],"$schema":"http://json-schema.org/draft-04/schema#","description":"The resolution of the returned data"},"resource":{"type":"string","examples":["srv-xxxxx,dpg-xxxxx,red-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Resource ID to query. When multiple resource query params are provided, they are ORed together. Resources can be service ids, Postgres ids, or Redis ids"},"service":{"type":"string","deprecated":true,"examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"This parameter is deprecated. Please use `resource` instead"},"instance":{"type":"string","examples":["srv-xxxxx-yyyy"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Instance ID to query. When multiple instance ID query params are provided, they are ORed together"}},"required":[]}]},"response":{"200":{"type":"array","description":"A collection of time series","required":["items"],"items":{"type":"object","description":"A time series data point","required":["labels","values","unit"],"properties":{"labels":{"type":"array","description":"List of labels describing the time series","items":{"type":"object","description":"A time series datapoint label","required":["field","value"],"properties":{"field":{"type":"string","examples":["service"]},"value":{"type":"string","examples":["srv-xxxxx"]}}}},"values":{"type":"array","description":"The values of the time series","items":{"description":"A time series datapoint value","type":"object","required":["timestamp","value","unit"],"properties":{"timestamp":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"]},"value":{"type":"number","examples":[1]}}}},"unit":{"type":"string","examples":["GB"]}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetMemoryTarget = {"metadata":{"allOf":[{"type":"object","properties":{"startTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."},"endTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:30:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."},"resolutionSeconds":{"type":"number","minimum":30,"default":60,"examples":[60],"$schema":"http://json-schema.org/draft-04/schema#","description":"The resolution of the returned data"},"resource":{"type":"string","examples":["srv-xxxxx,dpg-xxxxx,red-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Resource ID to query. When multiple resource query params are provided, they are ORed together. Resources can be service ids, Postgres ids, or Redis ids"},"service":{"type":"string","deprecated":true,"examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"This parameter is deprecated. Please use `resource` instead"},"instance":{"type":"string","examples":["srv-xxxxx-yyyy"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Instance ID to query. When multiple instance ID query params are provided, they are ORed together"}},"required":[]}]},"response":{"200":{"type":"array","description":"A collection of time series","required":["items"],"items":{"type":"object","description":"A time series data point","required":["labels","values","unit"],"properties":{"labels":{"type":"array","description":"List of labels describing the time series","items":{"type":"object","description":"A time series datapoint label","required":["field","value"],"properties":{"field":{"type":"string","examples":["service"]},"value":{"type":"string","examples":["srv-xxxxx"]}}}},"values":{"type":"array","description":"The values of the time series","items":{"description":"A time series datapoint value","type":"object","required":["timestamp","value","unit"],"properties":{"timestamp":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"]},"value":{"type":"number","examples":[1]}}}},"unit":{"type":"string","examples":["GB"]}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetOwnerLogStream = {"metadata":{"allOf":[{"type":"object","properties":{"ownerId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the owner (team or personal user) whose log streams should be returned"}},"required":["ownerId"]}]},"response":{"200":{"type":"object","description":"Owner log stream settings","properties":{"ownerId":{"description":"The ID of the owner.","type":"string"},"endpoint":{"description":"The endpoint to stream logs to.","type":"string"},"preview":{"type":"string","description":"Whether to send logs or drop them.\n\n`send` `drop`","enum":["send","drop"]}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetReplicationLag = {"metadata":{"allOf":[{"type":"object","properties":{"startTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."},"endTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:30:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."},"resolutionSeconds":{"type":"number","minimum":30,"default":60,"examples":[60],"$schema":"http://json-schema.org/draft-04/schema#","description":"The resolution of the returned data"},"resource":{"type":"string","examples":["dpg-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Postgres ID to query. When multiple resource query params are provided, they are ORed together"}},"required":[]}]},"response":{"200":{"type":"array","description":"A collection of time series","required":["items"],"items":{"type":"object","description":"A time series data point","required":["labels","values","unit"],"properties":{"labels":{"type":"array","description":"List of labels describing the time series","items":{"type":"object","description":"A time series datapoint label","required":["field","value"],"properties":{"field":{"type":"string","examples":["service"]},"value":{"type":"string","examples":["srv-xxxxx"]}}}},"values":{"type":"array","description":"The values of the time series","items":{"description":"A time series datapoint value","type":"object","required":["timestamp","value","unit"],"properties":{"timestamp":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"]},"value":{"type":"number","examples":[1]}}}},"unit":{"type":"string","examples":["GB"]}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetResourceLogStream = {"metadata":{"allOf":[{"type":"object","properties":{"resourceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the resource (server, cron job, postgres, or redis) whose log streams should be returned"}},"required":["resourceId"]}]},"response":{"200":{"type":"object","description":"Resource log stream overrides","properties":{"resourceId":{"description":"The ID of the resource.","type":"string"},"endpoint":{"description":"The endpoint to stream logs to. Must be present if setting is send. Cannot be present if setting is drop.","type":"string"},"setting":{"type":"string","description":"Whether to send logs or drop them.\n\n`send` `drop`","enum":["send","drop"]}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetUser = {"response":{"200":{"type":"object","required":["email","name"],"properties":{"email":{"type":"string"},"name":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const LinkServiceToEnvGroup = {"metadata":{"allOf":[{"type":"object","properties":{"envGroupId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources that belong to an environment group"},"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["envGroupId","serviceId"]}]},"response":{"200":{"type":"object","required":["createdAt","envVars","id","name","ownerId","secretFiles","serviceLinks","updatedAt"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"ownerId":{"type":"string"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"},"serviceLinks":{"description":"List of serviceIds linked to the envGroup","type":"array","items":{"type":"object","required":["id","name","type"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["static","web","pserv","worker","cron"],"description":"`static` `web` `pserv` `worker` `cron`"}}}},"environmentId":{"type":"string"},"envVars":{"type":"array","items":{"type":"object","required":["key","value"],"properties":{"key":{"type":"string"},"value":{"type":"string"}}}},"secretFiles":{"type":"array","items":{"type":"object","required":["name","content"],"properties":{"name":{"type":"string"},"content":{"type":"string"}}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListApplicationFilterValues = {"metadata":{"allOf":[{"type":"object","properties":{"startTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."},"endTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:30:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."},"resolutionSeconds":{"type":"number","minimum":30,"default":60,"examples":[60],"$schema":"http://json-schema.org/draft-04/schema#","description":"The resolution of the returned data"},"resource":{"type":"string","examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Service ID to query. When multiple service ids are provided, they are ORed together"},"service":{"type":"string","deprecated":true,"examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"This parameter is deprecated. Please use `resource` instead"}},"required":[]}]},"response":{"200":{"type":"array","description":"A collection of filter values for application metrics","required":["items"],"items":{"type":"object","properties":{"filter":{"type":"string","enum":["instance"],"description":"`instance`"},"values":{"type":"array","items":{"type":"string","examples":["srv-xxxxx-yyyy"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListBlueprintSyncs = {"metadata":{"allOf":[{"type":"object","properties":{"blueprintId":{"type":"string","pattern":"^exs-[0-9a-z]{20}$","examples":["exs-cph1rs3idesc73a2b2mg"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the blueprint"}},"required":["blueprintId"]},{"type":"object","properties":{"cursor":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination)."},"limit":{"type":"integer","default":20,"minimum":1,"maximum":100,"description":"The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).","$schema":"http://json-schema.org/draft-04/schema#"}},"required":[]}]},"response":{"200":{"type":"array","items":{"type":"object","description":"A blueprint sync with a cursor","required":["sync","cursor"],"properties":{"sync":{"type":"object","required":["id","commit","state"],"properties":{"id":{"type":"string","pattern":"^exe-[0-9a-z]{20}$","examples":["exe-cph1rs3idesc73a2b2mg"]},"commit":{"type":"object","required":["id"],"properties":{"id":{"type":"string"}}},"startedAt":{"type":"string","format":"date-time"},"completedAt":{"type":"string","format":"date-time"},"state":{"type":"string","enum":["created","pending","running","error","success"],"description":"`created` `pending` `running` `error` `success`"}}},"cursor":{"type":"string"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListBlueprints = {"metadata":{"allOf":[{"type":"object","properties":{"ownerId":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the owner (team or personal user) whose resources should be returned"},"cursor":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination)."},"limit":{"type":"integer","default":20,"minimum":1,"maximum":100,"description":"The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).","$schema":"http://json-schema.org/draft-04/schema#"}},"required":[]}]},"response":{"200":{"type":"array","items":{"type":"object","description":"A blueprint with a cursor","required":["blueprint","cursor"],"properties":{"blueprint":{"type":"object","required":["id","name","status","autoSync","repo","branch"],"properties":{"id":{"type":"string","pattern":"^exs-[0-9a-z]{20}$","examples":["exs-cph1rs3idesc73a2b2mg"]},"name":{"type":"string"},"status":{"type":"string","enum":["created","paused","in_sync","syncing","error"],"description":"`created` `paused` `in_sync` `syncing` `error`"},"autoSync":{"type":"boolean","description":"Automatically sync changes to render.yaml"},"repo":{"type":"string"},"branch":{"type":"string"},"lastSync":{"type":"string","format":"date-time"}}},"cursor":{"type":"string"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListCustomDomains = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]},{"type":"object","properties":{"cursor":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination)."},"limit":{"type":"integer","default":20,"minimum":1,"maximum":100,"description":"The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).","$schema":"http://json-schema.org/draft-04/schema#"},"name":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for the names of custom domain"},"domainType":{"type":"string","enum":["apex","subdomain"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for domain type"},"verificationStatus":{"type":"string","enum":["verified","unverified"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for domain verification status (`verified` or `unverified`)"},"createdBefore":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for custom domains created before a certain time (specified as an ISO 8601 timestamp)"},"createdAfter":{"type":"string","format":"date-time","examples":["2021-02-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for custom domains created after a certain time (specified as an ISO 8601 timestamp)"}},"required":[]}]},"response":{"200":{"type":"array","items":{"required":["customDomain","cursor"],"type":"object","properties":{"customDomain":{"type":"object","required":["id","name","domainType","publicSuffix","verificationStatus","createdAt","redirectForName"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"domainType":{"type":"string","enum":["apex","subdomain"],"description":"`apex` `subdomain`"},"publicSuffix":{"type":"string"},"redirectForName":{"type":"string"},"verificationStatus":{"type":"string","enum":["verified","unverified"],"description":"`verified` `unverified`"},"createdAt":{"type":"string","format":"date-time"},"server":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}}}},"cursor":{"type":"string"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListDeploys = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]},{"type":"object","properties":{"status":{"type":"array","items":{"type":"string","enum":["created","build_in_progress","update_in_progress","live","deactivated","build_failed","update_failed","canceled","pre_deploy_in_progress","pre_deploy_failed"]},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for deploys with the specified statuses"},"createdBefore":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for deploys created before a certain time (specified as an ISO 8601 timestamp)"},"createdAfter":{"type":"string","format":"date-time","examples":["2021-02-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for deploys created after a certain time (specified as an ISO 8601 timestamp)"},"updatedBefore":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for deploys updated before a certain time (specified as an ISO 8601 timestamp)"},"updatedAfter":{"type":"string","format":"date-time","examples":["2021-02-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for deploys updated after a certain time (specified as an ISO 8601 timestamp)"},"finishedBefore":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for deploys finished before a certain time (specified as an ISO 8601 timestamp)"},"finishedAfter":{"type":"string","format":"date-time","examples":["2021-02-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for deploys finished after a certain time (specified as an ISO 8601 timestamp)"},"cursor":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination)."},"limit":{"type":"integer","default":20,"minimum":1,"maximum":100,"description":"The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).","$schema":"http://json-schema.org/draft-04/schema#"}},"required":[]}]},"response":{"200":{"type":"array","items":{"type":"object","properties":{"deploy":{"type":"object","required":["id"],"properties":{"id":{"type":"string"},"commit":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"},"createdAt":{"type":"string","format":"date-time"}}},"image":{"description":"Image information used when creating the deploy. Not present for Git-backed deploys","type":"object","properties":{"ref":{"description":"Image reference used when creating the deploy","type":"string"},"sha":{"description":"SHA that the image reference was resolved to when creating the deploy","type":"string"},"registryCredential":{"description":"Name of credential used to pull the image, if provided","type":"string"}}},"status":{"type":"string","enum":["created","build_in_progress","update_in_progress","live","deactivated","build_failed","update_failed","canceled","pre_deploy_in_progress","pre_deploy_failed"],"description":"`created` `build_in_progress` `update_in_progress` `live` `deactivated` `build_failed` `update_failed` `canceled` `pre_deploy_in_progress` `pre_deploy_failed`"},"trigger":{"type":"string","enum":["api","blueprint_sync","deploy_hook","deployed_by_render","manual","other","new_commit","rollback","service_resumed","service_updated"],"description":"`api` `blueprint_sync` `deploy_hook` `deployed_by_render` `manual` `other` `new_commit` `rollback` `service_resumed` `service_updated`"},"finishedAt":{"type":"string","format":"date-time"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"}}},"cursor":{"type":"string"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListDisks = {"metadata":{"allOf":[{"type":"object","properties":{"ownerId":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the owner (team or personal user) whose resources should be returned"},"diskId":{"type":"array","items":{"type":"string","pattern":"^dsk-[0-9a-z]{20}$","examples":["dsk-cph1rs3idesc73a2b2mg"]},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter by disk IDs"},"name":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter by name"},"createdBefore":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources created before a certain time (specified as an ISO 8601 timestamp)"},"createdAfter":{"type":"string","format":"date-time","examples":["2021-02-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources created after a certain time (specified as an ISO 8601 timestamp)"},"updatedBefore":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources updated before a certain time (specified as an ISO 8601 timestamp)"},"updatedAfter":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources updated after a certain time (specified as an ISO 8601 timestamp)"},"serviceId":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources by service ID"},"cursor":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination)."},"limit":{"type":"integer","default":20,"minimum":1,"maximum":100,"description":"The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).","$schema":"http://json-schema.org/draft-04/schema#"}},"required":[]}]},"response":{"200":{"type":"array","items":{"required":["disk","cursor"],"type":"object","properties":{"disk":{"type":"object","required":["id","name","sizeGB","mountPath","createdAt","updatedAt"],"properties":{"id":{"type":"string","pattern":"^dsk-[0-9a-z]{20}$","examples":["dsk-cph1rs3idesc73a2b2mg"]},"name":{"type":"string"},"sizeGB":{"type":"integer"},"mountPath":{"type":"string"},"serviceId":{"type":"string"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"}}},"cursor":{"type":"string"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListEnvGroups = {"metadata":{"allOf":[{"type":"object","properties":{"name":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter by name"},"createdBefore":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources created before a certain time (specified as an ISO 8601 timestamp)"},"createdAfter":{"type":"string","format":"date-time","examples":["2021-02-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources created after a certain time (specified as an ISO 8601 timestamp)"},"updatedBefore":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources updated before a certain time (specified as an ISO 8601 timestamp)"},"updatedAfter":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources updated after a certain time (specified as an ISO 8601 timestamp)"},"ownerId":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the owner (team or personal user) whose resources should be returned"},"environmentId":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources that belong to an environment"},"cursor":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination)."},"limit":{"type":"integer","default":20,"minimum":1,"maximum":100,"description":"The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).","$schema":"http://json-schema.org/draft-04/schema#"}},"required":[]}]},"response":{"200":{"type":"array","items":{"type":"object","required":["id","name","ownerId","createdAt","updatedAt","serviceLinks"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"ownerId":{"type":"string"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"},"serviceLinks":{"description":"List of serviceIds linked to the envGroup","type":"array","items":{"type":"object","required":["id","name","type"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["static","web","pserv","worker","cron"],"description":"`static` `web` `pserv` `worker` `cron`"}}}},"environmentId":{"type":"string"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListEnvironments = {"metadata":{"allOf":[{"type":"object","properties":{"name":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter by name"},"projectId":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources that belong to a project"},"createdBefore":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources created before a certain time (specified as an ISO 8601 timestamp)"},"createdAfter":{"type":"string","format":"date-time","examples":["2021-02-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources created after a certain time (specified as an ISO 8601 timestamp)"},"updatedBefore":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources updated before a certain time (specified as an ISO 8601 timestamp)"},"updatedAfter":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources updated after a certain time (specified as an ISO 8601 timestamp)"},"ownerId":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the owner (team or personal user) whose resources should be returned"},"environmentId":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources that belong to an environment"},"cursor":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination)."},"limit":{"type":"integer","default":20,"minimum":1,"maximum":100,"description":"The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).","$schema":"http://json-schema.org/draft-04/schema#"}},"required":["projectId"]}]},"response":{"200":{"type":"array","items":{"type":"object","description":"An environment with a cursor","required":["environment","cursor"],"properties":{"environment":{"type":"object","required":["id","name","projectId","databasesIds","redisIds","serviceIds","envGroupIds","protectedStatus","networkIsolationEnabled"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"projectId":{"type":"string"},"databasesIds":{"type":"array","items":{"type":"string"}},"redisIds":{"type":"array","items":{"type":"string"}},"serviceIds":{"type":"array","items":{"type":"string"}},"envGroupIds":{"type":"array","items":{"type":"string"}},"protectedStatus":{"type":"string","description":"Indicates whether an environment is `unprotected` or `protected`. Only admin users can perform destructive actions in `protected` environments.\n\n`unprotected` `protected`","enum":["unprotected","protected"]},"networkIsolationEnabled":{"type":"boolean","description":"Indicates whether network connections across environments are allowed."}}},"cursor":{"type":"string"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListEvents = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]},{"type":"object","properties":{"eventType":{"anyOf":[{"type":"string","enum":["autoscaling_config_changed","autoscaling_ended","autoscaling_started","branch_deleted","build_ended","build_plan_changed","build_started","commit_ignored","cron_job_run_ended","cron_job_run_started","deploy_ended","deploy_started","disk_created","disk_updated","disk_deleted","image_pull_failed","initial_deploy_hook_ended","initial_deploy_hook_started","instance_count_changed","job_run_ended","maintenance_mode_enabled","maintenance_mode_uri_updated","maintenance_ended","maintenance_started","plan_changed","pre_deploy_ended","pre_deploy_started","server_available","server_failed","server_hardware_failure","server_restarted","server_unhealthy","service_resumed","service_suspended","suspender_added","suspender_removed","zero_downtime_redeploy_ended","zero_downtime_redeploy_started"]}],"$schema":"http://json-schema.org/draft-04/schema#","description":"The type of event to filter to"},"startTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."},"endTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:30:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."},"cursor":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination)."},"limit":{"type":"integer","default":20,"minimum":1,"maximum":100,"description":"The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).","$schema":"http://json-schema.org/draft-04/schema#"}},"required":[]}]},"response":{"200":{"type":"array","items":{"type":"object","description":"A service event with a cursor","required":["event","cursor"],"properties":{"event":{"type":"object","required":["id","timestamp","serviceId","type","details"],"properties":{"id":{"type":"string"},"timestamp":{"type":"string","format":"date-time"},"serviceId":{"type":"string"},"type":{"type":"string","enum":["autoscaling_config_changed","autoscaling_ended","autoscaling_started","branch_deleted","build_ended","build_plan_changed","build_started","commit_ignored","cron_job_run_ended","cron_job_run_started","deploy_ended","deploy_started","disk_created","disk_updated","disk_deleted","image_pull_failed","initial_deploy_hook_ended","initial_deploy_hook_started","instance_count_changed","job_run_ended","maintenance_mode_enabled","maintenance_mode_uri_updated","maintenance_ended","maintenance_started","plan_changed","pre_deploy_ended","pre_deploy_started","server_available","server_failed","server_hardware_failure","server_restarted","server_unhealthy","service_resumed","service_suspended","suspender_added","suspender_removed","zero_downtime_redeploy_ended","zero_downtime_redeploy_started"],"description":"`autoscaling_config_changed` `autoscaling_ended` `autoscaling_started` `branch_deleted` `build_ended` `build_plan_changed` `build_started` `commit_ignored` `cron_job_run_ended` `cron_job_run_started` `deploy_ended` `deploy_started` `disk_created` `disk_updated` `disk_deleted` `image_pull_failed` `initial_deploy_hook_ended` `initial_deploy_hook_started` `instance_count_changed` `job_run_ended` `maintenance_mode_enabled` `maintenance_mode_uri_updated` `maintenance_ended` `maintenance_started` `plan_changed` `pre_deploy_ended` `pre_deploy_started` `server_available` `server_failed` `server_hardware_failure` `server_restarted` `server_unhealthy` `service_resumed` `service_suspended` `suspender_added` `suspender_removed` `zero_downtime_redeploy_ended` `zero_downtime_redeploy_started`"},"details":{"oneOf":[{"type":"object","required":["deployId"],"properties":{"deployId":{"type":"string"}}},{"type":"object","required":["toConfig"],"properties":{"fromConfig":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}}},"toConfig":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}}}}},{"type":"object","required":["fromInstances","toInstances"],"properties":{"fromInstances":{"type":"integer"},"toInstances":{"type":"integer"}}},{"type":"object","required":["fromInstances","toInstances"],"properties":{"fromInstances":{"type":"integer"},"toInstances":{"type":"integer"},"currentCPU":{"type":"integer","x-go-type":"int64"},"targetCPU":{"type":"integer","x-go-type":"int64"},"currentMemory":{"type":"integer","x-go-type":"int64"},"targetMemory":{"type":"integer","x-go-type":"int64"}}},{"type":"object","required":["deletedBranch","newBranch"],"properties":{"deletedBranch":{"type":"string"},"newBranch":{"type":"string"}}},{"type":"object","required":["buildId","status","reason"],"properties":{"buildId":{"type":"string"},"status":{"type":"integer"},"reason":{"type":"object","properties":{"buildFailed":{"type":"object","required":["id"],"properties":{"id":{"type":"string"}}},"newBuild":{"type":"object","required":["id"],"properties":{"id":{"type":"string"}}},"newDeploy":{"type":"object","required":["id"],"properties":{"id":{"type":"string"}}},"failure":{"type":"object","required":["evicted"],"properties":{"evicted":{"type":"boolean"},"nonZeroExit":{"type":"integer"},"oomKilled":{"type":"object","required":["memoryLimit"],"properties":{"memoryLimit":{"type":"string"}}},"timedOutSeconds":{"type":"integer","format":"int64","minimum":-9223372036854776000,"maximum":9223372036854776000},"unhealthy":{"type":"string"},"timedOutReason":{"type":"string"}}}}}}},{"type":"object","required":["from","to"],"properties":{"from":{"type":"string"},"to":{"type":"string"}}},{"type":"object","required":["buildId","trigger"],"properties":{"buildId":{"type":"string"},"trigger":{"type":"object","required":["firstBuild","envUpdated","manual","deployedByRender","clearCache","rollback"],"properties":{"firstBuild":{"description":"Deploy was triggered by service creation","type":"boolean"},"envUpdated":{"description":"Deploy was triggered by an environment update","type":"boolean"},"manual":{"description":"Deploy was triggered manually from the dashboard","type":"boolean"},"user":{"type":"object","description":"User who triggered the action","required":["id","email"],"properties":{"id":{"type":"string"},"email":{"type":"string"}}},"updatedProperty":{"description":"Updated property that triggered the deploy","type":"string"},"newCommit":{"description":"Commit that triggered the deploy","type":"string"},"deployedByRender":{"description":"Deploy was triggered by Render","type":"boolean"},"clearCache":{"description":"Whether the cache was cleared for the deploy","type":"boolean"},"rollback":{"description":"Whether the deploy was triggered by a rollback","type":"boolean"},"rollbackTargetDeployId":{"description":"Deploy ID that was rolled back to","type":"string"}}}}},{"type":"object","required":["id","url"],"properties":{"id":{"description":"the commit id","type":"string"},"url":{"description":"the commit url","type":"string"}}},{"type":"object","required":["cronJobRunId","status"],"properties":{"cronJobRunId":{"type":"string"},"status":{"type":"string","enum":["canceled","pending","successful","unsuccessful"],"description":"`canceled` `pending` `successful` `unsuccessful`"},"reason":{"type":"object","required":["evicted"],"properties":{"evicted":{"type":"boolean"},"nonZeroExit":{"type":"integer"},"oomKilled":{"type":"object","required":["memoryLimit"],"properties":{"memoryLimit":{"type":"string"}}},"timedOutSeconds":{"type":"integer","format":"int64","minimum":-9223372036854776000,"maximum":9223372036854776000},"unhealthy":{"type":"string"},"timedOutReason":{"type":"string"}}},"user":{"type":"object","description":"User who triggered the action","required":["id","email"],"properties":{"id":{"type":"string"},"email":{"type":"string"}}}}},{"type":"object","required":["cronJobRunId"],"properties":{"cronJobRunId":{"type":"string"}}},{"type":"object","required":["deployId","reason","status"],"properties":{"deployId":{"type":"string"},"reason":{"type":"object","properties":{"buildFailed":{"type":"object","required":["id"],"properties":{"id":{"type":"string"}}},"newBuild":{"type":"object","required":["id"],"properties":{"id":{"type":"string"}}},"newDeploy":{"type":"object","required":["id"],"properties":{"id":{"type":"string"}}},"failure":{"type":"object","required":["evicted"],"properties":{"evicted":{"type":"boolean"},"nonZeroExit":{"type":"integer"},"oomKilled":{"type":"object","required":["memoryLimit"],"properties":{"memoryLimit":{"type":"string"}}},"timedOutSeconds":{"type":"integer","format":"int64","minimum":-9223372036854776000,"maximum":9223372036854776000},"unhealthy":{"type":"string"},"timedOutReason":{"type":"string"}}}}},"status":{"type":"integer"}}},{"type":"object","required":["deployId","trigger"],"properties":{"deployId":{"type":"string"},"trigger":{"type":"object","required":["firstBuild","envUpdated","manual","deployedByRender","clearCache","rollback"],"properties":{"firstBuild":{"description":"Deploy was triggered by service creation","type":"boolean"},"envUpdated":{"description":"Deploy was triggered by an environment update","type":"boolean"},"manual":{"description":"Deploy was triggered manually from the dashboard","type":"boolean"},"user":{"type":"object","description":"User who triggered the action","required":["id","email"],"properties":{"id":{"type":"string"},"email":{"type":"string"}}},"updatedProperty":{"description":"Updated property that triggered the deploy","type":"string"},"newCommit":{"description":"Commit that triggered the deploy","type":"string"},"deployedByRender":{"description":"Deploy was triggered by Render","type":"boolean"},"clearCache":{"description":"Whether the cache was cleared for the deploy","type":"boolean"},"rollback":{"description":"Whether the deploy was triggered by a rollback","type":"boolean"},"rollbackTargetDeployId":{"description":"Deploy ID that was rolled back to","type":"string"}}}}},{"type":"object","required":["diskId","sizeGB"],"properties":{"diskId":{"type":"string","pattern":"^dsk-[0-9a-z]{20}$","examples":["dsk-cph1rs3idesc73a2b2mg"]},"sizeGB":{"type":"integer"}}},{"type":"object","required":["diskId","fromSizeGB","toSizeGB"],"properties":{"diskId":{"type":"string","pattern":"^dsk-[0-9a-z]{20}$","examples":["dsk-cph1rs3idesc73a2b2mg"]},"fromSizeGB":{"type":"integer"},"toSizeGB":{"type":"integer"}}},{"type":"object","required":["diskId"],"properties":{"diskId":{"type":"string","pattern":"^dsk-[0-9a-z]{20}$","examples":["dsk-cph1rs3idesc73a2b2mg"]}}},{"type":"object","required":["message","imageURL"],"properties":{"message":{"type":"string"},"imageURL":{"type":"string"}}},{"type":"object","required":["deployId"],"properties":{"deployId":{"type":"string"}}},{"type":"object","required":["fromInstances","toInstances"],"properties":{"fromInstances":{"type":"integer"},"toInstances":{"type":"integer"}}},{"type":"object","required":["jobId","status"],"properties":{"jobId":{"type":"string","pattern":"^job-[0-9a-z]{20}$","examples":["job-cph1rs3idesc73a2b2mg"]},"status":{"type":"string","enum":["succeeded","failed","canceled"],"description":"`succeeded` `failed` `canceled`"},"reason":{"type":"object","required":["evicted"],"properties":{"evicted":{"type":"boolean"},"nonZeroExit":{"type":"integer"},"oomKilled":{"type":"object","required":["memoryLimit"],"properties":{"memoryLimit":{"type":"string"}}},"timedOutSeconds":{"type":"integer","format":"int64","minimum":-9223372036854776000,"maximum":9223372036854776000},"unhealthy":{"type":"string"},"timedOutReason":{"type":"string"}}}}},{"type":"object","required":["enabled"],"properties":{"enabled":{"type":"boolean"}}},{"type":"object","required":["fromURI","toURI"],"properties":{"fromURI":{"type":"string"},"toURI":{"type":"string"}}},{"type":"object","additionalProperties":true},{"type":"object","required":["trigger"],"properties":{"trigger":{"type":"object","required":["manual","startedByRender"],"properties":{"user":{"type":"object","description":"User who triggered the action","required":["id","email"],"properties":{"id":{"type":"string"},"email":{"type":"string"}}},"manual":{"description":"Maintenance was triggered manually","type":"boolean"},"startedByRender":{"description":"Maintenance was triggered by Render","type":"boolean"}}}}},{"type":"object","required":["from","to"],"properties":{"from":{"type":"string"},"to":{"type":"string"}}},{"type":"object","required":["deployCommandExecutionId","deployId","status","reason"],"properties":{"deployCommandExecutionId":{"type":"string"},"deployId":{"type":"string"},"status":{"type":"integer"},"reason":{"type":"object","properties":{"buildFailed":{"type":"object","required":["id"],"properties":{"id":{"type":"string"}}},"newBuild":{"type":"object","required":["id"],"properties":{"id":{"type":"string"}}},"newDeploy":{"type":"object","required":["id"],"properties":{"id":{"type":"string"}}},"failure":{"type":"object","required":["evicted"],"properties":{"evicted":{"type":"boolean"},"nonZeroExit":{"type":"integer"},"oomKilled":{"type":"object","required":["memoryLimit"],"properties":{"memoryLimit":{"type":"string"}}},"timedOutSeconds":{"type":"integer","format":"int64","minimum":-9223372036854776000,"maximum":9223372036854776000},"unhealthy":{"type":"string"},"timedOutReason":{"type":"string"}}}}}}},{"type":"object","required":["deployCommandExecutionId","deployId"],"properties":{"deployCommandExecutionId":{"type":"string"},"deployId":{"type":"string"}}},{"type":"object","additionalProperties":true},{"type":"object","properties":{"reason":{"type":"object","required":["evicted"],"properties":{"evicted":{"type":"boolean"},"nonZeroExit":{"type":"integer"},"oomKilled":{"type":"object","required":["memoryLimit"],"properties":{"memoryLimit":{"type":"string"}}},"timedOutSeconds":{"type":"integer","format":"int64","minimum":-9223372036854776000,"maximum":9223372036854776000},"unhealthy":{"type":"string"},"timedOutReason":{"type":"string"}}}}},{"type":"object","additionalProperties":true},{"type":"object","required":["triggeredByUser"],"properties":{"triggeredByUser":{"type":["string","null"]}}},{"type":"object","additionalProperties":true},{"type":"object","additionalProperties":true},{"type":"object","additionalProperties":true},{"type":"object","required":["actor"],"properties":{"actor":{"type":"string"},"suspendedByUser":{"type":"object","description":"User who triggered the action","required":["id","email"],"properties":{"id":{"type":"string"},"email":{"type":"string"}}}}},{"type":"object","required":["actor"],"properties":{"actor":{"type":"string"},"resumedByUser":{"type":"object","description":"User who triggered the action","required":["id","email"],"properties":{"id":{"type":"string"},"email":{"type":"string"}}}}},{"type":"object","additionalProperties":true},{"type":"object","required":["trigger"],"properties":{"trigger":{"type":"string"}}}]}}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListHeaders = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]},{"type":"object","properties":{"path":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for specific paths that headers apply to"},"name":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for header names"},"value":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for header values"},"cursor":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination)."},"limit":{"type":"integer","default":20,"minimum":1,"maximum":100,"description":"The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).","$schema":"http://json-schema.org/draft-04/schema#"}},"required":[]}]},"response":{"200":{"type":"array","items":{"type":"object","required":["header","cursor"],"properties":{"header":{"type":"object","required":["id","path","name","value"],"properties":{"id":{"type":"string"},"path":{"type":"string"},"name":{"type":"string"},"value":{"type":"string"}}},"cursor":{"type":"string"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListHttpFilterValues = {"metadata":{"allOf":[{"type":"object","properties":{"startTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."},"endTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:30:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."},"resolutionSeconds":{"type":"number","minimum":30,"default":60,"examples":[60],"$schema":"http://json-schema.org/draft-04/schema#","description":"The resolution of the returned data"},"resource":{"type":"string","examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Service ID to query. When multiple service ids are provided, they are ORed together"},"service":{"type":"string","deprecated":true,"examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"This parameter is deprecated. Please use `resource` instead"},"host":{"type":"string","examples":["example.com"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The hosts of HTTP requests to filter to. When multiple host query params are provided, they are ORed together"},"statusCode":{"type":"string","examples":["200"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The status codes of HTTP requests to filter to. When multiple status code query params are provided, they are ORed together"}},"required":[]}]},"response":{"200":{"type":"array","description":"A collection of filter values for HTTP metrics","required":["items"],"items":{"type":"object","properties":{"filter":{"type":"string","enum":["host","statusCode"],"description":"`host` `statusCode`"},"values":{"type":"array","items":{"type":"string","examples":["api.example.com"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListJob = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]},{"type":"object","properties":{"cursor":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination)."},"limit":{"type":"integer","default":20,"minimum":1,"maximum":100,"description":"The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).","$schema":"http://json-schema.org/draft-04/schema#"},"status":{"type":"array","items":{"type":"string","enum":["pending","running","succeeded","failed"]},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for the status of the job (`pending`, `running`, `succeeded`, or `failed`)"},"createdBefore":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for jobs created before a certain time (specified as an ISO 8601 timestamp)"},"createdAfter":{"type":"string","format":"date-time","examples":["2021-02-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for jobs created after a certain time (specified as an ISO 8601 timestamp)"},"startedBefore":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for jobs started before a certain time (specified as an ISO 8601 timestamp)"},"startedAfter":{"type":"string","format":"date-time","examples":["2021-02-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for jobs started after a certain time (specified as an ISO 8601 timestamp)"},"finishedBefore":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for jobs finished before a certain time (specified as an ISO 8601 timestamp)"},"finishedAfter":{"type":"string","format":"date-time","examples":["2021-02-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for jobs finished after a certain time (specified as an ISO 8601 timestamp)"}},"required":[]}]},"response":{"200":{"type":"array","items":{"type":"object","required":["job","cursor"],"properties":{"job":{"type":"object","required":["id","serviceId","startCommand","planId","createdAt"],"properties":{"id":{"type":"string","pattern":"^job-[0-9a-z]{20}$","examples":["job-cph1rs3idesc73a2b2mg"]},"serviceId":{"type":"string","examples":["srv-xxxxx"]},"startCommand":{"type":"string","examples":["echo 'hello world'"]},"planId":{"type":"string","examples":["plan-srv-004"]},"status":{"type":"string","enum":["succeeded","failed","canceled"],"description":"`succeeded` `failed` `canceled`"},"createdAt":{"type":"string","format":"date-time","examples":["2021-07-15T07:20:05.777035-07:00"]},"startedAt":{"type":"string","format":"date-time","examples":["2021-07-15T07:20:05.777035-07:00"]},"finishedAt":{"type":"string","format":"date-time","examples":["2021-07-15T07:20:05.777035-07:00"]}}},"cursor":{"type":"string"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListLogs = {"metadata":{"allOf":[{"type":"object","properties":{"ownerId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the owner (team or personal user) whose resources should be returned"},"startTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."},"endTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:30:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."},"direction":{"default":"backward","type":"string","enum":["forward","backward"],"description":"The direction to query logs for. Backward will return most recent logs first.\nForward will start with the oldest logs in the time range.\n","$schema":"http://json-schema.org/draft-04/schema#"},"resource":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter logs by their resource. A resource is the id of a server, cronjob, job, postgres, or redis."},"instance":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter logs by the instance they were emitted from. An instance is the id of a specific running server."},"host":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter request logs by their host. [Wildcards and regex](https://docs.render.com/logging#wildcards-and-regular-expressions) are supported."},"statusCode":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter request logs by their status code. [Wildcards and regex](https://docs.render.com/logging#wildcards-and-regular-expressions) are supported."},"method":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter request logs by their requests method. [Wildcards and regex](https://docs.render.com/logging#wildcards-and-regular-expressions) are supported."},"level":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter logs by their severity level. [Wildcards and regex](https://docs.render.com/logging#wildcards-and-regular-expressions) are supported."},"type":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter logs by their type. Types include `app` for application logs, `request` for request logs, and `build` for build logs. You can find the full set of types available for a query by using the `GET /logs/values` endpoint."},"text":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter by the text of the logs. [Wildcards and regex](https://docs.render.com/logging#wildcards-and-regular-expressions) are supported."},"path":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter request logs by their path. [Wildcards and regex](https://docs.render.com/logging#wildcards-and-regular-expressions) are supported."},"limit":{"type":"integer","default":20,"minimum":1,"maximum":100,"description":"The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).","$schema":"http://json-schema.org/draft-04/schema#"}},"required":["ownerId","resource"]}]},"response":{"200":{"type":"object","description":"A run of a cron job","required":["hasMore","nextStartTime","nextEndTime","logs"],"properties":{"hasMore":{"description":"Ture if there are more logs to fetch","type":"boolean"},"nextStartTime":{"description":"The start time to use in the next query to fetch the next set of logs","type":"string","format":"date-time","examples":["2021-07-15T07:20:05.777035-07:00"]},"nextEndTime":{"description":"The end time to use in the next query to fetch the next set of logs","type":"string","format":"date-time","examples":["2021-07-15T07:20:05.777035-07:00"]},"logs":{"type":"array","items":{"type":"object","description":"A log entry with metadata","required":["id","message","timestamp","labels"],"properties":{"id":{"description":"A unique ID of the log entry","type":"string"},"message":{"description":"The message of the log entry","type":"string"},"timestamp":{"description":"The timestamp of the log entry","type":"string","format":"date-time"},"labels":{"type":"array","items":{"type":"object","description":"A log label","required":["name","value"],"properties":{"name":{"description":"The name of the log label\n\n`resource` `instance` `host` `statusCode` `method` `level` `type` `text` `path`","type":"string","enum":["resource","instance","host","statusCode","method","level","type","text","path"]},"value":{"description":"The value of the log label","type":"string"}}}}}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListLogsValues = {"metadata":{"allOf":[{"type":"object","properties":{"ownerId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the owner (team or personal user) whose resources should be returned"},"label":{"type":"string","enum":["instance","host","statusCode","method","level","type"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The label to query logs for"},"startTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."},"endTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:30:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."},"direction":{"default":"backward","type":"string","enum":["forward","backward"],"description":"The direction to query logs for. Backward will return most recent logs first.\nForward will start with the oldest logs in the time range.\n","$schema":"http://json-schema.org/draft-04/schema#"},"resource":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter logs by their resource. A resource is the id of a server, cronjob, job, postgres, or redis."},"instance":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter logs by the instance they were emitted from. An instance is the id of a specific running server."},"host":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter request logs by their host. [Wildcards and regex](https://docs.render.com/logging#wildcards-and-regular-expressions) are supported."},"statusCode":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter request logs by their status code. [Wildcards and regex](https://docs.render.com/logging#wildcards-and-regular-expressions) are supported."},"method":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter request logs by their requests method. [Wildcards and regex](https://docs.render.com/logging#wildcards-and-regular-expressions) are supported."},"level":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter logs by their severity level. [Wildcards and regex](https://docs.render.com/logging#wildcards-and-regular-expressions) are supported."},"type":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter logs by their type. Types include `app` for application logs, `request` for request logs, and `build` for build logs. You can find the full set of types available for a query by using the `GET /logs/values` endpoint."},"text":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter by the text of the logs. [Wildcards and regex](https://docs.render.com/logging#wildcards-and-regular-expressions) are supported."},"path":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter request logs by their path. [Wildcards and regex](https://docs.render.com/logging#wildcards-and-regular-expressions) are supported."},"limit":{"type":"integer","default":20,"minimum":1,"maximum":100,"description":"The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).","$schema":"http://json-schema.org/draft-04/schema#"}},"required":["ownerId","label","resource"]}]},"response":{"200":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListMaintenance = {"metadata":{"allOf":[{"type":"object","properties":{"resourceId":{"type":"array","items":{"type":"string","description":"The Id of a resource that can undergo maintenance (Id of a service, a Postgres instance, or a Redis instance)"},"$schema":"http://json-schema.org/draft-04/schema#"},"ownerId":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the owner (team or personal user) whose resources should be returned"},"state":{"type":"array","items":{"type":"string","enum":["scheduled","in_progress","user_fix_required","cancelled","succeeded","failed"]},"$schema":"http://json-schema.org/draft-04/schema#"}},"required":[]}]},"response":{"200":{"type":"array","items":{"type":"object","required":["id","type","scheduledAt","state","resourceId"],"properties":{"id":{"type":"string","pattern":"^mrn-[0-9a-z]{20}$","examples":["mrn-cph1rs3idesc73a2b2mg"]},"type":{"type":"string"},"scheduledAt":{"type":"string","format":"date-time"},"pendingMaintenanceBy":{"type":"string","format":"date-time","description":"If present, the maintenance run cannot be scheduled for later than this date-time."},"state":{"type":"string","enum":["scheduled","in_progress","user_fix_required","cancelled","succeeded","failed"],"description":"`scheduled` `in_progress` `user_fix_required` `cancelled` `succeeded` `failed`"},"resourceId":{"type":"string","description":"The Id of a resource that can undergo maintenance (Id of a service, a Postgres instance, or a Redis instance)"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListNotificationOverrides = {"metadata":{"allOf":[{"type":"object","properties":{"ownerId":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the owner (team or personal user) whose resources should be returned"},"serviceId":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources by service ID"},"cursor":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination)."},"limit":{"type":"integer","default":20,"minimum":1,"maximum":100,"description":"The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).","$schema":"http://json-schema.org/draft-04/schema#"}},"required":[]}]},"response":{"200":{"type":"array","items":{"required":["override","cursor"],"type":"object","properties":{"override":{"type":"object","required":["type","serviceId","previewNotificationsEnabled","notificationsToSend"],"properties":{"serviceId":{"type":"string"},"previewNotificationsEnabled":{"type":"string","enum":["default","false","true"],"description":"`default` `false` `true`"},"notificationsToSend":{"type":"string","enum":["default","none","failure","all"],"description":"`default` `none` `failure` `all`"}}},"cursor":{"type":"string"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListOwners = {"metadata":{"allOf":[{"type":"object","properties":{"name":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#"},"email":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#"},"cursor":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination)."},"limit":{"type":"integer","default":20,"minimum":1,"maximum":100,"description":"The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).","$schema":"http://json-schema.org/draft-04/schema#"}},"required":[]}]},"response":{"200":{"type":"array","items":{"type":"object","properties":{"owner":{"type":"object","required":["id","name","email","type"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"email":{"type":"string"},"twoFactorAuthEnabled":{"type":"boolean","description":"Whether two-factor authentication is enabled for the owner. Only present for user owners."},"type":{"type":"string","enum":["user","team"],"description":"`user` `team`"}}},"cursor":{"type":"string"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListPathFilterValues = {"metadata":{"allOf":[{"type":"object","properties":{"startTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."},"endTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:30:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."},"resolutionSeconds":{"type":"number","minimum":30,"default":60,"examples":[60],"$schema":"http://json-schema.org/draft-04/schema#","description":"The resolution of the returned data"},"resource":{"type":"string","examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Service ID to query. When multiple service ids are provided, they are ORed together"},"service":{"type":"string","deprecated":true,"examples":["srv-xxxxx"],"$schema":"http://json-schema.org/draft-04/schema#","description":"This parameter is deprecated. Please use `resource` instead"},"host":{"type":"string","examples":["example.com"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The hosts of HTTP requests to filter to. When multiple host query params are provided, they are ORed together"},"statusCode":{"type":"string","examples":["200"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The status codes of HTTP requests to filter to. When multiple status code query params are provided, they are ORed together"},"path":{"type":"string","examples":["/graphql"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The paths of HTTP requests to filter to. When multiple path query params are provided, they are ORed together"}},"required":[]}]},"response":{"200":{"type":"array","description":"A collection of suggested paths to filter by","required":["items"],"items":{"type":"string","examples":["/user/*"]},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListPostgres = {"metadata":{"allOf":[{"type":"object","properties":{"name":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter by name"},"region":{"type":"array","items":{"type":"string","enum":["frankfurt","oregon","ohio","singapore","virginia"],"default":"oregon","description":"Defaults to \"oregon\"\n\nDefault: `oregon`"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter by resource region"},"suspended":{"type":"array","items":{"type":"string","enum":["suspended","not_suspended"]},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter resources based on whether they're suspended or not suspended"},"createdBefore":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources created before a certain time (specified as an ISO 8601 timestamp)"},"createdAfter":{"type":"string","format":"date-time","examples":["2021-02-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources created after a certain time (specified as an ISO 8601 timestamp)"},"updatedBefore":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources updated before a certain time (specified as an ISO 8601 timestamp)"},"updatedAfter":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources updated after a certain time (specified as an ISO 8601 timestamp)"},"ownerId":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the owner (team or personal user) whose resources should be returned"},"environmentId":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources that belong to an environment"},"includeReplicas":{"type":"boolean","default":true,"$schema":"http://json-schema.org/draft-04/schema#","description":"Include replicas in the response"},"cursor":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination)."},"limit":{"type":"integer","default":20,"minimum":1,"maximum":100,"description":"The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).","$schema":"http://json-schema.org/draft-04/schema#"}},"required":[]}]},"response":{"200":{"type":"array","items":{"type":"object","required":["postgres","cursor"],"properties":{"postgres":{"type":"object","required":["id","ipAllowList","createdAt","updatedAt","databaseName","databaseUser","highAvailabilityEnabled","name","owner","plan","region","readReplicas","role","status","version","suspended","suspenders","dashboardUrl"],"properties":{"id":{"type":"string"},"ipAllowList":{"type":"array","items":{"type":"object","required":["cidrBlock","description"],"properties":{"cidrBlock":{"type":"string"},"description":{"description":"User-provided description of the CIDR block","type":"string"}}}},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"},"expiresAt":{"description":"The time at which the database will be expire. Applies to free tier databases only.","type":"string","format":"date-time"},"databaseName":{"type":"string"},"databaseUser":{"type":"string"},"environmentId":{"type":"string"},"highAvailabilityEnabled":{"type":"boolean"},"name":{"type":"string"},"owner":{"type":"object","required":["id","name","email","type"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"email":{"type":"string"},"twoFactorAuthEnabled":{"type":"boolean","description":"Whether two-factor authentication is enabled for the owner. Only present for user owners."},"type":{"type":"string","enum":["user","team"],"description":"`user` `team`"}}},"plan":{"type":"string","enum":["free","starter","standard","pro","pro_plus","custom","basic_256mb","basic_1gb","basic_4gb","pro_4gb","pro_8gb","pro_16gb","pro_32gb","pro_64gb","pro_128gb","pro_192gb","pro_256gb","pro_384gb","pro_512gb","accelerated_16gb","accelerated_32gb","accelerated_64gb","accelerated_128gb","accelerated_256gb","accelerated_384gb","accelerated_512gb","accelerated_768gb","accelerated_1024gb"],"description":"`free` `starter` `standard` `pro` `pro_plus` `custom` `basic_256mb` `basic_1gb` `basic_4gb` `pro_4gb` `pro_8gb` `pro_16gb` `pro_32gb` `pro_64gb` `pro_128gb` `pro_192gb` `pro_256gb` `pro_384gb` `pro_512gb` `accelerated_16gb` `accelerated_32gb` `accelerated_64gb` `accelerated_128gb` `accelerated_256gb` `accelerated_384gb` `accelerated_512gb` `accelerated_768gb` `accelerated_1024gb`"},"diskSizeGB":{"type":"integer"},"primaryPostgresID":{"type":"string"},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore","virginia"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore` `virginia`"},"readReplicas":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"The replica instance identifier."},"name":{"type":"string","description":"The display name of the replica instance."}},"required":["id","name"]}},"role":{"type":"string","enum":["primary","replica"],"description":"`primary` `replica`"},"status":{"type":"string","enum":["creating","available","unavailable","config_restart","suspended","maintenance_scheduled","maintenance_in_progress","recovery_failed","recovery_in_progress","unknown","updating_instance"],"description":"`creating` `available` `unavailable` `config_restart` `suspended` `maintenance_scheduled` `maintenance_in_progress` `recovery_failed` `recovery_in_progress` `unknown` `updating_instance`"},"version":{"type":"string","description":"The PostgreSQL version\n\n`11` `12` `13` `14` `15` `16`","enum":["11","12","13","14","15","16"]},"suspended":{"type":"string","enum":["suspended","not_suspended"],"description":"`suspended` `not_suspended`"},"suspenders":{"type":"array","items":{"type":"string","enum":["admin","billing","user","parent_service","unknown"],"description":"`admin` `billing` `user` `parent_service` `unknown`"}},"dashboardUrl":{"type":"string","description":"The URL to view the PostgreSQL instance in the Render Dashboard"}}},"cursor":{"type":"string"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"409":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListPostgresBackup = {"metadata":{"allOf":[{"type":"object","properties":{"postgresId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":["postgresId"]}]},"response":{"200":{"type":"array","items":{"type":"object","required":["id","createdAt"],"properties":{"id":{"type":"string"},"createdAt":{"type":"string","format":"date-time"},"url":{"type":"string","description":"URL to download the Postgres backup"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListProjects = {"metadata":{"allOf":[{"type":"object","properties":{"name":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter by name"},"createdBefore":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources created before a certain time (specified as an ISO 8601 timestamp)"},"createdAfter":{"type":"string","format":"date-time","examples":["2021-02-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources created after a certain time (specified as an ISO 8601 timestamp)"},"updatedBefore":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources updated before a certain time (specified as an ISO 8601 timestamp)"},"updatedAfter":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources updated after a certain time (specified as an ISO 8601 timestamp)"},"ownerId":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the owner (team or personal user) whose resources should be returned"},"cursor":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination)."},"limit":{"type":"integer","default":20,"minimum":1,"maximum":100,"description":"The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).","$schema":"http://json-schema.org/draft-04/schema#"}},"required":[]}]},"response":{"200":{"type":"array","items":{"type":"object","required":["project","cursor"],"properties":{"project":{"description":"A project is a collection of environments","type":"object","required":["id","createdAt","updatedAt","name","owner","environmentIds"],"properties":{"id":{"description":"The ID of the project","type":"string"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"},"name":{"description":"The name of the project","type":"string"},"owner":{"type":"object","required":["id","name","email","type"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"email":{"type":"string"},"twoFactorAuthEnabled":{"type":"boolean","description":"Whether two-factor authentication is enabled for the owner. Only present for user owners."},"type":{"type":"string","enum":["user","team"],"description":"`user` `team`"}}},"environmentIds":{"description":"The environments associated with the project","type":"array","items":{"type":"string","description":"The ID of the environment"}}}},"cursor":{"type":"string"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListRedis = {"metadata":{"allOf":[{"type":"object","properties":{"name":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter by name"},"region":{"type":"array","items":{"type":"string","enum":["frankfurt","oregon","ohio","singapore","virginia"],"default":"oregon","description":"Defaults to \"oregon\"\n\nDefault: `oregon`"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter by resource region"},"createdBefore":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources created before a certain time (specified as an ISO 8601 timestamp)"},"createdAfter":{"type":"string","format":"date-time","examples":["2021-02-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources created after a certain time (specified as an ISO 8601 timestamp)"},"updatedBefore":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources updated before a certain time (specified as an ISO 8601 timestamp)"},"updatedAfter":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources updated after a certain time (specified as an ISO 8601 timestamp)"},"ownerId":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the owner (team or personal user) whose resources should be returned"},"environmentId":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources that belong to an environment"},"cursor":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination)."},"limit":{"type":"integer","default":20,"minimum":1,"maximum":100,"description":"The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).","$schema":"http://json-schema.org/draft-04/schema#"}},"required":[]}]},"response":{"200":{"type":"array","items":{"type":"object","required":["redis","cursor"],"properties":{"redis":{"type":"object","description":"A Redis instance","required":["id","createdAt","updatedAt","status","region","plan","name","owner","options","ipAllowList","version","dashboardUrl"],"properties":{"id":{"description":"The ID of the Redis instance","type":"string"},"createdAt":{"description":"The creation time of the Redis instance","type":"string","format":"date-time"},"updatedAt":{"description":"The last updated time of the Redis instance","type":"string","format":"date-time"},"status":{"type":"string","enum":["creating","available","unavailable","config_restart","suspended","maintenance_scheduled","maintenance_in_progress","recovery_failed","recovery_in_progress","unknown","updating_instance"],"description":"`creating` `available` `unavailable` `config_restart` `suspended` `maintenance_scheduled` `maintenance_in_progress` `recovery_failed` `recovery_in_progress` `unknown` `updating_instance`"},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore","virginia"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore` `virginia`"},"plan":{"type":"string","enum":["free","starter","standard","pro","pro_plus","custom"],"x-enum-varnames":["RedisPlanFree","RedisPlanStarter","RedisPlanStandard","RedisPlanPro","RedisPlanPro_plus","RedisPlanCustom"],"description":"`free` `starter` `standard` `pro` `pro_plus` `custom`"},"name":{"description":"The name of the Redis instance","type":"string"},"owner":{"type":"object","required":["id","name","email","type"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"email":{"type":"string"},"twoFactorAuthEnabled":{"type":"boolean","description":"Whether two-factor authentication is enabled for the owner. Only present for user owners."},"type":{"type":"string","enum":["user","team"],"description":"`user` `team`"}}},"options":{"description":"Options for a Redis instance","type":"object","properties":{"maxmemoryPolicy":{"type":"string"}}},"ipAllowList":{"description":"The IP allow list for the Redis instance","type":"array","items":{"type":"object","required":["cidrBlock","description"],"properties":{"cidrBlock":{"type":"string"},"description":{"description":"User-provided description of the CIDR block","type":"string"}}}},"environmentId":{"description":"The ID of the environment the Redis instance is associated with","type":"string"},"version":{"description":"The version of Redis","type":"string"},"dashboardUrl":{"type":"string","description":"The URL to view the Redis instance in the Render Dashboard"}}},"cursor":{"type":"string"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"409":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListRegistryCredentials = {"metadata":{"allOf":[{"type":"object","properties":{"name":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for the name of a credential"},"username":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for the username of a credential"},"type":{"type":"array","items":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT","AWS_ECR"],"description":"The registry to use this credential with"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for the registry type for the credential"},"createdBefore":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for services created before a certain time (specified as an ISO 8601 timestamp)"},"createdAfter":{"type":"string","format":"date-time","examples":["2021-02-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for services created after a certain time (specified as an ISO 8601 timestamp)"},"updatedBefore":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for services updated before a certain time (specified as an ISO 8601 timestamp)"},"updatedAfter":{"type":"string","format":"date-time","examples":["2021-02-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for services updated after a certain time (specified as an ISO 8601 timestamp)"},"ownerId":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the owner (team or personal user) whose resources should be returned"},"cursor":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination)."},"limit":{"type":"integer","default":20,"minimum":1,"maximum":100,"description":"The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).","$schema":"http://json-schema.org/draft-04/schema#"}},"required":[]}]},"response":{"200":{"type":"array","items":{"type":"object","required":["id","name","username","registry","updatedAt"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT","AWS_ECR"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT` `AWS_ECR`"},"username":{"type":"string","description":"The username associated with the credential"},"updatedAt":{"type":"string","format":"date-time","description":"Last updated time for the credential"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListResourceLogStreams = {"metadata":{"allOf":[{"type":"object","properties":{"ownerId":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the owner (team or personal user) whose resources should be returned"},"logStreamId":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter log streams by their id."},"resourceId":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"IDs of resources (server, cron job, postgres, or redis) to filter by"},"setting":{"type":"array","items":{"type":"string","description":"Whether to send logs or drop them.","enum":["send","drop"]},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter log streams by their setting."},"cursor":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination)."},"limit":{"type":"integer","default":20,"minimum":1,"maximum":100,"description":"The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).","$schema":"http://json-schema.org/draft-04/schema#"}},"required":[]}]},"response":{"200":{"type":"array","items":{"type":"object","description":"Resource log stream overrides","properties":{"resourceId":{"description":"The ID of the resource.","type":"string"},"endpoint":{"description":"The endpoint to stream logs to. Must be present if setting is send. Cannot be present if setting is drop.","type":"string"},"setting":{"type":"string","description":"Whether to send logs or drop them.\n\n`send` `drop`","enum":["send","drop"]}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListRoutes = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]},{"type":"object","properties":{"type":{"type":"array","items":{"type":"string","enum":["redirect","rewrite"]},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for the type of route rule"},"source":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for the source path of the route"},"destination":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for the destination path of the route"},"cursor":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination)."},"limit":{"type":"integer","default":20,"minimum":1,"maximum":100,"description":"The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).","$schema":"http://json-schema.org/draft-04/schema#"}},"required":[]}]},"response":{"200":{"type":"array","items":{"type":"object","required":["route","cursor"],"properties":{"route":{"type":"object","required":["id","type","source","destination","priority"],"properties":{"id":{"type":"string"},"type":{"type":"string","enum":["redirect","rewrite"],"description":"`redirect` `rewrite`"},"source":{"type":"string"},"destination":{"type":"string"},"priority":{"type":"integer","description":"Redirect and Rewrite Rules are applied in priority order starting at 0"}}},"cursor":{"type":"string"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListSecretFilesForService = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]},{"type":"object","properties":{"cursor":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination)."},"limit":{"type":"integer","default":20,"minimum":1,"maximum":100,"description":"The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).","$schema":"http://json-schema.org/draft-04/schema#"}},"required":[]}]},"response":{"200":{"type":"array","items":{"type":"object","required":["secretFile","cursor"],"properties":{"secretFile":{"type":"object","required":["name","content"],"properties":{"name":{"type":"string"},"content":{"type":"string"}}},"cursor":{"type":"string"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListServices = {"metadata":{"allOf":[{"type":"object","properties":{"name":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter by name"},"type":{"type":"array","items":{"type":"string","enum":["static_site","web_service","private_service","background_worker","cron_job"]},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for types of services"},"environmentId":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources that belong to an environment"},"env":{"type":"array","items":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime"},"deprecated":true,"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for environments (runtimes) of services (deprecated; use `runtime` instead)"},"region":{"type":"array","items":{"type":"string","enum":["frankfurt","oregon","ohio","singapore","virginia"],"default":"oregon","description":"Defaults to \"oregon\"\n\nDefault: `oregon`"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter by resource region"},"suspended":{"type":"array","items":{"type":"string","enum":["suspended","not_suspended"]},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter resources based on whether they're suspended or not suspended"},"createdBefore":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources created before a certain time (specified as an ISO 8601 timestamp)"},"createdAfter":{"type":"string","format":"date-time","examples":["2021-02-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources created after a certain time (specified as an ISO 8601 timestamp)"},"updatedBefore":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources updated before a certain time (specified as an ISO 8601 timestamp)"},"updatedAfter":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources updated after a certain time (specified as an ISO 8601 timestamp)"},"ownerId":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the owner (team or personal user) whose resources should be returned"},"includePreviews":{"type":"boolean","default":true,"$schema":"http://json-schema.org/draft-04/schema#","description":"Include previews in the response"},"cursor":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination)."},"limit":{"type":"integer","default":20,"minimum":1,"maximum":100,"description":"The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).","$schema":"http://json-schema.org/draft-04/schema#"}},"required":[]}]},"response":{"200":{"type":"array","items":{"type":"object","required":["service","cursor"],"properties":{"service":{"type":"object","required":["id","name","ownerId","type","createdAt","dashboardUrl","updatedAt","suspended","suspenders","autoDeploy","notifyOnFail","slug","serviceDetails","rootDir"],"properties":{"id":{"type":"string"},"autoDeploy":{"type":"string","enum":["yes","no"],"default":"yes","description":"`yes` `no`"},"branch":{"type":"string"},"buildFilter":{"type":"object","required":["paths","ignoredPaths"],"properties":{"paths":{"type":"array","items":{"type":"string"}},"ignoredPaths":{"type":"array","items":{"type":"string"}}}},"createdAt":{"type":"string","format":"date-time"},"dashboardUrl":{"type":"string","description":"The URL to view the service in the Render Dashboard"},"environmentId":{"type":"string"},"imagePath":{"type":"string"},"name":{"type":"string"},"notifyOnFail":{"type":"string","enum":["default","notify","ignore"],"description":"`default` `notify` `ignore`"},"ownerId":{"type":"string"},"registryCredential":{"type":"object","required":["id","name"],"properties":{"id":{"type":"string"},"name":{"type":"string"}}},"repo":{"type":"string","examples":["https://github.com/render-examples/flask-hello-world"]},"rootDir":{"type":"string"},"slug":{"type":"string"},"suspended":{"type":"string","enum":["suspended","not_suspended"],"description":"`suspended` `not_suspended`"},"suspenders":{"type":"array","items":{"type":"string","enum":["admin","billing","user","parent_service","unknown"],"description":"`admin` `billing` `user` `parent_service` `unknown`"}},"type":{"type":"string","enum":["static_site","web_service","private_service","background_worker","cron_job"],"description":"`static_site` `web_service` `private_service` `background_worker` `cron_job`"},"updatedAt":{"type":"string","format":"date-time"},"serviceDetails":{"oneOf":[{"type":"object","required":["buildCommand","publishPath","url","buildPlan"],"properties":{"buildCommand":{"type":"string"},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"publishPath":{"type":"string"},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"default":"no","deprecated":true,"description":"This field has been deprecated. previews.generation should be used in its place.\n\n`yes` `no`"},"previews":{"type":"object","properties":{"generation":{"type":"string","enum":["off","manual","automatic"],"default":"off","description":"Defaults to \"off\"\n\n`off` `manual` `automatic`"}}},"url":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"}}},{"type":"object","required":["env","runtime","envSpecificDetails","plan","region","numInstances","buildPlan","healthCheckPath","openPorts","url"],"properties":{"autoscaling":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}}},"disk":{"type":"object","required":["id","name","sizeGB","mountPath"],"properties":{"id":{"type":"string","pattern":"^dsk-[0-9a-z]{20}$","examples":["dsk-cph1rs3idesc73a2b2mg"]},"name":{"type":"string"},"sizeGB":{"type":"integer"},"mountPath":{"type":"string"}}},"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"deprecated":true,"description":"This field has been deprecated, runtime should be used in its place.\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry","updatedAt"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT","AWS_ECR"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT` `AWS_ECR`"},"username":{"type":"string","description":"The username associated with the credential"},"updatedAt":{"type":"string","format":"date-time","description":"Last updated time for the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"healthCheckPath":{"type":"string"},"maintenanceMode":{"type":"object","required":["enabled","uri"],"properties":{"enabled":{"type":"boolean"},"uri":{"type":"string","description":"The page to be served when [maintenance mode](https://docs.render.com/maintenance-mode) is enabled. When empty, the default maintenance mode page is served."}}},"numInstances":{"type":"integer","description":"For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."},"openPorts":{"type":"array","items":{"type":"object","required":["port","protocol"],"properties":{"port":{"type":"integer","examples":[10000]},"protocol":{"type":"string","enum":["TCP","UDP"],"description":"`TCP` `UDP`"}}}},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"default":"no","deprecated":true,"description":"This field has been deprecated. previews.generation should be used in its place.\n\n`yes` `no`"},"previews":{"type":"object","properties":{"generation":{"type":"string","enum":["off","manual","automatic"],"default":"off","description":"Defaults to \"off\"\n\n`off` `manual` `automatic`"}}},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore","virginia"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore` `virginia`"},"runtime":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"sshAddress":{"type":"string","description":"The SSH address for the service. Only present for services that have SSH enabled."},"url":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"},"maxShutdownDelaySeconds":{"type":"integer","description":"The maximum amount of time (in seconds) that Render waits for your application process to exit gracefully after sending it a SIGTERM signal.","minimum":1,"maximum":300,"default":30}}},{"type":"object","required":["env","runtime","envSpecificDetails","plan","region","numInstances","buildPlan","openPorts","url"],"properties":{"autoscaling":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}}},"disk":{"type":"object","required":["id","name","sizeGB","mountPath"],"properties":{"id":{"type":"string","pattern":"^dsk-[0-9a-z]{20}$","examples":["dsk-cph1rs3idesc73a2b2mg"]},"name":{"type":"string"},"sizeGB":{"type":"integer"},"mountPath":{"type":"string"}}},"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"deprecated":true,"description":"This field has been deprecated, runtime should be used in its place.\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry","updatedAt"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT","AWS_ECR"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT` `AWS_ECR`"},"username":{"type":"string","description":"The username associated with the credential"},"updatedAt":{"type":"string","format":"date-time","description":"Last updated time for the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"numInstances":{"type":"integer","description":"For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."},"openPorts":{"type":"array","items":{"type":"object","required":["port","protocol"],"properties":{"port":{"type":"integer","examples":[10000]},"protocol":{"type":"string","enum":["TCP","UDP"],"description":"`TCP` `UDP`"}}}},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"default":"no","deprecated":true,"description":"This field has been deprecated. previews.generation should be used in its place.\n\n`yes` `no`"},"previews":{"type":"object","properties":{"generation":{"type":"string","enum":["off","manual","automatic"],"default":"off","description":"Defaults to \"off\"\n\n`off` `manual` `automatic`"}}},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore","virginia"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore` `virginia`"},"runtime":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"sshAddress":{"type":"string","description":"The SSH address for the service. Only present for services that have SSH enabled."},"url":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"},"maxShutdownDelaySeconds":{"type":"integer","description":"The maximum amount of time (in seconds) that Render waits for your application process to exit gracefully after sending it a SIGTERM signal.","minimum":1,"maximum":300,"default":30}}},{"type":"object","required":["env","runtime","envSpecificDetails","plan","region","numInstances","buildPlan"],"properties":{"autoscaling":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}}},"disk":{"type":"object","required":["id","name","sizeGB","mountPath"],"properties":{"id":{"type":"string","pattern":"^dsk-[0-9a-z]{20}$","examples":["dsk-cph1rs3idesc73a2b2mg"]},"name":{"type":"string"},"sizeGB":{"type":"integer"},"mountPath":{"type":"string"}}},"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"deprecated":true,"description":"This field has been deprecated, runtime should be used in its place.\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry","updatedAt"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT","AWS_ECR"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT` `AWS_ECR`"},"username":{"type":"string","description":"The username associated with the credential"},"updatedAt":{"type":"string","format":"date-time","description":"Last updated time for the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"numInstances":{"type":"integer","description":"For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"default":"no","deprecated":true,"description":"This field has been deprecated. previews.generation should be used in its place.\n\n`yes` `no`"},"previews":{"type":"object","properties":{"generation":{"type":"string","enum":["off","manual","automatic"],"default":"off","description":"Defaults to \"off\"\n\n`off` `manual` `automatic`"}}},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore","virginia"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore` `virginia`"},"runtime":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"sshAddress":{"type":"string","description":"The SSH address for the service. Only present for services that have SSH enabled."},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"},"maxShutdownDelaySeconds":{"type":"integer","description":"The maximum amount of time (in seconds) that Render waits for your application process to exit gracefully after sending it a SIGTERM signal.","minimum":1,"maximum":300,"default":30}}},{"required":["env","runtime","envSpecificDetails","plan","region","schedule","buildPlan"],"type":"object","properties":{"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"deprecated":true,"description":"This field has been deprecated, runtime should be used in its place.\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry","updatedAt"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT","AWS_ECR"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT` `AWS_ECR`"},"username":{"type":"string","description":"The username associated with the credential"},"updatedAt":{"type":"string","format":"date-time","description":"Last updated time for the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"lastSuccessfulRunAt":{"type":"string","format":"date-time"},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore","virginia"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore` `virginia`"},"runtime":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"schedule":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"}}}]}}},"cursor":{"type":"string"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListSnapshots = {"metadata":{"allOf":[{"type":"object","properties":{"diskId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the disk"}},"required":["diskId"]}]},"response":{"201":{"type":"array","items":{"type":"object","properties":{"createdAt":{"type":"string","format":"date-time"},"snapshotKey":{"type":"string"},"instanceId":{"description":"When a service with a disk is scaled, the instanceId is used to identify the instance that the disk is attached to. Each instance's disks get their own snapshots, and can be restored separately.","type":"string"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const PatchOwnerNotificationSettings = {"body":{"type":"object","properties":{"emailEnabled":{"type":"boolean"},"previewNotificationsEnabled":{"type":"boolean"},"notificationsToSend":{"type":"string","enum":["none","failure","all"]}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"ownerId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the owner (team or personal user) whose resources should be returned"}},"required":["ownerId"]}]},"response":{"200":{"type":"object","required":["ownerId","slackEnabled","emailEnabled","previewNotificationsEnabled","notificationsToSend"],"properties":{"ownerId":{"type":"string"},"slackEnabled":{"type":"boolean"},"emailEnabled":{"type":"boolean"},"previewNotificationsEnabled":{"type":"boolean"},"notificationsToSend":{"type":"string","enum":["none","failure","all"],"description":"`none` `failure` `all`"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const PatchRoute = {"body":{"type":"object","required":["priority"],"properties":{"priority":{"x-go-type":"*int","type":"integer","description":"Redirect and Rewrite Rules are applied in priority order starting at 0. Moves this route to the specified priority and adjusts other route priorities accordingly."}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]}]},"response":{"200":{"type":"object","properties":{"headers":{"type":"object","required":["id","type","source","destination","priority"],"properties":{"id":{"type":"string"},"type":{"type":"string","enum":["redirect","rewrite"],"description":"`redirect` `rewrite`"},"source":{"type":"string"},"destination":{"type":"string"},"priority":{"type":"integer","description":"Redirect and Rewrite Rules are applied in priority order starting at 0"}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const PatchServiceNotificationOverrides = {"body":{"type":"object","properties":{"previewNotificationsEnabled":{"type":"string","enum":["default","false","true"]},"notificationsToSend":{"type":"string","enum":["default","none","failure","all"]}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]}]},"response":{"200":{"type":"object","required":["serviceId","previewNotificationsEnabled","notificationsToSend"],"properties":{"serviceId":{"type":"string"},"previewNotificationsEnabled":{"type":"string","enum":["default","false","true"],"description":"`default` `false` `true`"},"notificationsToSend":{"type":"string","enum":["default","none","failure","all"],"description":"`default` `none` `failure` `all`"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const PostJob = {"body":{"type":"object","required":["startCommand"],"properties":{"startCommand":{"type":"string"},"planId":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]}]},"response":{"201":{"type":"object","required":["id","serviceId","startCommand","planId","createdAt"],"properties":{"id":{"type":"string","pattern":"^job-[0-9a-z]{20}$","examples":["job-cph1rs3idesc73a2b2mg"]},"serviceId":{"type":"string","examples":["srv-xxxxx"]},"startCommand":{"type":"string","examples":["echo 'hello world'"]},"planId":{"type":"string","examples":["plan-srv-004"]},"status":{"type":"string","enum":["succeeded","failed","canceled"],"description":"`succeeded` `failed` `canceled`"},"createdAt":{"type":"string","format":"date-time","examples":["2021-07-15T07:20:05.777035-07:00"]},"startedAt":{"type":"string","format":"date-time","examples":["2021-07-15T07:20:05.777035-07:00"]},"finishedAt":{"type":"string","format":"date-time","examples":["2021-07-15T07:20:05.777035-07:00"]}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const PreviewService = {"body":{"type":"object","required":["imagePath"],"properties":{"imagePath":{"type":"string","description":"Must be either a full URL or the relative path to an image. If a relative path, Render uses the base service's image URL as its root. For example, if the base service's image URL is `docker.io/library/nginx:latest`, then valid values are: `docker.io/library/nginx:<any tag or SHA>`, `library/nginx:<any tag or SHA>`, or `nginx:<any tag or SHA>`. Note that the path must match (only the tag or SHA can vary).","examples":["docker.io/library/nginx:latest"]},"name":{"type":"string","description":"A name for the service preview instance. If not specified, Render generates the name using the base service's name and the specified tag or SHA.","examples":["preview"]},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.","examples":["starter"]}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]}]},"response":{"200":{"type":"object","properties":{"service":{"type":"object","required":["id","name","ownerId","type","createdAt","dashboardUrl","updatedAt","suspended","suspenders","autoDeploy","notifyOnFail","slug","serviceDetails","rootDir"],"properties":{"id":{"type":"string"},"autoDeploy":{"type":"string","enum":["yes","no"],"default":"yes","description":"`yes` `no`"},"branch":{"type":"string"},"buildFilter":{"type":"object","required":["paths","ignoredPaths"],"properties":{"paths":{"type":"array","items":{"type":"string"}},"ignoredPaths":{"type":"array","items":{"type":"string"}}}},"createdAt":{"type":"string","format":"date-time"},"dashboardUrl":{"type":"string","description":"The URL to view the service in the Render Dashboard"},"environmentId":{"type":"string"},"imagePath":{"type":"string"},"name":{"type":"string"},"notifyOnFail":{"type":"string","enum":["default","notify","ignore"],"description":"`default` `notify` `ignore`"},"ownerId":{"type":"string"},"registryCredential":{"type":"object","required":["id","name"],"properties":{"id":{"type":"string"},"name":{"type":"string"}}},"repo":{"type":"string","examples":["https://github.com/render-examples/flask-hello-world"]},"rootDir":{"type":"string"},"slug":{"type":"string"},"suspended":{"type":"string","enum":["suspended","not_suspended"],"description":"`suspended` `not_suspended`"},"suspenders":{"type":"array","items":{"type":"string","enum":["admin","billing","user","parent_service","unknown"],"description":"`admin` `billing` `user` `parent_service` `unknown`"}},"type":{"type":"string","enum":["static_site","web_service","private_service","background_worker","cron_job"],"description":"`static_site` `web_service` `private_service` `background_worker` `cron_job`"},"updatedAt":{"type":"string","format":"date-time"},"serviceDetails":{"oneOf":[{"type":"object","required":["buildCommand","publishPath","url","buildPlan"],"properties":{"buildCommand":{"type":"string"},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"publishPath":{"type":"string"},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"default":"no","deprecated":true,"description":"This field has been deprecated. previews.generation should be used in its place.\n\n`yes` `no`"},"previews":{"type":"object","properties":{"generation":{"type":"string","enum":["off","manual","automatic"],"default":"off","description":"Defaults to \"off\"\n\n`off` `manual` `automatic`"}}},"url":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"}}},{"type":"object","required":["env","runtime","envSpecificDetails","plan","region","numInstances","buildPlan","healthCheckPath","openPorts","url"],"properties":{"autoscaling":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}}},"disk":{"type":"object","required":["id","name","sizeGB","mountPath"],"properties":{"id":{"type":"string","pattern":"^dsk-[0-9a-z]{20}$","examples":["dsk-cph1rs3idesc73a2b2mg"]},"name":{"type":"string"},"sizeGB":{"type":"integer"},"mountPath":{"type":"string"}}},"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"deprecated":true,"description":"This field has been deprecated, runtime should be used in its place.\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry","updatedAt"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT","AWS_ECR"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT` `AWS_ECR`"},"username":{"type":"string","description":"The username associated with the credential"},"updatedAt":{"type":"string","format":"date-time","description":"Last updated time for the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"healthCheckPath":{"type":"string"},"maintenanceMode":{"type":"object","required":["enabled","uri"],"properties":{"enabled":{"type":"boolean"},"uri":{"type":"string","description":"The page to be served when [maintenance mode](https://docs.render.com/maintenance-mode) is enabled. When empty, the default maintenance mode page is served."}}},"numInstances":{"type":"integer","description":"For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."},"openPorts":{"type":"array","items":{"type":"object","required":["port","protocol"],"properties":{"port":{"type":"integer","examples":[10000]},"protocol":{"type":"string","enum":["TCP","UDP"],"description":"`TCP` `UDP`"}}}},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"default":"no","deprecated":true,"description":"This field has been deprecated. previews.generation should be used in its place.\n\n`yes` `no`"},"previews":{"type":"object","properties":{"generation":{"type":"string","enum":["off","manual","automatic"],"default":"off","description":"Defaults to \"off\"\n\n`off` `manual` `automatic`"}}},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore","virginia"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore` `virginia`"},"runtime":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"sshAddress":{"type":"string","description":"The SSH address for the service. Only present for services that have SSH enabled."},"url":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"},"maxShutdownDelaySeconds":{"type":"integer","description":"The maximum amount of time (in seconds) that Render waits for your application process to exit gracefully after sending it a SIGTERM signal.","minimum":1,"maximum":300,"default":30}}},{"type":"object","required":["env","runtime","envSpecificDetails","plan","region","numInstances","buildPlan","openPorts","url"],"properties":{"autoscaling":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}}},"disk":{"type":"object","required":["id","name","sizeGB","mountPath"],"properties":{"id":{"type":"string","pattern":"^dsk-[0-9a-z]{20}$","examples":["dsk-cph1rs3idesc73a2b2mg"]},"name":{"type":"string"},"sizeGB":{"type":"integer"},"mountPath":{"type":"string"}}},"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"deprecated":true,"description":"This field has been deprecated, runtime should be used in its place.\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry","updatedAt"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT","AWS_ECR"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT` `AWS_ECR`"},"username":{"type":"string","description":"The username associated with the credential"},"updatedAt":{"type":"string","format":"date-time","description":"Last updated time for the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"numInstances":{"type":"integer","description":"For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."},"openPorts":{"type":"array","items":{"type":"object","required":["port","protocol"],"properties":{"port":{"type":"integer","examples":[10000]},"protocol":{"type":"string","enum":["TCP","UDP"],"description":"`TCP` `UDP`"}}}},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"default":"no","deprecated":true,"description":"This field has been deprecated. previews.generation should be used in its place.\n\n`yes` `no`"},"previews":{"type":"object","properties":{"generation":{"type":"string","enum":["off","manual","automatic"],"default":"off","description":"Defaults to \"off\"\n\n`off` `manual` `automatic`"}}},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore","virginia"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore` `virginia`"},"runtime":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"sshAddress":{"type":"string","description":"The SSH address for the service. Only present for services that have SSH enabled."},"url":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"},"maxShutdownDelaySeconds":{"type":"integer","description":"The maximum amount of time (in seconds) that Render waits for your application process to exit gracefully after sending it a SIGTERM signal.","minimum":1,"maximum":300,"default":30}}},{"type":"object","required":["env","runtime","envSpecificDetails","plan","region","numInstances","buildPlan"],"properties":{"autoscaling":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}}},"disk":{"type":"object","required":["id","name","sizeGB","mountPath"],"properties":{"id":{"type":"string","pattern":"^dsk-[0-9a-z]{20}$","examples":["dsk-cph1rs3idesc73a2b2mg"]},"name":{"type":"string"},"sizeGB":{"type":"integer"},"mountPath":{"type":"string"}}},"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"deprecated":true,"description":"This field has been deprecated, runtime should be used in its place.\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry","updatedAt"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT","AWS_ECR"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT` `AWS_ECR`"},"username":{"type":"string","description":"The username associated with the credential"},"updatedAt":{"type":"string","format":"date-time","description":"Last updated time for the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"numInstances":{"type":"integer","description":"For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"default":"no","deprecated":true,"description":"This field has been deprecated. previews.generation should be used in its place.\n\n`yes` `no`"},"previews":{"type":"object","properties":{"generation":{"type":"string","enum":["off","manual","automatic"],"default":"off","description":"Defaults to \"off\"\n\n`off` `manual` `automatic`"}}},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore","virginia"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore` `virginia`"},"runtime":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"sshAddress":{"type":"string","description":"The SSH address for the service. Only present for services that have SSH enabled."},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"},"maxShutdownDelaySeconds":{"type":"integer","description":"The maximum amount of time (in seconds) that Render waits for your application process to exit gracefully after sending it a SIGTERM signal.","minimum":1,"maximum":300,"default":30}}},{"required":["env","runtime","envSpecificDetails","plan","region","schedule","buildPlan"],"type":"object","properties":{"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"deprecated":true,"description":"This field has been deprecated, runtime should be used in its place.\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry","updatedAt"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT","AWS_ECR"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT` `AWS_ECR`"},"username":{"type":"string","description":"The username associated with the credential"},"updatedAt":{"type":"string","format":"date-time","description":"Last updated time for the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"lastSuccessfulRunAt":{"type":"string","format":"date-time"},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore","virginia"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore` `virginia`"},"runtime":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"schedule":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"}}}]}}},"deployId":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const PutRoutes = {"body":{"type":"array","items":{"type":"object","required":["type","source","destination"],"properties":{"type":{"type":"string","enum":["redirect","rewrite"]},"source":{"type":"string","examples":["/:bar/foo"]},"destination":{"type":"string","examples":["/foo/:bar"]}}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]}]},"response":{"200":{"type":"array","items":{"type":"object","required":["id","type","source","destination","priority"],"properties":{"id":{"type":"string"},"type":{"type":"string","enum":["redirect","rewrite"],"description":"`redirect` `rewrite`"},"source":{"type":"string"},"destination":{"type":"string"},"priority":{"type":"integer","description":"Redirect and Rewrite Rules are applied in priority order starting at 0"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const RecoverPostgres = {"body":{"type":"object","required":["restoreTime"],"properties":{"restoreName":{"description":"Name of the new database.","type":"string"},"restoreTime":{"type":"string","format":"date-time","description":"The point in time to restore the database to. See `/recovery-info` for restore availability"},"datadogApiKey":{"type":"string","description":"Datadog API key to use for monitoring the new database. Defaults to the API key of the original database. Use an empty string to prevent copying of the API key to the new database."},"plan":{"type":"string","description":"The plan to use for the new database. Defaults to the same plan as the original database. Cannot be a lower tier plan than the original database."},"environmentId":{"type":"string","description":"The environment to create the new database in. Defaults to the environment of the original database."}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"postgresId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":["postgresId"]}]},"response":{"200":{"type":"object","required":["id","ipAllowList","createdAt","updatedAt","dashboardUrl","databaseName","databaseUser","highAvailabilityEnabled","name","owner","project","plan","region","readReplicas","role","status","version","suspended","suspenders"],"properties":{"id":{"type":"string"},"ipAllowList":{"type":"array","items":{"type":"object","required":["cidrBlock","description"],"properties":{"cidrBlock":{"type":"string"},"description":{"description":"User-provided description of the CIDR block","type":"string"}}}},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"},"expiresAt":{"description":"The time at which the database will be expire. Applies to free tier databases only.","type":"string","format":"date-time"},"dashboardUrl":{"type":"string","description":"The URL to view the PostgreSQL instance in the Render Dashboard"},"databaseName":{"type":"string"},"databaseUser":{"type":"string"},"environmentId":{"type":"string"},"highAvailabilityEnabled":{"type":"boolean"},"maintenance":{"type":"object","required":["id","type","scheduledAt","state"],"properties":{"id":{"type":"string","pattern":"^mrn-[0-9a-z]{20}$","examples":["mrn-cph1rs3idesc73a2b2mg"]},"type":{"type":"string"},"scheduledAt":{"type":"string","format":"date-time"},"pendingMaintenanceBy":{"type":"string","format":"date-time","description":"If present, the maintenance run cannot be scheduled for later than this date-time."},"state":{"type":"string","enum":["scheduled","in_progress","user_fix_required","cancelled","succeeded","failed"],"description":"`scheduled` `in_progress` `user_fix_required` `cancelled` `succeeded` `failed`"}}},"name":{"type":"string"},"owner":{"type":"object","required":["id","name","email","type"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"email":{"type":"string"},"twoFactorAuthEnabled":{"type":"boolean","description":"Whether two-factor authentication is enabled for the owner. Only present for user owners."},"type":{"type":"string","enum":["user","team"],"description":"`user` `team`"}}},"plan":{"type":"string","enum":["free","starter","standard","pro","pro_plus","custom","basic_256mb","basic_1gb","basic_4gb","pro_4gb","pro_8gb","pro_16gb","pro_32gb","pro_64gb","pro_128gb","pro_192gb","pro_256gb","pro_384gb","pro_512gb","accelerated_16gb","accelerated_32gb","accelerated_64gb","accelerated_128gb","accelerated_256gb","accelerated_384gb","accelerated_512gb","accelerated_768gb","accelerated_1024gb"],"description":"`free` `starter` `standard` `pro` `pro_plus` `custom` `basic_256mb` `basic_1gb` `basic_4gb` `pro_4gb` `pro_8gb` `pro_16gb` `pro_32gb` `pro_64gb` `pro_128gb` `pro_192gb` `pro_256gb` `pro_384gb` `pro_512gb` `accelerated_16gb` `accelerated_32gb` `accelerated_64gb` `accelerated_128gb` `accelerated_256gb` `accelerated_384gb` `accelerated_512gb` `accelerated_768gb` `accelerated_1024gb`"},"diskSizeGB":{"type":"integer"},"primaryPostgresID":{"type":"string"},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore","virginia"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore` `virginia`"},"readReplicas":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"The replica instance identifier."},"name":{"type":"string","description":"The display name of the replica instance."}},"required":["id","name"]}},"role":{"type":"string","enum":["primary","replica"],"description":"`primary` `replica`"},"status":{"type":"string","enum":["creating","available","unavailable","config_restart","suspended","maintenance_scheduled","maintenance_in_progress","recovery_failed","recovery_in_progress","unknown","updating_instance"],"description":"`creating` `available` `unavailable` `config_restart` `suspended` `maintenance_scheduled` `maintenance_in_progress` `recovery_failed` `recovery_in_progress` `unknown` `updating_instance`"},"version":{"type":"string","description":"The PostgreSQL version\n\n`11` `12` `13` `14` `15` `16`","enum":["11","12","13","14","15","16"]},"suspended":{"type":"string","enum":["suspended","not_suspended"],"description":"`suspended` `not_suspended`"},"suspenders":{"type":"array","items":{"type":"string","enum":["admin","billing","user","parent_service","unknown"],"description":"`admin` `billing` `user` `parent_service` `unknown`"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const RefreshCustomDomain = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"},"customDomainIdOrName":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID or name of the custom domain"}},"required":["serviceId","customDomainIdOrName"]}]},"response":{"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const RemoveResourcesFromEnvironment = {"metadata":{"allOf":[{"type":"object","properties":{"environmentId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":["environmentId"]},{"type":"object","properties":{"resourceIds":{"type":"array","items":{"type":"string","description":"The ID of an env group, a service, a PostgreSQL database, or a Redis instance"},"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["resourceIds"]}]},"response":{"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const RestartPostgres = {"metadata":{"allOf":[{"type":"object","properties":{"postgresId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":["postgresId"]}]},"response":{"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const RestartService = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]}]},"response":{"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const RestoreSnapshot = {"body":{"type":"object","required":["snapshotKey"],"properties":{"snapshotKey":{"type":"string"},"instanceId":{"description":"When a service with a disk is scaled, the instanceId is used to identify the instance that the disk is attached to. Each instance's disks get their own snapshots, and can be restored separately.","type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"diskId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the disk"}},"required":["diskId"]}]},"response":{"200":{"type":"object","required":["id","name","sizeGB","mountPath","createdAt","updatedAt"],"properties":{"id":{"type":"string","pattern":"^dsk-[0-9a-z]{20}$","examples":["dsk-cph1rs3idesc73a2b2mg"]},"name":{"type":"string"},"sizeGB":{"type":"integer"},"mountPath":{"type":"string"},"serviceId":{"type":"string"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ResumePostgres = {"metadata":{"allOf":[{"type":"object","properties":{"postgresId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":["postgresId"]}]},"response":{"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ResumeService = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]}]},"response":{"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const RetrieveBlueprint = {"metadata":{"allOf":[{"type":"object","properties":{"blueprintId":{"type":"string","pattern":"^exs-[0-9a-z]{20}$","examples":["exs-cph1rs3idesc73a2b2mg"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the blueprint"}},"required":["blueprintId"]}]},"response":{"200":{"type":"object","required":["id","name","status","autoSync","repo","branch","resources"],"properties":{"id":{"type":"string","pattern":"^exs-[0-9a-z]{20}$","examples":["exs-cph1rs3idesc73a2b2mg"]},"name":{"type":"string"},"status":{"type":"string","enum":["created","paused","in_sync","syncing","error"],"description":"`created` `paused` `in_sync` `syncing` `error`"},"autoSync":{"type":"boolean","description":"Automatically sync changes to render.yaml"},"repo":{"type":"string"},"branch":{"type":"string"},"lastSync":{"type":"string","format":"date-time"},"resources":{"type":"array","items":{"type":"object","required":["id","name","type"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","description":"type of the resource (ex. web_service or postgres)\n\n`static_site` `web_service` `private_service` `background_worker` `cron_job` `redis` `postgres` `environment_group`","enum":["static_site","web_service","private_service","background_worker","cron_job","redis","postgres","environment_group"]}}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const RetrieveCustomDomain = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"},"customDomainIdOrName":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID or name of the custom domain"}},"required":["serviceId","customDomainIdOrName"]}]},"response":{"200":{"type":"object","required":["id","name","domainType","publicSuffix","verificationStatus","createdAt","redirectForName"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"domainType":{"type":"string","enum":["apex","subdomain"],"description":"`apex` `subdomain`"},"publicSuffix":{"type":"string"},"redirectForName":{"type":"string"},"verificationStatus":{"type":"string","enum":["verified","unverified"],"description":"`verified` `unverified`"},"createdAt":{"type":"string","format":"date-time"},"server":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const RetrieveDeploy = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"},"deployId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the deploy"}},"required":["serviceId","deployId"]}]},"response":{"200":{"type":"object","required":["id"],"properties":{"id":{"type":"string"},"commit":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"},"createdAt":{"type":"string","format":"date-time"}}},"image":{"description":"Image information used when creating the deploy. Not present for Git-backed deploys","type":"object","properties":{"ref":{"description":"Image reference used when creating the deploy","type":"string"},"sha":{"description":"SHA that the image reference was resolved to when creating the deploy","type":"string"},"registryCredential":{"description":"Name of credential used to pull the image, if provided","type":"string"}}},"status":{"type":"string","enum":["created","build_in_progress","update_in_progress","live","deactivated","build_failed","update_failed","canceled","pre_deploy_in_progress","pre_deploy_failed"],"description":"`created` `build_in_progress` `update_in_progress` `live` `deactivated` `build_failed` `update_failed` `canceled` `pre_deploy_in_progress` `pre_deploy_failed`"},"trigger":{"type":"string","enum":["api","blueprint_sync","deploy_hook","deployed_by_render","manual","other","new_commit","rollback","service_resumed","service_updated"],"description":"`api` `blueprint_sync` `deploy_hook` `deployed_by_render` `manual` `other` `new_commit` `rollback` `service_resumed` `service_updated`"},"finishedAt":{"type":"string","format":"date-time"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const RetrieveDisk = {"metadata":{"allOf":[{"type":"object","properties":{"diskId":{"type":"string","pattern":"^dsk-[0-9a-z]{20}$","examples":["dsk-cph1rs3idesc73a2b2mg"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the disk"}},"required":["diskId"]}]},"response":{"200":{"type":"object","required":["id","name","sizeGB","mountPath","createdAt","updatedAt"],"properties":{"id":{"type":"string","pattern":"^dsk-[0-9a-z]{20}$","examples":["dsk-cph1rs3idesc73a2b2mg"]},"name":{"type":"string"},"sizeGB":{"type":"integer"},"mountPath":{"type":"string"},"serviceId":{"type":"string"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const RetrieveEnvGroup = {"metadata":{"allOf":[{"type":"object","properties":{"envGroupId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources that belong to an environment group"}},"required":["envGroupId"]}]},"response":{"200":{"type":"object","required":["createdAt","envVars","id","name","ownerId","secretFiles","serviceLinks","updatedAt"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"ownerId":{"type":"string"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"},"serviceLinks":{"description":"List of serviceIds linked to the envGroup","type":"array","items":{"type":"object","required":["id","name","type"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["static","web","pserv","worker","cron"],"description":"`static` `web` `pserv` `worker` `cron`"}}}},"environmentId":{"type":"string"},"envVars":{"type":"array","items":{"type":"object","required":["key","value"],"properties":{"key":{"type":"string"},"value":{"type":"string"}}}},"secretFiles":{"type":"array","items":{"type":"object","required":["name","content"],"properties":{"name":{"type":"string"},"content":{"type":"string"}}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const RetrieveEnvGroupEnvVar = {"metadata":{"allOf":[{"type":"object","properties":{"envGroupId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources that belong to an environment group"},"envVarKey":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The name of the environment variable"}},"required":["envGroupId","envVarKey"]}]},"response":{"200":{"type":"object","required":["key","value"],"properties":{"key":{"type":"string"},"value":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const RetrieveEnvGroupSecretFile = {"metadata":{"allOf":[{"type":"object","properties":{"envGroupId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources that belong to an environment group"},"secretFileName":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The name of the secret file"}},"required":["envGroupId","secretFileName"]}]},"response":{"200":{"type":"object","required":["name","content"],"properties":{"name":{"type":"string"},"content":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const RetrieveEnvVar = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"},"envVarKey":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The name of the environment variable"}},"required":["serviceId","envVarKey"]}]},"response":{"200":{"type":"object","required":["key","value"],"properties":{"key":{"type":"string"},"value":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const RetrieveEnvironment = {"metadata":{"allOf":[{"type":"object","properties":{"environmentId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":["environmentId"]}]},"response":{"200":{"type":"object","required":["id","name","projectId","databasesIds","redisIds","serviceIds","envGroupIds","protectedStatus","networkIsolationEnabled"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"projectId":{"type":"string"},"databasesIds":{"type":"array","items":{"type":"string"}},"redisIds":{"type":"array","items":{"type":"string"}},"serviceIds":{"type":"array","items":{"type":"string"}},"envGroupIds":{"type":"array","items":{"type":"string"}},"protectedStatus":{"type":"string","description":"Indicates whether an environment is `unprotected` or `protected`. Only admin users can perform destructive actions in `protected` environments.\n\n`unprotected` `protected`","enum":["unprotected","protected"]},"networkIsolationEnabled":{"type":"boolean","description":"Indicates whether network connections across environments are allowed."}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const RetrieveJob = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"},"jobId":{"type":"string","pattern":"^job-[0-9a-z]{20}$","examples":["job-cph1rs3idesc73a2b2mg"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the job"}},"required":["serviceId","jobId"]}]},"response":{"200":{"type":"object","required":["id","serviceId","startCommand","planId","createdAt"],"properties":{"id":{"type":"string","pattern":"^job-[0-9a-z]{20}$","examples":["job-cph1rs3idesc73a2b2mg"]},"serviceId":{"type":"string","examples":["srv-xxxxx"]},"startCommand":{"type":"string","examples":["echo 'hello world'"]},"planId":{"type":"string","examples":["plan-srv-004"]},"status":{"type":"string","enum":["succeeded","failed","canceled"],"description":"`succeeded` `failed` `canceled`"},"createdAt":{"type":"string","format":"date-time","examples":["2021-07-15T07:20:05.777035-07:00"]},"startedAt":{"type":"string","format":"date-time","examples":["2021-07-15T07:20:05.777035-07:00"]},"finishedAt":{"type":"string","format":"date-time","examples":["2021-07-15T07:20:05.777035-07:00"]}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const RetrieveMaintenance = {"metadata":{"allOf":[{"type":"object","properties":{"maintenanceRunParam":{"type":"string","pattern":"^mrn-[0-9a-z]{20}$","examples":["mrn-cph1rs3idesc73a2b2mg"],"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["maintenanceRunParam"]}]},"response":{"200":{"type":"object","required":["id","type","scheduledAt","state","resourceId"],"properties":{"id":{"type":"string","pattern":"^mrn-[0-9a-z]{20}$","examples":["mrn-cph1rs3idesc73a2b2mg"]},"type":{"type":"string"},"scheduledAt":{"type":"string","format":"date-time"},"pendingMaintenanceBy":{"type":"string","format":"date-time","description":"If present, the maintenance run cannot be scheduled for later than this date-time."},"state":{"type":"string","enum":["scheduled","in_progress","user_fix_required","cancelled","succeeded","failed"],"description":"`scheduled` `in_progress` `user_fix_required` `cancelled` `succeeded` `failed`"},"resourceId":{"type":"string","description":"The Id of a resource that can undergo maintenance (Id of a service, a Postgres instance, or a Redis instance)"}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const RetrieveOwner = {"metadata":{"allOf":[{"type":"object","properties":{"ownerId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the user or team"}},"required":["ownerId"]}]},"response":{"200":{"type":"object","required":["id","name","email","type"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"email":{"type":"string"},"twoFactorAuthEnabled":{"type":"boolean","description":"Whether two-factor authentication is enabled for the owner. Only present for user owners."},"type":{"type":"string","enum":["user","team"],"description":"`user` `team`"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const RetrieveOwnerNotificationSettings = {"metadata":{"allOf":[{"type":"object","properties":{"ownerId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the owner (team or personal user) whose resources should be returned"}},"required":["ownerId"]}]},"response":{"200":{"type":"object","required":["ownerId","slackEnabled","emailEnabled","previewNotificationsEnabled","notificationsToSend"],"properties":{"ownerId":{"type":"string"},"slackEnabled":{"type":"boolean"},"emailEnabled":{"type":"boolean"},"previewNotificationsEnabled":{"type":"boolean"},"notificationsToSend":{"type":"string","enum":["none","failure","all"],"description":"`none` `failure` `all`"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const RetrievePostgres = {"metadata":{"allOf":[{"type":"object","properties":{"postgresId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":["postgresId"]}]},"response":{"200":{"type":"object","required":["id","ipAllowList","createdAt","updatedAt","dashboardUrl","databaseName","databaseUser","highAvailabilityEnabled","name","owner","project","plan","region","readReplicas","role","status","version","suspended","suspenders"],"properties":{"id":{"type":"string"},"ipAllowList":{"type":"array","items":{"type":"object","required":["cidrBlock","description"],"properties":{"cidrBlock":{"type":"string"},"description":{"description":"User-provided description of the CIDR block","type":"string"}}}},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"},"expiresAt":{"description":"The time at which the database will be expire. Applies to free tier databases only.","type":"string","format":"date-time"},"dashboardUrl":{"type":"string","description":"The URL to view the PostgreSQL instance in the Render Dashboard"},"databaseName":{"type":"string"},"databaseUser":{"type":"string"},"environmentId":{"type":"string"},"highAvailabilityEnabled":{"type":"boolean"},"maintenance":{"type":"object","required":["id","type","scheduledAt","state"],"properties":{"id":{"type":"string","pattern":"^mrn-[0-9a-z]{20}$","examples":["mrn-cph1rs3idesc73a2b2mg"]},"type":{"type":"string"},"scheduledAt":{"type":"string","format":"date-time"},"pendingMaintenanceBy":{"type":"string","format":"date-time","description":"If present, the maintenance run cannot be scheduled for later than this date-time."},"state":{"type":"string","enum":["scheduled","in_progress","user_fix_required","cancelled","succeeded","failed"],"description":"`scheduled` `in_progress` `user_fix_required` `cancelled` `succeeded` `failed`"}}},"name":{"type":"string"},"owner":{"type":"object","required":["id","name","email","type"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"email":{"type":"string"},"twoFactorAuthEnabled":{"type":"boolean","description":"Whether two-factor authentication is enabled for the owner. Only present for user owners."},"type":{"type":"string","enum":["user","team"],"description":"`user` `team`"}}},"plan":{"type":"string","enum":["free","starter","standard","pro","pro_plus","custom","basic_256mb","basic_1gb","basic_4gb","pro_4gb","pro_8gb","pro_16gb","pro_32gb","pro_64gb","pro_128gb","pro_192gb","pro_256gb","pro_384gb","pro_512gb","accelerated_16gb","accelerated_32gb","accelerated_64gb","accelerated_128gb","accelerated_256gb","accelerated_384gb","accelerated_512gb","accelerated_768gb","accelerated_1024gb"],"description":"`free` `starter` `standard` `pro` `pro_plus` `custom` `basic_256mb` `basic_1gb` `basic_4gb` `pro_4gb` `pro_8gb` `pro_16gb` `pro_32gb` `pro_64gb` `pro_128gb` `pro_192gb` `pro_256gb` `pro_384gb` `pro_512gb` `accelerated_16gb` `accelerated_32gb` `accelerated_64gb` `accelerated_128gb` `accelerated_256gb` `accelerated_384gb` `accelerated_512gb` `accelerated_768gb` `accelerated_1024gb`"},"diskSizeGB":{"type":"integer"},"primaryPostgresID":{"type":"string"},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore","virginia"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore` `virginia`"},"readReplicas":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"The replica instance identifier."},"name":{"type":"string","description":"The display name of the replica instance."}},"required":["id","name"]}},"role":{"type":"string","enum":["primary","replica"],"description":"`primary` `replica`"},"status":{"type":"string","enum":["creating","available","unavailable","config_restart","suspended","maintenance_scheduled","maintenance_in_progress","recovery_failed","recovery_in_progress","unknown","updating_instance"],"description":"`creating` `available` `unavailable` `config_restart` `suspended` `maintenance_scheduled` `maintenance_in_progress` `recovery_failed` `recovery_in_progress` `unknown` `updating_instance`"},"version":{"type":"string","description":"The PostgreSQL version\n\n`11` `12` `13` `14` `15` `16`","enum":["11","12","13","14","15","16"]},"suspended":{"type":"string","enum":["suspended","not_suspended"],"description":"`suspended` `not_suspended`"},"suspenders":{"type":"array","items":{"type":"string","enum":["admin","billing","user","parent_service","unknown"],"description":"`admin` `billing` `user` `parent_service` `unknown`"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const RetrievePostgresConnectionInfo = {"metadata":{"allOf":[{"type":"object","properties":{"postgresId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":["postgresId"]}]},"response":{"200":{"type":"object","required":["password","internalConnectionString","externalConnectionString","psqlCommand"],"properties":{"password":{"type":"string","format":"password"},"internalConnectionString":{"type":"string","format":"password"},"externalConnectionString":{"type":"string","format":"password"},"psqlCommand":{"type":"string","format":"password"}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const RetrievePostgresRecoveryInfo = {"metadata":{"allOf":[{"type":"object","properties":{"postgresId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":["postgresId"]}]},"response":{"200":{"type":"object","required":["recoveryStatus"],"properties":{"recoveryStatus":{"type":"string","description":"Availability of point-in-time recovery.\n\n`AVAILABLE` `BACKUP_NOT_READY` `NOT_AVAILABLE`","enum":["AVAILABLE","BACKUP_NOT_READY","NOT_AVAILABLE"]},"startsAt":{"type":"string","format":"date-time"}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const RetrieveProject = {"metadata":{"allOf":[{"type":"object","properties":{"projectId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":["projectId"]}]},"response":{"200":{"description":"A project is a collection of environments","type":"object","required":["id","createdAt","updatedAt","name","owner","environmentIds"],"properties":{"id":{"description":"The ID of the project","type":"string"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"},"name":{"description":"The name of the project","type":"string"},"owner":{"type":"object","required":["id","name","email","type"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"email":{"type":"string"},"twoFactorAuthEnabled":{"type":"boolean","description":"Whether two-factor authentication is enabled for the owner. Only present for user owners."},"type":{"type":"string","enum":["user","team"],"description":"`user` `team`"}}},"environmentIds":{"description":"The environments associated with the project","type":"array","items":{"type":"string","description":"The ID of the environment"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const RetrieveRedis = {"metadata":{"allOf":[{"type":"object","properties":{"redisId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":["redisId"]}]},"response":{"200":{"type":"object","description":"A Redis instance","required":["id","createdAt","updatedAt","status","region","plan","name","owner","options","ipAllowList","version"],"properties":{"id":{"description":"The ID of the Redis instance","type":"string"},"createdAt":{"description":"The creation time of the Redis instance","type":"string","format":"date-time"},"updatedAt":{"description":"The last updated time of the Redis instance","type":"string","format":"date-time"},"status":{"type":"string","enum":["creating","available","unavailable","config_restart","suspended","maintenance_scheduled","maintenance_in_progress","recovery_failed","recovery_in_progress","unknown","updating_instance"],"description":"`creating` `available` `unavailable` `config_restart` `suspended` `maintenance_scheduled` `maintenance_in_progress` `recovery_failed` `recovery_in_progress` `unknown` `updating_instance`"},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore","virginia"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore` `virginia`"},"plan":{"type":"string","enum":["free","starter","standard","pro","pro_plus","custom"],"x-enum-varnames":["RedisPlanFree","RedisPlanStarter","RedisPlanStandard","RedisPlanPro","RedisPlanPro_plus","RedisPlanCustom"],"description":"`free` `starter` `standard` `pro` `pro_plus` `custom`"},"name":{"description":"The name of the Redis instance","type":"string"},"owner":{"type":"object","required":["id","name","email","type"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"email":{"type":"string"},"twoFactorAuthEnabled":{"type":"boolean","description":"Whether two-factor authentication is enabled for the owner. Only present for user owners."},"type":{"type":"string","enum":["user","team"],"description":"`user` `team`"}}},"options":{"description":"Options for a Redis instance","type":"object","properties":{"maxmemoryPolicy":{"type":"string"}}},"ipAllowList":{"description":"The IP allow list for the Redis instance","type":"array","items":{"type":"object","required":["cidrBlock","description"],"properties":{"cidrBlock":{"type":"string"},"description":{"description":"User-provided description of the CIDR block","type":"string"}}}},"environmentId":{"description":"The ID of the environment the Redis instance is associated with","type":"string"},"version":{"description":"The version of Redis","type":"string"},"maintenance":{"type":"object","required":["id","type","scheduledAt","state"],"properties":{"id":{"type":"string","pattern":"^mrn-[0-9a-z]{20}$","examples":["mrn-cph1rs3idesc73a2b2mg"]},"type":{"type":"string"},"scheduledAt":{"type":"string","format":"date-time"},"pendingMaintenanceBy":{"type":"string","format":"date-time","description":"If present, the maintenance run cannot be scheduled for later than this date-time."},"state":{"type":"string","enum":["scheduled","in_progress","user_fix_required","cancelled","succeeded","failed"],"description":"`scheduled` `in_progress` `user_fix_required` `cancelled` `succeeded` `failed`"}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const RetrieveRedisConnectionInfo = {"metadata":{"allOf":[{"type":"object","properties":{"redisId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":["redisId"]}]},"response":{"200":{"type":"object","description":"A Redis instance","required":["internalConnectionString","externalConnectionString","redisCLICommand"],"properties":{"internalConnectionString":{"description":"The connection string to use from within Render","type":"string"},"externalConnectionString":{"description":"The connection string to use from outside Render","type":"string","format":"password"},"redisCLICommand":{"description":"The Redis CLI command to connect to the Redis instance","type":"string","format":"password"}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const RetrieveRegistryCredential = {"metadata":{"allOf":[{"type":"object","properties":{"registryCredentialId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the registry credential"}},"required":["registryCredentialId"]}]},"response":{"200":{"type":"object","required":["id","name","username","registry","updatedAt"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT","AWS_ECR"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT` `AWS_ECR`"},"username":{"type":"string","description":"The username associated with the credential"},"updatedAt":{"type":"string","format":"date-time","description":"Last updated time for the credential"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const RetrieveSecretFile = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"},"secretFileName":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The file name of the secret file"}},"required":["serviceId","secretFileName"]}]},"response":{"200":{"type":"object","required":["name","content"],"properties":{"name":{"type":"string"},"content":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const RetrieveService = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]}]},"response":{"200":{"type":"object","required":["id","name","ownerId","type","createdAt","dashboardUrl","updatedAt","suspended","suspenders","autoDeploy","notifyOnFail","slug","serviceDetails","rootDir"],"properties":{"id":{"type":"string"},"autoDeploy":{"type":"string","enum":["yes","no"],"default":"yes","description":"`yes` `no`"},"branch":{"type":"string"},"buildFilter":{"type":"object","required":["paths","ignoredPaths"],"properties":{"paths":{"type":"array","items":{"type":"string"}},"ignoredPaths":{"type":"array","items":{"type":"string"}}}},"createdAt":{"type":"string","format":"date-time"},"dashboardUrl":{"type":"string","description":"The URL to view the service in the Render Dashboard"},"environmentId":{"type":"string"},"imagePath":{"type":"string"},"name":{"type":"string"},"notifyOnFail":{"type":"string","enum":["default","notify","ignore"],"description":"`default` `notify` `ignore`"},"ownerId":{"type":"string"},"registryCredential":{"type":"object","required":["id","name"],"properties":{"id":{"type":"string"},"name":{"type":"string"}}},"repo":{"type":"string","examples":["https://github.com/render-examples/flask-hello-world"]},"rootDir":{"type":"string"},"slug":{"type":"string"},"suspended":{"type":"string","enum":["suspended","not_suspended"],"description":"`suspended` `not_suspended`"},"suspenders":{"type":"array","items":{"type":"string","enum":["admin","billing","user","parent_service","unknown"],"description":"`admin` `billing` `user` `parent_service` `unknown`"}},"type":{"type":"string","enum":["static_site","web_service","private_service","background_worker","cron_job"],"description":"`static_site` `web_service` `private_service` `background_worker` `cron_job`"},"updatedAt":{"type":"string","format":"date-time"},"serviceDetails":{"oneOf":[{"type":"object","required":["buildCommand","publishPath","url","buildPlan"],"properties":{"buildCommand":{"type":"string"},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"publishPath":{"type":"string"},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"default":"no","deprecated":true,"description":"This field has been deprecated. previews.generation should be used in its place.\n\n`yes` `no`"},"previews":{"type":"object","properties":{"generation":{"type":"string","enum":["off","manual","automatic"],"default":"off","description":"Defaults to \"off\"\n\n`off` `manual` `automatic`"}}},"url":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"}}},{"type":"object","required":["env","runtime","envSpecificDetails","plan","region","numInstances","buildPlan","healthCheckPath","openPorts","url"],"properties":{"autoscaling":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}}},"disk":{"type":"object","required":["id","name","sizeGB","mountPath"],"properties":{"id":{"type":"string","pattern":"^dsk-[0-9a-z]{20}$","examples":["dsk-cph1rs3idesc73a2b2mg"]},"name":{"type":"string"},"sizeGB":{"type":"integer"},"mountPath":{"type":"string"}}},"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"deprecated":true,"description":"This field has been deprecated, runtime should be used in its place.\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry","updatedAt"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT","AWS_ECR"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT` `AWS_ECR`"},"username":{"type":"string","description":"The username associated with the credential"},"updatedAt":{"type":"string","format":"date-time","description":"Last updated time for the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"healthCheckPath":{"type":"string"},"maintenanceMode":{"type":"object","required":["enabled","uri"],"properties":{"enabled":{"type":"boolean"},"uri":{"type":"string","description":"The page to be served when [maintenance mode](https://docs.render.com/maintenance-mode) is enabled. When empty, the default maintenance mode page is served."}}},"numInstances":{"type":"integer","description":"For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."},"openPorts":{"type":"array","items":{"type":"object","required":["port","protocol"],"properties":{"port":{"type":"integer","examples":[10000]},"protocol":{"type":"string","enum":["TCP","UDP"],"description":"`TCP` `UDP`"}}}},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"default":"no","deprecated":true,"description":"This field has been deprecated. previews.generation should be used in its place.\n\n`yes` `no`"},"previews":{"type":"object","properties":{"generation":{"type":"string","enum":["off","manual","automatic"],"default":"off","description":"Defaults to \"off\"\n\n`off` `manual` `automatic`"}}},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore","virginia"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore` `virginia`"},"runtime":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"sshAddress":{"type":"string","description":"The SSH address for the service. Only present for services that have SSH enabled."},"url":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"},"maxShutdownDelaySeconds":{"type":"integer","description":"The maximum amount of time (in seconds) that Render waits for your application process to exit gracefully after sending it a SIGTERM signal.","minimum":1,"maximum":300,"default":30}}},{"type":"object","required":["env","runtime","envSpecificDetails","plan","region","numInstances","buildPlan","openPorts","url"],"properties":{"autoscaling":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}}},"disk":{"type":"object","required":["id","name","sizeGB","mountPath"],"properties":{"id":{"type":"string","pattern":"^dsk-[0-9a-z]{20}$","examples":["dsk-cph1rs3idesc73a2b2mg"]},"name":{"type":"string"},"sizeGB":{"type":"integer"},"mountPath":{"type":"string"}}},"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"deprecated":true,"description":"This field has been deprecated, runtime should be used in its place.\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry","updatedAt"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT","AWS_ECR"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT` `AWS_ECR`"},"username":{"type":"string","description":"The username associated with the credential"},"updatedAt":{"type":"string","format":"date-time","description":"Last updated time for the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"numInstances":{"type":"integer","description":"For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."},"openPorts":{"type":"array","items":{"type":"object","required":["port","protocol"],"properties":{"port":{"type":"integer","examples":[10000]},"protocol":{"type":"string","enum":["TCP","UDP"],"description":"`TCP` `UDP`"}}}},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"default":"no","deprecated":true,"description":"This field has been deprecated. previews.generation should be used in its place.\n\n`yes` `no`"},"previews":{"type":"object","properties":{"generation":{"type":"string","enum":["off","manual","automatic"],"default":"off","description":"Defaults to \"off\"\n\n`off` `manual` `automatic`"}}},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore","virginia"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore` `virginia`"},"runtime":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"sshAddress":{"type":"string","description":"The SSH address for the service. Only present for services that have SSH enabled."},"url":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"},"maxShutdownDelaySeconds":{"type":"integer","description":"The maximum amount of time (in seconds) that Render waits for your application process to exit gracefully after sending it a SIGTERM signal.","minimum":1,"maximum":300,"default":30}}},{"type":"object","required":["env","runtime","envSpecificDetails","plan","region","numInstances","buildPlan"],"properties":{"autoscaling":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}}},"disk":{"type":"object","required":["id","name","sizeGB","mountPath"],"properties":{"id":{"type":"string","pattern":"^dsk-[0-9a-z]{20}$","examples":["dsk-cph1rs3idesc73a2b2mg"]},"name":{"type":"string"},"sizeGB":{"type":"integer"},"mountPath":{"type":"string"}}},"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"deprecated":true,"description":"This field has been deprecated, runtime should be used in its place.\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry","updatedAt"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT","AWS_ECR"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT` `AWS_ECR`"},"username":{"type":"string","description":"The username associated with the credential"},"updatedAt":{"type":"string","format":"date-time","description":"Last updated time for the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"numInstances":{"type":"integer","description":"For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"default":"no","deprecated":true,"description":"This field has been deprecated. previews.generation should be used in its place.\n\n`yes` `no`"},"previews":{"type":"object","properties":{"generation":{"type":"string","enum":["off","manual","automatic"],"default":"off","description":"Defaults to \"off\"\n\n`off` `manual` `automatic`"}}},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore","virginia"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore` `virginia`"},"runtime":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"sshAddress":{"type":"string","description":"The SSH address for the service. Only present for services that have SSH enabled."},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"},"maxShutdownDelaySeconds":{"type":"integer","description":"The maximum amount of time (in seconds) that Render waits for your application process to exit gracefully after sending it a SIGTERM signal.","minimum":1,"maximum":300,"default":30}}},{"required":["env","runtime","envSpecificDetails","plan","region","schedule","buildPlan"],"type":"object","properties":{"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"deprecated":true,"description":"This field has been deprecated, runtime should be used in its place.\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry","updatedAt"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT","AWS_ECR"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT` `AWS_ECR`"},"username":{"type":"string","description":"The username associated with the credential"},"updatedAt":{"type":"string","format":"date-time","description":"Last updated time for the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"lastSuccessfulRunAt":{"type":"string","format":"date-time"},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore","virginia"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore` `virginia`"},"runtime":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"schedule":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"}}}]}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const RetrieveServiceNotificationOverrides = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]}]},"response":{"200":{"type":"object","required":["serviceId","previewNotificationsEnabled","notificationsToSend"],"properties":{"serviceId":{"type":"string"},"previewNotificationsEnabled":{"type":"string","enum":["default","false","true"],"description":"`default` `false` `true`"},"notificationsToSend":{"type":"string","enum":["default","none","failure","all"],"description":"`default` `none` `failure` `all`"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const RollbackDeploy = {"body":{"type":"object","required":["deployId"],"properties":{"deployId":{"type":"string","description":"The ID of the deploy to roll back to"}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]}]},"response":{"201":{"type":"object","required":["id"],"properties":{"id":{"type":"string"},"commit":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"},"createdAt":{"type":"string","format":"date-time"}}},"image":{"description":"Image information used when creating the deploy. Not present for Git-backed deploys","type":"object","properties":{"ref":{"description":"Image reference used when creating the deploy","type":"string"},"sha":{"description":"SHA that the image reference was resolved to when creating the deploy","type":"string"},"registryCredential":{"description":"Name of credential used to pull the image, if provided","type":"string"}}},"status":{"type":"string","enum":["created","build_in_progress","update_in_progress","live","deactivated","build_failed","update_failed","canceled","pre_deploy_in_progress","pre_deploy_failed"],"description":"`created` `build_in_progress` `update_in_progress` `live` `deactivated` `build_failed` `update_failed` `canceled` `pre_deploy_in_progress` `pre_deploy_failed`"},"trigger":{"type":"string","enum":["api","blueprint_sync","deploy_hook","deployed_by_render","manual","other","new_commit","rollback","service_resumed","service_updated"],"description":"`api` `blueprint_sync` `deploy_hook` `deployed_by_render` `manual` `other` `new_commit` `rollback` `service_resumed` `service_updated`"},"finishedAt":{"type":"string","format":"date-time"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const RunCronJob = {"metadata":{"allOf":[{"type":"object","properties":{"cronJobId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the cron job"}},"required":["cronJobId"]}]},"response":{"200":{"type":"object","description":"A run of a cron job","required":["id","status"],"properties":{"id":{"description":"The ID of the run","type":"string"},"status":{"type":"string","enum":["pending","successful","unsuccessful","canceled"],"description":"`pending` `successful` `unsuccessful` `canceled`"},"startedAt":{"type":"string","format":"date-time","examples":["2021-07-15T07:20:05.777035-07:00"]},"finishedAt":{"type":"string","format":"date-time","examples":["2021-07-15T07:20:05.777035-07:00"]},"triggeredBy":{"type":"string","description":"user who triggered the cron job run"},"canceledBy":{"type":"string","description":"user who cancelled the cron job run"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ScaleService = {"body":{"type":"object","required":["numInstances"],"properties":{"numInstances":{"type":"integer","examples":[3]}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]}]},"response":{"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const SubscribeLogs = {"metadata":{"allOf":[{"type":"object","properties":{"ownerId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the owner (team or personal user) whose resources should be returned"},"startTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:15:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."},"endTime":{"type":"string","format":"date-time","examples":["2021-06-17T08:30:30Z"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."},"direction":{"default":"backward","type":"string","enum":["forward","backward"],"description":"The direction to query logs for. Backward will return most recent logs first.\nForward will start with the oldest logs in the time range.\n","$schema":"http://json-schema.org/draft-04/schema#"},"resource":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter logs by their resource. A resource is the id of a server, cronjob, job, postgres, or redis."},"instance":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter logs by the instance they were emitted from. An instance is the id of a specific running server."},"host":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter request logs by their host. [Wildcards and regex](https://docs.render.com/logging#wildcards-and-regular-expressions) are supported."},"statusCode":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter request logs by their status code. [Wildcards and regex](https://docs.render.com/logging#wildcards-and-regular-expressions) are supported."},"method":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter request logs by their requests method. [Wildcards and regex](https://docs.render.com/logging#wildcards-and-regular-expressions) are supported."},"level":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter logs by their severity level. [Wildcards and regex](https://docs.render.com/logging#wildcards-and-regular-expressions) are supported."},"type":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter logs by their type. Types include `app` for application logs, `request` for request logs, and `build` for build logs. You can find the full set of types available for a query by using the `GET /logs/values` endpoint."},"text":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter by the text of the logs. [Wildcards and regex](https://docs.render.com/logging#wildcards-and-regular-expressions) are supported."},"path":{"type":"array","items":{"type":"string"},"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter request logs by their path. [Wildcards and regex](https://docs.render.com/logging#wildcards-and-regular-expressions) are supported."},"limit":{"type":"integer","default":20,"minimum":1,"maximum":100,"description":"The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).","$schema":"http://json-schema.org/draft-04/schema#"}},"required":["ownerId","resource"]}]},"response":{"101":{"type":"object","description":"A log entry with metadata","required":["id","message","timestamp","labels"],"properties":{"id":{"description":"A unique ID of the log entry","type":"string"},"message":{"description":"The message of the log entry","type":"string"},"timestamp":{"description":"The timestamp of the log entry","type":"string","format":"date-time"},"labels":{"type":"array","items":{"type":"object","description":"A log label","required":["name","value"],"properties":{"name":{"description":"The name of the log label\n\n`resource` `instance` `host` `statusCode` `method` `level` `type` `text` `path`","type":"string","enum":["resource","instance","host","statusCode","method","level","type","text","path"]},"value":{"description":"The value of the log label","type":"string"}}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const SuspendPostgres = {"metadata":{"allOf":[{"type":"object","properties":{"postgresId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":["postgresId"]}]},"response":{"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const SuspendService = {"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]}]},"response":{"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const TriggerMaintenance = {"metadata":{"allOf":[{"type":"object","properties":{"maintenanceRunParam":{"type":"string","pattern":"^mrn-[0-9a-z]{20}$","examples":["mrn-cph1rs3idesc73a2b2mg"],"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["maintenanceRunParam"]}]},"response":{"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const UnlinkServiceFromEnvGroup = {"metadata":{"allOf":[{"type":"object","properties":{"envGroupId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"},"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":["envGroupId","serviceId"]}]},"response":{"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const UpdateBlueprint = {"body":{"type":"object","properties":{"name":{"type":"string"},"autoSync":{"type":"boolean","description":"Automatically sync changes to render.yaml"}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"blueprintId":{"type":"string","pattern":"^exs-[0-9a-z]{20}$","examples":["exs-cph1rs3idesc73a2b2mg"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the blueprint"}},"required":["blueprintId"]}]},"response":{"200":{"type":"object","required":["id","name","status","autoSync","repo","branch"],"properties":{"id":{"type":"string","pattern":"^exs-[0-9a-z]{20}$","examples":["exs-cph1rs3idesc73a2b2mg"]},"name":{"type":"string"},"status":{"type":"string","enum":["created","paused","in_sync","syncing","error"],"description":"`created` `paused` `in_sync` `syncing` `error`"},"autoSync":{"type":"boolean","description":"Automatically sync changes to render.yaml"},"repo":{"type":"string"},"branch":{"type":"string"},"lastSync":{"type":"string","format":"date-time"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const UpdateDisk = {"body":{"type":"object","properties":{"name":{"type":"string"},"sizeGB":{"type":"integer"},"mountPath":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"diskId":{"type":"string","pattern":"^dsk-[0-9a-z]{20}$","examples":["dsk-cph1rs3idesc73a2b2mg"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the disk"}},"required":["diskId"]}]},"response":{"200":{"type":"object","required":["id","name","sizeGB","mountPath","createdAt","updatedAt"],"properties":{"id":{"type":"string","pattern":"^dsk-[0-9a-z]{20}$","examples":["dsk-cph1rs3idesc73a2b2mg"]},"name":{"type":"string"},"sizeGB":{"type":"integer"},"mountPath":{"type":"string"},"serviceId":{"type":"string"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const UpdateEnvGroup = {"body":{"type":"object","required":["name"],"properties":{"name":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"envGroupId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":["envGroupId"]}]},"response":{"200":{"type":"object","required":["createdAt","envVars","id","name","ownerId","secretFiles","serviceLinks","updatedAt"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"ownerId":{"type":"string"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"},"serviceLinks":{"description":"List of serviceIds linked to the envGroup","type":"array","items":{"type":"object","required":["id","name","type"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["static","web","pserv","worker","cron"],"description":"`static` `web` `pserv` `worker` `cron`"}}}},"environmentId":{"type":"string"},"envVars":{"type":"array","items":{"type":"object","required":["key","value"],"properties":{"key":{"type":"string"},"value":{"type":"string"}}}},"secretFiles":{"type":"array","items":{"type":"object","required":["name","content"],"properties":{"name":{"type":"string"},"content":{"type":"string"}}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const UpdateEnvGroupEnvVar = {"body":{"type":"object","oneOf":[{"type":"object","required":["value"],"properties":{"value":{"type":"string"}}},{"type":"object","required":["generateValue"],"properties":{"generateValue":{"type":"boolean"}}}],"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"envGroupId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Filter for resources that belong to an environment group"},"envVarKey":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The name of the environment variable"}},"required":["envGroupId","envVarKey"]}]},"response":{"200":{"type":"object","required":["createdAt","envVars","id","name","ownerId","secretFiles","serviceLinks","updatedAt"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"ownerId":{"type":"string"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"},"serviceLinks":{"description":"List of serviceIds linked to the envGroup","type":"array","items":{"type":"object","required":["id","name","type"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["static","web","pserv","worker","cron"],"description":"`static` `web` `pserv` `worker` `cron`"}}}},"environmentId":{"type":"string"},"envVars":{"type":"array","items":{"type":"object","required":["key","value"],"properties":{"key":{"type":"string"},"value":{"type":"string"}}}},"secretFiles":{"type":"array","items":{"type":"object","required":["name","content"],"properties":{"name":{"type":"string"},"content":{"type":"string"}}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const UpdateEnvGroupSecretFile = {"body":{"type":"object","properties":{"content":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"envGroupId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"},"secretFileName":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":["envGroupId","secretFileName"]}]},"response":{"200":{"type":"object","required":["createdAt","envVars","id","name","ownerId","secretFiles","serviceLinks","updatedAt"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"ownerId":{"type":"string"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"},"serviceLinks":{"description":"List of serviceIds linked to the envGroup","type":"array","items":{"type":"object","required":["id","name","type"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["static","web","pserv","worker","cron"],"description":"`static` `web` `pserv` `worker` `cron`"}}}},"environmentId":{"type":"string"},"envVars":{"type":"array","items":{"type":"object","required":["key","value"],"properties":{"key":{"type":"string"},"value":{"type":"string"}}}},"secretFiles":{"type":"array","items":{"type":"object","required":["name","content"],"properties":{"name":{"type":"string"},"content":{"type":"string"}}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const UpdateEnvVar = {"body":{"type":"object","oneOf":[{"type":"object","required":["value"],"properties":{"value":{"type":"string"}}},{"type":"object","required":["generateValue"],"properties":{"generateValue":{"type":"boolean"}}}],"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"},"envVarKey":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The name of the environment variable"}},"required":["serviceId","envVarKey"]}]},"response":{"200":{"type":"object","required":["key","value"],"properties":{"key":{"type":"string"},"value":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const UpdateEnvVarsForService = {"body":{"type":"array","items":{"type":"object","oneOf":[{"type":"object","required":["key","value"],"properties":{"key":{"type":"string"},"value":{"type":"string"}}},{"type":"object","required":["key","generateValue"],"properties":{"key":{"type":"string"},"generateValue":{"type":"boolean"}}}]},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]}]},"response":{"200":{"type":"array","items":{"type":"object","required":["envVar","cursor"],"properties":{"envVar":{"type":"object","required":["key","value"],"properties":{"key":{"type":"string"},"value":{"type":"string"}}},"cursor":{"type":"string"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const UpdateEnvironment = {"body":{"type":"object","properties":{"name":{"type":"string"},"networkIsolationEnabled":{"type":"boolean","description":"Indicates whether network connections across environments are allowed."},"protectedStatus":{"type":"string","description":"Indicates whether an environment is `unprotected` or `protected`. Only admin users can perform destructive actions in `protected` environments.","enum":["unprotected","protected"]}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"environmentId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":["environmentId"]}]},"response":{"200":{"type":"object","required":["id","name","projectId","databasesIds","redisIds","serviceIds","envGroupIds","protectedStatus","networkIsolationEnabled"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"projectId":{"type":"string"},"databasesIds":{"type":"array","items":{"type":"string"}},"redisIds":{"type":"array","items":{"type":"string"}},"serviceIds":{"type":"array","items":{"type":"string"}},"envGroupIds":{"type":"array","items":{"type":"string"}},"protectedStatus":{"type":"string","description":"Indicates whether an environment is `unprotected` or `protected`. Only admin users can perform destructive actions in `protected` environments.\n\n`unprotected` `protected`","enum":["unprotected","protected"]},"networkIsolationEnabled":{"type":"boolean","description":"Indicates whether network connections across environments are allowed."}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const UpdateHeaders = {"body":{"type":"array","items":{"type":"object","required":["path","name","value"],"properties":{"path":{"type":"string","description":"The request path to add the header to. Wildcards will cause headers to be applied to all matching paths.","examples":["/static/*"]},"name":{"type":"string","description":"Header name","examples":["Cache-Control"]},"value":{"type":"string","description":"Header value","examples":["public, max-age=604800"]}}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]}]},"response":{"200":{"type":"array","items":{"type":"object","required":["id","path","name","value"],"properties":{"id":{"type":"string"},"path":{"type":"string"},"name":{"type":"string"},"value":{"type":"string"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const UpdateMaintenance = {"body":{"type":"object","properties":{"scheduledAt":{"description":"The date-time at which the maintenance is scheduled to start. This must be before the pendingMaintenanceBy date-time.","type":"string","format":"date-time"}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"maintenanceRunParam":{"type":"string","pattern":"^mrn-[0-9a-z]{20}$","examples":["mrn-cph1rs3idesc73a2b2mg"],"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["maintenanceRunParam"]}]},"response":{"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const UpdateOwnerLogStream = {"body":{"type":"object","required":["preview"],"properties":{"endpoint":{"description":"The endpoint to stream logs to.","type":"string"},"token":{"description":"The optional token to authenticate the log stream.","type":"string"},"preview":{"type":"string","description":"Whether to send logs or drop them.","enum":["send","drop"]}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"ownerId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the owner (team or personal user) whose log streams should be returned"}},"required":["ownerId"]}]},"response":{"200":{"type":"object","description":"Owner log stream settings","properties":{"ownerId":{"description":"The ID of the owner.","type":"string"},"endpoint":{"description":"The endpoint to stream logs to.","type":"string"},"preview":{"type":"string","description":"Whether to send logs or drop them.\n\n`send` `drop`","enum":["send","drop"]}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const UpdatePostgres = {"body":{"type":"object","properties":{"name":{"type":"string"},"plan":{"type":"string","enum":["free","starter","standard","pro","pro_plus","custom","basic_256mb","basic_1gb","basic_4gb","pro_4gb","pro_8gb","pro_16gb","pro_32gb","pro_64gb","pro_128gb","pro_192gb","pro_256gb","pro_384gb","pro_512gb","accelerated_16gb","accelerated_32gb","accelerated_64gb","accelerated_128gb","accelerated_256gb","accelerated_384gb","accelerated_512gb","accelerated_768gb","accelerated_1024gb"]},"diskSizeGB":{"type":"integer","description":"The number of gigabytes of disk space to allocate for the database"},"enableHighAvailability":{"type":"boolean"},"datadogAPIKey":{"type":"string"},"ipAllowList":{"type":"array","items":{"type":"object","required":["cidrBlock","description"],"properties":{"cidrBlock":{"type":"string"},"description":{"description":"User-provided description of the CIDR block","type":"string"}}}},"readReplicas":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"The display name of the replica instance."}},"required":["name"]}}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"postgresId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":["postgresId"]}]},"response":{"200":{"type":"object","required":["id","ipAllowList","createdAt","updatedAt","dashboardUrl","databaseName","databaseUser","highAvailabilityEnabled","name","owner","project","plan","region","readReplicas","role","status","version","suspended","suspenders"],"properties":{"id":{"type":"string"},"ipAllowList":{"type":"array","items":{"type":"object","required":["cidrBlock","description"],"properties":{"cidrBlock":{"type":"string"},"description":{"description":"User-provided description of the CIDR block","type":"string"}}}},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"},"expiresAt":{"description":"The time at which the database will be expire. Applies to free tier databases only.","type":"string","format":"date-time"},"dashboardUrl":{"type":"string","description":"The URL to view the PostgreSQL instance in the Render Dashboard"},"databaseName":{"type":"string"},"databaseUser":{"type":"string"},"environmentId":{"type":"string"},"highAvailabilityEnabled":{"type":"boolean"},"maintenance":{"type":"object","required":["id","type","scheduledAt","state"],"properties":{"id":{"type":"string","pattern":"^mrn-[0-9a-z]{20}$","examples":["mrn-cph1rs3idesc73a2b2mg"]},"type":{"type":"string"},"scheduledAt":{"type":"string","format":"date-time"},"pendingMaintenanceBy":{"type":"string","format":"date-time","description":"If present, the maintenance run cannot be scheduled for later than this date-time."},"state":{"type":"string","enum":["scheduled","in_progress","user_fix_required","cancelled","succeeded","failed"],"description":"`scheduled` `in_progress` `user_fix_required` `cancelled` `succeeded` `failed`"}}},"name":{"type":"string"},"owner":{"type":"object","required":["id","name","email","type"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"email":{"type":"string"},"twoFactorAuthEnabled":{"type":"boolean","description":"Whether two-factor authentication is enabled for the owner. Only present for user owners."},"type":{"type":"string","enum":["user","team"],"description":"`user` `team`"}}},"plan":{"type":"string","enum":["free","starter","standard","pro","pro_plus","custom","basic_256mb","basic_1gb","basic_4gb","pro_4gb","pro_8gb","pro_16gb","pro_32gb","pro_64gb","pro_128gb","pro_192gb","pro_256gb","pro_384gb","pro_512gb","accelerated_16gb","accelerated_32gb","accelerated_64gb","accelerated_128gb","accelerated_256gb","accelerated_384gb","accelerated_512gb","accelerated_768gb","accelerated_1024gb"],"description":"`free` `starter` `standard` `pro` `pro_plus` `custom` `basic_256mb` `basic_1gb` `basic_4gb` `pro_4gb` `pro_8gb` `pro_16gb` `pro_32gb` `pro_64gb` `pro_128gb` `pro_192gb` `pro_256gb` `pro_384gb` `pro_512gb` `accelerated_16gb` `accelerated_32gb` `accelerated_64gb` `accelerated_128gb` `accelerated_256gb` `accelerated_384gb` `accelerated_512gb` `accelerated_768gb` `accelerated_1024gb`"},"diskSizeGB":{"type":"integer"},"primaryPostgresID":{"type":"string"},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore","virginia"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore` `virginia`"},"readReplicas":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"The replica instance identifier."},"name":{"type":"string","description":"The display name of the replica instance."}},"required":["id","name"]}},"role":{"type":"string","enum":["primary","replica"],"description":"`primary` `replica`"},"status":{"type":"string","enum":["creating","available","unavailable","config_restart","suspended","maintenance_scheduled","maintenance_in_progress","recovery_failed","recovery_in_progress","unknown","updating_instance"],"description":"`creating` `available` `unavailable` `config_restart` `suspended` `maintenance_scheduled` `maintenance_in_progress` `recovery_failed` `recovery_in_progress` `unknown` `updating_instance`"},"version":{"type":"string","description":"The PostgreSQL version\n\n`11` `12` `13` `14` `15` `16`","enum":["11","12","13","14","15","16"]},"suspended":{"type":"string","enum":["suspended","not_suspended"],"description":"`suspended` `not_suspended`"},"suspenders":{"type":"array","items":{"type":"string","enum":["admin","billing","user","parent_service","unknown"],"description":"`admin` `billing` `user` `parent_service` `unknown`"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"409":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const UpdateProject = {"body":{"description":"Input type for updating a project","type":"object","properties":{"name":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"projectId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":["projectId"]}]},"response":{"200":{"description":"A project is a collection of environments","type":"object","required":["id","createdAt","updatedAt","name","owner","environmentIds"],"properties":{"id":{"description":"The ID of the project","type":"string"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"},"name":{"description":"The name of the project","type":"string"},"owner":{"type":"object","required":["id","name","email","type"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"email":{"type":"string"},"twoFactorAuthEnabled":{"type":"boolean","description":"Whether two-factor authentication is enabled for the owner. Only present for user owners."},"type":{"type":"string","enum":["user","team"],"description":"`user` `team`"}}},"environmentIds":{"description":"The environments associated with the project","type":"array","items":{"type":"string","description":"The ID of the environment"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const UpdateRedis = {"body":{"type":"object","description":"Input type for updating a Redis instance","properties":{"name":{"type":"string","description":"The name of the Redis instance"},"plan":{"type":"string","enum":["free","starter","standard","pro","pro_plus","custom"],"x-enum-varnames":["RedisPlanFree","RedisPlanStarter","RedisPlanStandard","RedisPlanPro","RedisPlanPro_plus","RedisPlanCustom"]},"maxmemoryPolicy":{"type":"string","description":"The eviction policy for the Key / Value instance","enum":["noeviction","allkeys_lfu","allkeys_lru","allkeys_random","volatile_lfu","volatile_lru","volatile_random","volatile_ttl"]},"ipAllowList":{"type":"array","items":{"type":"object","required":["cidrBlock","description"],"properties":{"cidrBlock":{"type":"string"},"description":{"description":"User-provided description of the CIDR block","type":"string"}}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"redisId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":["redisId"]}]},"response":{"200":{"type":"object","description":"A Redis instance","required":["id","createdAt","updatedAt","status","region","plan","name","owner","options","ipAllowList","version"],"properties":{"id":{"description":"The ID of the Redis instance","type":"string"},"createdAt":{"description":"The creation time of the Redis instance","type":"string","format":"date-time"},"updatedAt":{"description":"The last updated time of the Redis instance","type":"string","format":"date-time"},"status":{"type":"string","enum":["creating","available","unavailable","config_restart","suspended","maintenance_scheduled","maintenance_in_progress","recovery_failed","recovery_in_progress","unknown","updating_instance"],"description":"`creating` `available` `unavailable` `config_restart` `suspended` `maintenance_scheduled` `maintenance_in_progress` `recovery_failed` `recovery_in_progress` `unknown` `updating_instance`"},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore","virginia"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore` `virginia`"},"plan":{"type":"string","enum":["free","starter","standard","pro","pro_plus","custom"],"x-enum-varnames":["RedisPlanFree","RedisPlanStarter","RedisPlanStandard","RedisPlanPro","RedisPlanPro_plus","RedisPlanCustom"],"description":"`free` `starter` `standard` `pro` `pro_plus` `custom`"},"name":{"description":"The name of the Redis instance","type":"string"},"owner":{"type":"object","required":["id","name","email","type"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"email":{"type":"string"},"twoFactorAuthEnabled":{"type":"boolean","description":"Whether two-factor authentication is enabled for the owner. Only present for user owners."},"type":{"type":"string","enum":["user","team"],"description":"`user` `team`"}}},"options":{"description":"Options for a Redis instance","type":"object","properties":{"maxmemoryPolicy":{"type":"string"}}},"ipAllowList":{"description":"The IP allow list for the Redis instance","type":"array","items":{"type":"object","required":["cidrBlock","description"],"properties":{"cidrBlock":{"type":"string"},"description":{"description":"User-provided description of the CIDR block","type":"string"}}}},"environmentId":{"description":"The ID of the environment the Redis instance is associated with","type":"string"},"version":{"description":"The version of Redis","type":"string"},"maintenance":{"type":"object","required":["id","type","scheduledAt","state"],"properties":{"id":{"type":"string","pattern":"^mrn-[0-9a-z]{20}$","examples":["mrn-cph1rs3idesc73a2b2mg"]},"type":{"type":"string"},"scheduledAt":{"type":"string","format":"date-time"},"pendingMaintenanceBy":{"type":"string","format":"date-time","description":"If present, the maintenance run cannot be scheduled for later than this date-time."},"state":{"type":"string","enum":["scheduled","in_progress","user_fix_required","cancelled","succeeded","failed"],"description":"`scheduled` `in_progress` `user_fix_required` `cancelled` `succeeded` `failed`"}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"409":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const UpdateRegistryCredential = {"body":{"type":"object","required":["name","registry","username","authToken"],"properties":{"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT","AWS_ECR"],"description":"The registry to use this credential with"},"name":{"type":"string"},"username":{"type":"string"},"authToken":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"registryCredentialId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the registry credential"}},"required":["registryCredentialId"]}]},"response":{"200":{"type":"object","required":["id","name","username","registry","updatedAt"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT","AWS_ECR"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT` `AWS_ECR`"},"username":{"type":"string","description":"The username associated with the credential"},"updatedAt":{"type":"string","format":"date-time","description":"Last updated time for the credential"}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"402":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"409":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const UpdateResourceLogStream = {"body":{"type":"object","required":["setting"],"properties":{"endpoint":{"description":"The endpoint to stream logs to.","type":"string"},"token":{"description":"The optional token to authenticate the log stream.","type":"string"},"setting":{"type":"string","description":"Whether to send logs or drop them.","enum":["send","drop"]}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"resourceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the resource (server, cron job, postgres, or redis) whose log streams should be returned"}},"required":["resourceId"]}]},"response":{"200":{"type":"object","description":"Resource log stream overrides","properties":{"resourceId":{"description":"The ID of the resource.","type":"string"},"endpoint":{"description":"The endpoint to stream logs to. Must be present if setting is send. Cannot be present if setting is drop.","type":"string"},"setting":{"type":"string","description":"Whether to send logs or drop them.\n\n`send` `drop`","enum":["send","drop"]}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const UpdateSecretFilesForService = {"body":{"type":"array","items":{"type":"object","required":["name","content"],"properties":{"name":{"type":"string"},"content":{"type":"string"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]}]},"response":{"200":{"type":"array","items":{"type":"object","required":["secretFile","cursor"],"properties":{"secretFile":{"type":"object","required":["name","content"],"properties":{"name":{"type":"string"},"content":{"type":"string"}}},"cursor":{"type":"string"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const UpdateService = {"body":{"type":"object","properties":{"autoDeploy":{"type":"string","enum":["yes","no"],"default":"yes","description":"Default: yes"},"repo":{"type":"string"},"branch":{"type":"string"},"image":{"type":"object","required":["imagePath","ownerId"],"properties":{"ownerId":{"type":"string","description":"The ID of the owner for this image. This should match the owner of the service as well as the owner of any specified registry credential."},"registryCredentialId":{"type":"string","description":"Optional reference to the registry credential passed to the image repository to retrieve this image."},"imagePath":{"type":"string","description":"Path to the image used for this server (e.g docker.io/library/nginx:latest)."}}},"name":{"type":"string"},"buildFilter":{"type":"object","required":["paths","ignoredPaths"],"properties":{"paths":{"type":"array","items":{"type":"string"}},"ignoredPaths":{"type":"array","items":{"type":"string"}}}},"rootDir":{"type":"string"},"serviceDetails":{"oneOf":[{"type":"object","properties":{"buildCommand":{"type":"string"},"publishPath":{"type":"string"},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"default":"no","deprecated":true,"description":"This field has been deprecated. previews.generation should be used in its place.\n\nDefault: `no`"},"previews":{"type":"object","properties":{"generation":{"type":"string","enum":["off","manual","automatic"],"default":"off","description":"Defaults to \"off\"\n\nDefault: `off`"}}}}},{"type":"object","properties":{"envSpecificDetails":{"oneOf":[{"type":"object","properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"registryCredentialId":{"type":"string"}}},{"type":"object","properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"}}}]},"healthCheckPath":{"type":"string"},"maintenanceMode":{"type":"object","required":["enabled","uri"],"properties":{"enabled":{"type":"boolean"},"uri":{"type":"string","description":"The page to be served when [maintenance mode](https://docs.render.com/maintenance-mode) is enabled. When empty, the default maintenance mode page is served."}}},"plan":{"type":"string","enum":["starter","standard","pro","pro_plus","pro_max","pro_ultra"],"default":"starter","description":"Defaults to \"starter\"\n\nDefault: `starter`"},"preDeployCommand":{"type":"string"},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"default":"no","deprecated":true,"description":"This field has been deprecated. previews.generation should be used in its place.\n\nDefault: `no`"},"previews":{"type":"object","properties":{"generation":{"type":"string","enum":["off","manual","automatic"],"default":"off","description":"Defaults to \"off\"\n\nDefault: `off`"}}},"runtime":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime"},"maxShutdownDelaySeconds":{"type":"integer","description":"The maximum amount of time (in seconds) that Render waits for your application process to exit gracefully after sending it a SIGTERM signal.","minimum":1,"maximum":300,"default":30}}},{"type":"object","properties":{"envSpecificDetails":{"oneOf":[{"type":"object","properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"registryCredentialId":{"type":"string"}}},{"type":"object","properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"}}}]},"plan":{"type":"string","enum":["starter","standard","pro","pro_plus","pro_max","pro_ultra"],"default":"starter","description":"Defaults to \"starter\"\n\nDefault: `starter`"},"preDeployCommand":{"type":"string"},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"default":"no","deprecated":true,"description":"This field has been deprecated. previews.generation should be used in its place.\n\nDefault: `no`"},"previews":{"type":"object","properties":{"generation":{"type":"string","enum":["off","manual","automatic"],"default":"off","description":"Defaults to \"off\"\n\nDefault: `off`"}}},"runtime":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime"},"maxShutdownDelaySeconds":{"type":"integer","description":"The maximum amount of time (in seconds) that Render waits for your application process to exit gracefully after sending it a SIGTERM signal.","minimum":1,"maximum":300,"default":30}}},{"type":"object","properties":{"envSpecificDetails":{"oneOf":[{"type":"object","properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"registryCredentialId":{"type":"string"}}},{"type":"object","properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"}}}]},"plan":{"type":"string","enum":["starter","standard","pro","pro_plus","pro_max","pro_ultra"],"default":"starter","description":"Defaults to \"starter\"\n\nDefault: `starter`"},"preDeployCommand":{"type":"string"},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"default":"no","deprecated":true,"description":"This field has been deprecated. previews.generation should be used in its place.\n\nDefault: `no`"},"previews":{"type":"object","properties":{"generation":{"type":"string","enum":["off","manual","automatic"],"default":"off","description":"Defaults to \"off\"\n\nDefault: `off`"}}},"runtime":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime"},"maxShutdownDelaySeconds":{"type":"integer","description":"The maximum amount of time (in seconds) that Render waits for your application process to exit gracefully after sending it a SIGTERM signal.","minimum":1,"maximum":300,"default":30}}},{"type":"object","properties":{"envSpecificDetails":{"oneOf":[{"type":"object","properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"registryCredentialId":{"type":"string"}}},{"type":"object","properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"}}}]},"plan":{"type":"string","enum":["starter","standard","pro","pro_plus","pro_max","pro_ultra"],"default":"starter","description":"Defaults to \"starter\"\n\nDefault: `starter`"},"schedule":{"type":"string"},"runtime":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime"}}}]}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"serviceId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The ID of the service"}},"required":["serviceId"]}]},"response":{"200":{"type":"object","required":["id","name","ownerId","type","createdAt","dashboardUrl","updatedAt","suspended","suspenders","autoDeploy","notifyOnFail","slug","serviceDetails","rootDir"],"properties":{"id":{"type":"string"},"autoDeploy":{"type":"string","enum":["yes","no"],"default":"yes","description":"`yes` `no`"},"branch":{"type":"string"},"buildFilter":{"type":"object","required":["paths","ignoredPaths"],"properties":{"paths":{"type":"array","items":{"type":"string"}},"ignoredPaths":{"type":"array","items":{"type":"string"}}}},"createdAt":{"type":"string","format":"date-time"},"dashboardUrl":{"type":"string","description":"The URL to view the service in the Render Dashboard"},"environmentId":{"type":"string"},"imagePath":{"type":"string"},"name":{"type":"string"},"notifyOnFail":{"type":"string","enum":["default","notify","ignore"],"description":"`default` `notify` `ignore`"},"ownerId":{"type":"string"},"registryCredential":{"type":"object","required":["id","name"],"properties":{"id":{"type":"string"},"name":{"type":"string"}}},"repo":{"type":"string","examples":["https://github.com/render-examples/flask-hello-world"]},"rootDir":{"type":"string"},"slug":{"type":"string"},"suspended":{"type":"string","enum":["suspended","not_suspended"],"description":"`suspended` `not_suspended`"},"suspenders":{"type":"array","items":{"type":"string","enum":["admin","billing","user","parent_service","unknown"],"description":"`admin` `billing` `user` `parent_service` `unknown`"}},"type":{"type":"string","enum":["static_site","web_service","private_service","background_worker","cron_job"],"description":"`static_site` `web_service` `private_service` `background_worker` `cron_job`"},"updatedAt":{"type":"string","format":"date-time"},"serviceDetails":{"oneOf":[{"type":"object","required":["buildCommand","publishPath","url","buildPlan"],"properties":{"buildCommand":{"type":"string"},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"publishPath":{"type":"string"},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"default":"no","deprecated":true,"description":"This field has been deprecated. previews.generation should be used in its place.\n\n`yes` `no`"},"previews":{"type":"object","properties":{"generation":{"type":"string","enum":["off","manual","automatic"],"default":"off","description":"Defaults to \"off\"\n\n`off` `manual` `automatic`"}}},"url":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"}}},{"type":"object","required":["env","runtime","envSpecificDetails","plan","region","numInstances","buildPlan","healthCheckPath","openPorts","url"],"properties":{"autoscaling":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}}},"disk":{"type":"object","required":["id","name","sizeGB","mountPath"],"properties":{"id":{"type":"string","pattern":"^dsk-[0-9a-z]{20}$","examples":["dsk-cph1rs3idesc73a2b2mg"]},"name":{"type":"string"},"sizeGB":{"type":"integer"},"mountPath":{"type":"string"}}},"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"deprecated":true,"description":"This field has been deprecated, runtime should be used in its place.\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry","updatedAt"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT","AWS_ECR"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT` `AWS_ECR`"},"username":{"type":"string","description":"The username associated with the credential"},"updatedAt":{"type":"string","format":"date-time","description":"Last updated time for the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"healthCheckPath":{"type":"string"},"maintenanceMode":{"type":"object","required":["enabled","uri"],"properties":{"enabled":{"type":"boolean"},"uri":{"type":"string","description":"The page to be served when [maintenance mode](https://docs.render.com/maintenance-mode) is enabled. When empty, the default maintenance mode page is served."}}},"numInstances":{"type":"integer","description":"For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."},"openPorts":{"type":"array","items":{"type":"object","required":["port","protocol"],"properties":{"port":{"type":"integer","examples":[10000]},"protocol":{"type":"string","enum":["TCP","UDP"],"description":"`TCP` `UDP`"}}}},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"default":"no","deprecated":true,"description":"This field has been deprecated. previews.generation should be used in its place.\n\n`yes` `no`"},"previews":{"type":"object","properties":{"generation":{"type":"string","enum":["off","manual","automatic"],"default":"off","description":"Defaults to \"off\"\n\n`off` `manual` `automatic`"}}},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore","virginia"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore` `virginia`"},"runtime":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"sshAddress":{"type":"string","description":"The SSH address for the service. Only present for services that have SSH enabled."},"url":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"},"maxShutdownDelaySeconds":{"type":"integer","description":"The maximum amount of time (in seconds) that Render waits for your application process to exit gracefully after sending it a SIGTERM signal.","minimum":1,"maximum":300,"default":30}}},{"type":"object","required":["env","runtime","envSpecificDetails","plan","region","numInstances","buildPlan","openPorts","url"],"properties":{"autoscaling":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}}},"disk":{"type":"object","required":["id","name","sizeGB","mountPath"],"properties":{"id":{"type":"string","pattern":"^dsk-[0-9a-z]{20}$","examples":["dsk-cph1rs3idesc73a2b2mg"]},"name":{"type":"string"},"sizeGB":{"type":"integer"},"mountPath":{"type":"string"}}},"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"deprecated":true,"description":"This field has been deprecated, runtime should be used in its place.\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry","updatedAt"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT","AWS_ECR"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT` `AWS_ECR`"},"username":{"type":"string","description":"The username associated with the credential"},"updatedAt":{"type":"string","format":"date-time","description":"Last updated time for the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"numInstances":{"type":"integer","description":"For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."},"openPorts":{"type":"array","items":{"type":"object","required":["port","protocol"],"properties":{"port":{"type":"integer","examples":[10000]},"protocol":{"type":"string","enum":["TCP","UDP"],"description":"`TCP` `UDP`"}}}},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"default":"no","deprecated":true,"description":"This field has been deprecated. previews.generation should be used in its place.\n\n`yes` `no`"},"previews":{"type":"object","properties":{"generation":{"type":"string","enum":["off","manual","automatic"],"default":"off","description":"Defaults to \"off\"\n\n`off` `manual` `automatic`"}}},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore","virginia"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore` `virginia`"},"runtime":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"sshAddress":{"type":"string","description":"The SSH address for the service. Only present for services that have SSH enabled."},"url":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"},"maxShutdownDelaySeconds":{"type":"integer","description":"The maximum amount of time (in seconds) that Render waits for your application process to exit gracefully after sending it a SIGTERM signal.","minimum":1,"maximum":300,"default":30}}},{"type":"object","required":["env","runtime","envSpecificDetails","plan","region","numInstances","buildPlan"],"properties":{"autoscaling":{"type":"object","required":["enabled","min","max","criteria"],"properties":{"enabled":{"type":"boolean","default":false},"min":{"type":"integer","description":"The minimum number of instances for the service"},"max":{"type":"integer","description":"The maximum number of instances for the service"},"criteria":{"type":"object","required":["cpu","memory"],"properties":{"cpu":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}},"memory":{"type":"object","required":["enabled","percentage"],"properties":{"enabled":{"type":"boolean","default":false},"percentage":{"type":"integer","description":"Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"}}}}}}},"disk":{"type":"object","required":["id","name","sizeGB","mountPath"],"properties":{"id":{"type":"string","pattern":"^dsk-[0-9a-z]{20}$","examples":["dsk-cph1rs3idesc73a2b2mg"]},"name":{"type":"string"},"sizeGB":{"type":"integer"},"mountPath":{"type":"string"}}},"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"deprecated":true,"description":"This field has been deprecated, runtime should be used in its place.\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry","updatedAt"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT","AWS_ECR"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT` `AWS_ECR`"},"username":{"type":"string","description":"The username associated with the credential"},"updatedAt":{"type":"string","format":"date-time","description":"Last updated time for the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"numInstances":{"type":"integer","description":"For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."},"parentServer":{"required":["id","name"],"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"pullRequestPreviewsEnabled":{"type":"string","enum":["yes","no"],"default":"no","deprecated":true,"description":"This field has been deprecated. previews.generation should be used in its place.\n\n`yes` `no`"},"previews":{"type":"object","properties":{"generation":{"type":"string","enum":["off","manual","automatic"],"default":"off","description":"Defaults to \"off\"\n\n`off` `manual` `automatic`"}}},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore","virginia"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore` `virginia`"},"runtime":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"sshAddress":{"type":"string","description":"The SSH address for the service. Only present for services that have SSH enabled."},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"},"maxShutdownDelaySeconds":{"type":"integer","description":"The maximum amount of time (in seconds) that Render waits for your application process to exit gracefully after sending it a SIGTERM signal.","minimum":1,"maximum":300,"default":30}}},{"required":["env","runtime","envSpecificDetails","plan","region","schedule","buildPlan"],"type":"object","properties":{"env":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"deprecated":true,"description":"This field has been deprecated, runtime should be used in its place.\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"envSpecificDetails":{"oneOf":[{"type":"object","required":["dockerCommand","dockerContext","dockerfilePath"],"properties":{"dockerCommand":{"type":"string"},"dockerContext":{"type":"string"},"dockerfilePath":{"type":"string"},"preDeployCommand":{"type":"string"},"registryCredential":{"type":"object","required":["id","name","username","registry","updatedAt"],"properties":{"id":{"type":"string","description":"Unique identifier for this credential"},"name":{"type":"string","description":"Descriptive name for this credential"},"registry":{"type":"string","enum":["GITHUB","GITLAB","DOCKER","GOOGLE_ARTIFACT","AWS_ECR"],"description":"The registry to use this credential with\n\n`GITHUB` `GITLAB` `DOCKER` `GOOGLE_ARTIFACT` `AWS_ECR`"},"username":{"type":"string","description":"The username associated with the credential"},"updatedAt":{"type":"string","format":"date-time","description":"Last updated time for the credential"}}}}},{"type":"object","required":["buildCommand","startCommand"],"properties":{"buildCommand":{"type":"string"},"startCommand":{"type":"string"},"preDeployCommand":{"type":"string"}}}]},"lastSuccessfulRunAt":{"type":"string","format":"date-time"},"plan":{"type":"string","enum":["starter","starter_plus","standard","standard_plus","pro","pro_plus","pro_max","pro_ultra","free","custom"],"description":"The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.\n\n`starter` `starter_plus` `standard` `standard_plus` `pro` `pro_plus` `pro_max` `pro_ultra` `free` `custom`","examples":["starter"]},"region":{"type":"string","enum":["frankfurt","oregon","ohio","singapore","virginia"],"default":"oregon","description":"Defaults to \"oregon\"\n\n`frankfurt` `oregon` `ohio` `singapore` `virginia`"},"runtime":{"type":"string","enum":["docker","elixir","go","node","python","ruby","rust","image"],"description":"Runtime\n\n`docker` `elixir` `go` `node` `python` `ruby` `rust` `image`"},"schedule":{"type":"string"},"buildPlan":{"type":"string","enum":["starter","performance"],"default":"starter","description":"`starter` `performance`"}}}]}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"402":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"406":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"409":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"410":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"429":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"},"503":{"type":"object","properties":{"id":{"type":"string"},"message":{"type":"string"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
export { AddDisk, AddHeaders, AddOrUpdateSecretFile, AddResourcesToEnvironment, AddRoute, AutoscaleService, CancelCronJobRun, CancelDeploy, CancelJob, CreateCustomDomain, CreateDeploy, CreateEnvGroup, CreateEnvironment, CreatePostgres, CreatePostgresBackup, CreateProject, CreateRedis, CreateRegistryCredential, CreateService, DeleteAutoscalingConfig, DeleteCustomDomain, DeleteDisk, DeleteEnvGroup, DeleteEnvGroupEnvVar, DeleteEnvGroupSecretFile, DeleteEnvVar, DeleteEnvironment, DeleteHeader, DeleteOwnerLogStream, DeletePostgres, DeleteProject, DeleteRedis, DeleteRegistryCredential, DeleteResourceLogStream, DeleteRoute, DeleteSecretFile, DeleteService, DisconnectBlueprint, FailoverPostgres, GetActiveConnections, GetBandwidth, GetCpu, GetCpuLimit, GetCpuTarget, GetDiskCapacity, GetDiskUsage, GetEnvVarsForService, GetHttpLatency, GetHttpRequests, GetInstanceCount, GetMemory, GetMemoryLimit, GetMemoryTarget, GetOwnerLogStream, GetReplicationLag, GetResourceLogStream, GetUser, LinkServiceToEnvGroup, ListApplicationFilterValues, ListBlueprintSyncs, ListBlueprints, ListCustomDomains, ListDeploys, ListDisks, ListEnvGroups, ListEnvironments, ListEvents, ListHeaders, ListHttpFilterValues, ListJob, ListLogs, ListLogsValues, ListMaintenance, ListNotificationOverrides, ListOwners, ListPathFilterValues, ListPostgres, ListPostgresBackup, ListProjects, ListRedis, ListRegistryCredentials, ListResourceLogStreams, ListRoutes, ListSecretFilesForService, ListServices, ListSnapshots, PatchOwnerNotificationSettings, PatchRoute, PatchServiceNotificationOverrides, PostJob, PreviewService, PutRoutes, RecoverPostgres, RefreshCustomDomain, RemoveResourcesFromEnvironment, RestartPostgres, RestartService, RestoreSnapshot, ResumePostgres, ResumeService, RetrieveBlueprint, RetrieveCustomDomain, RetrieveDeploy, RetrieveDisk, RetrieveEnvGroup, RetrieveEnvGroupEnvVar, RetrieveEnvGroupSecretFile, RetrieveEnvVar, RetrieveEnvironment, RetrieveJob, RetrieveMaintenance, RetrieveOwner, RetrieveOwnerNotificationSettings, RetrievePostgres, RetrievePostgresConnectionInfo, RetrievePostgresRecoveryInfo, RetrieveProject, RetrieveRedis, RetrieveRedisConnectionInfo, RetrieveRegistryCredential, RetrieveSecretFile, RetrieveService, RetrieveServiceNotificationOverrides, RollbackDeploy, RunCronJob, ScaleService, SubscribeLogs, SuspendPostgres, SuspendService, TriggerMaintenance, UnlinkServiceFromEnvGroup, UpdateBlueprint, UpdateDisk, UpdateEnvGroup, UpdateEnvGroupEnvVar, UpdateEnvGroupSecretFile, UpdateEnvVar, UpdateEnvVarsForService, UpdateEnvironment, UpdateHeaders, UpdateMaintenance, UpdateOwnerLogStream, UpdatePostgres, UpdateProject, UpdateRedis, UpdateRegistryCredential, UpdateResourceLogStream, UpdateSecretFilesForService, UpdateService }
